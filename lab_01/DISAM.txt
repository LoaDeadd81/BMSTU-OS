      disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 1
;Вызов подпрограммы sub_4
020A:0746  E8 0070				call	sub_4			; (07B9)
;Сохранение регистров es, ds, ax, dx
020A:0749  06					push	es
020A:074A  1E					push	ds
020A:074B  50					push	ax
020A:074C  52					push	dx
;Установка сегментных регистров ds, es
020A:074D  B8 0040				mov	ax,40h
020A:0750  8E D8				mov	ds,ax
020A:0752  33 C0				xor	ax,ax			; Zero register
020A:0754  8E C0				mov	es,ax
;Инкремент счётчика таймера
020A:0756  FF 06 006C				inc	word ptr ds:[6Ch]	; (0040:006C=280Eh)
020A:075A  75 04				jnz	loc_3			; Jump if not zero
020A:075C  FF 06 006E				inc	word ptr ds:[6Eh]	; (0040:006E=0Ch)
;Сброс счётчиков таймера, если прошли сутки
020A:0760			loc_3:
020A:0760  83 3E 006E 18			cmp	word ptr ds:[6Eh],18h	; (0040:006E=0Ch)
020A:0765  75 15				jne	loc_4			; Jump if not equal
020A:0767  81 3E 006C 00B0			cmp	word ptr ds:[6Ch],0B0h	; (0040:006C=280Eh)
020A:076D  75 0D				jne	loc_4			; Jump if not equal
;Сам сброс
020A:076F  A3 006E				mov	word ptr ds:[6Eh],ax	; (0040:006E=0Ch)
020A:0772  A3 006C				mov	word ptr ds:[6Ch],ax	; (0040:006C=280Eh)
;Занесение 1 в область памяти по адресу 0040:0070, по прошествию суток
020A:0775  C6 06 0070 01			mov	byte ptr ds:[70h],1	; (0040:0070=0)
020A:077A  0C 08				or	al,8
020A:077C			loc_4:
;Сохранение резистра ax
020A:077C  50					push	ax
;Декремент оставшегося времени до отключения моторчика дисковода
020A:077D  FE 0E 0040				dec	byte ptr ds:[40h]	; (0040:0040=5Eh)
020A:0781  75 0B				jnz	loc_5			; Jump if not zero
;Установка флагов для остановки моторчика
020A:0783  80 26 003F F0			and	byte ptr ds:[3Fh],0F0h	; (0040:003F=0)
;Отправка команды остановки моторчика
020A:0788  B0 0C				mov	al,0Ch
020A:078A  BA 03F2				mov	dx,3F2h
020A:078D  EE					out	dx,al			; port 3F2h, dsk0 contrl output	
020A:078E			loc_5:
;Восстановление регистра ax
020A:078E  58					pop	ax
;Проверка PF по адресу 0040:0314
020A:078F  F7 06 0314 0004			test	word ptr ds:[314h],4	; (0040:0314=3200h)
020A:0795  75 0C				jnz	loc_6			; Jump if not zero
020A:0797  9F					lahf				; Load ah from flags
;Обмен значениями старшего и младшего битов ax
020A:0798  86 E0				xchg	ah,al
;Сохранение ax
020A:079A  50					push	ax
;Неявный вызов пользовательского прерывания
020A:079B  26: FF 1E 0070			call	dword ptr es:[70h]	; (0000:0070=6ADh)
020A:07A0  EB 03				jmp	short loc_7		; (07A5)
020A:07A2  90					nop
020A:07A3			loc_6:
;Вызов пользовательского прерывания 1ch
020A:07A3  CD 1C				int	1Ch			; Timer break (call each 18.2ms)
020A:07A5			loc_7:
;Вызов sub_4
020A:07A5  E8 0011				call	sub_4			; (07B9)
;Сброс контроллера прерывание
020A:07A8  B0 20				mov	al,20h			; ' '
020A:07AA  E6 20				out	20h,al			; port 20h, 8259-1 int command
										;  al = 20h, end of interrupt
;Восстановление регистров dx, ax, ds, es
020A:07AC  5A					pop	dx
020A:07AD  58					pop	ax
020A:07AE  1F					pop	ds
020A:07AF  07					pop	es
020A:07B0  E9 FE99				jmp	$-164h
020A:07B3  C4					db	0C4h
020A:07B4  C4 0E 93E9				les	cx,dword ptr ds:[93E9h]	; (0000:93E9=0E680h) Load 32 bit ptr
020A:07B8  FE					db	0FEh
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 2

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_4		proc	near
;Сохранение регистров ds, ax
020A:07B9  1E					push	ds
020A:07BA  50					push	ax
;Установка сегментного регистра ds
020A:07BB  B8 0040				mov	ax,40h
020A:07BE  8E D8				mov	ds,ax
020A:07C0  9F					lahf				; Load ah from flags
;Проверка флагов DF и старшего бита IOPL
020A:07C1  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:07C7  75 0C				jnz	loc_9			; Jump if not zero
;Сброс флага IF
;lock запрещает доступ к шине другим процессорам на время выполнения данной команды
020A:07C9  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:07D0			loc_8:
020A:07D0  9E					sahf				; Store ah into flags
;Востановление регистров ax, ds
020A:07D1  58					pop	ax
020A:07D2  1F					pop	ds
020A:07D3  EB 03				jmp	short loc_10		; (07D8)
020A:07D5			loc_9:
;Сброс флага IF
020A:07D5  FA					cli				; Disable interrupts
020A:07D6  EB F8				jmp	short loc_8		; (07D0)
020A:07D8			loc_10:
020A:07D8  C3					retn
				sub_4		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_5		proc	near
020A:07D9  1E					push	ds
020A:07DA  50					push	ax
020A:07DB  B8 0040				mov	ax,40h
020A:07DE  8E D8				mov	ds,ax
020A:07E0  9F					lahf				; Load ah from flags
020A:07E1  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:07E7  75 14				jnz	loc_12			; Jump if not zero
020A:07E9  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:07EF  75 0C				jnz	loc_12			; Jump if not zero
020A:07F1  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:07F8			loc_11:
020A:07F8  9E					sahf				; Store ah into flags
020A:07F9  58					pop	ax
020A:07FA  1F					pop	ds
020A:07FB  EB 03				jmp	short loc_13		; (0800)
020A:07FD			loc_12:
020A:07FD  FB					sti				; Enable interrupts
020A:07FE  EB F8				jmp	short loc_11		; (07F8)
020A:0800			loc_13:
020A:0800  C3					retn
				sub_5		endp
  
020A:0801  00 00				add	[bx+si],al
020A:0803  00 00				add	[bx+si],al
020A:0805  00 2E 06FF				add	byte ptr ds:[6FFh],ch	; (0000:06FF=6)
020A:0809  04 08				add	al,8
020A:080B  3D 13FF				cmp	ax,13FFh
020A:080E  75 5B				jne	loc_16			; Jump if not equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 3

020A:0810  83 F9 01				cmp	cx,1
020A:0813  74 40				je	loc_14			; Jump if equal
020A:0815  56					push	si
020A:0816  BE 00A4				mov	si,0A4h
020A:0819  2E: 2B 36 0802			sub	si,word ptr cs:[802h]	; (020A:0802=0)
020A:081E  3B CE				cmp	cx,si
020A:0820  73 3E				jae	loc_15			; Jump if above or =
020A:0822  57					push	di
020A:0823  51					push	cx
020A:0824  52					push	dx
020A:0825  1E					push	ds
020A:0826  06					push	es
020A:0827  8C C2				mov	dx,es
020A:0829  8E DA				mov	ds,dx
020A:082B  BA B000				mov	dx,0B000h
020A:082E  8E C2				mov	es,dx
020A:0830  8B D1				mov	dx,cx
020A:0832  8B F7				mov	si,di
020A:0834  2E: 8B 3E 0802			mov	di,word ptr cs:[802h]	; (020A:0802=0)
020A:0839  FC					cld				; Clear direction
020A:083A  D1 E9				shr	cx,1			; Shift w/zeros fill
020A:083C  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
020A:083E  80 D1 00				adc	cl,0
020A:0841  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:0843  2E: 01 16 0802			add	word ptr cs:[802h],dx	; (020A:0802=0)
020A:0848  07					pop	es
020A:0849  1F					pop	ds
020A:084A  5A					pop	dx
020A:084B  59					pop	cx
020A:084C  5F					pop	di
020A:084D  5E					pop	si
020A:084E  F9					stc				; Set carry flag
020A:084F  2E: FF 0E 0804			dec	word ptr cs:[804h]	; (020A:0804=0)
020A:0854  C3					retn
020A:0855			loc_14:
020A:0855  50					push	ax
020A:0856  B4 0E				mov	ah,0Eh
020A:0858  26: 8A 05				mov	al,es:[di]
020A:085B  E8 0012				call	sub_7			; (0870)
020A:085E  58					pop	ax
020A:085F  C3					retn
020A:0860			loc_15:
020A:0860  5E					pop	si
020A:0861  2E: FF 0E 0804			dec	word ptr cs:[804h]	; (020A:0804=0)
020A:0866  C4					db	0C4h
020A:0867  C4 42 F9				les	ax,dword ptr [bp+si-7]	; Load 32 bit ptr
020A:086A  C3					retn
020A:086B			loc_16:
020A:086B  80 FC 0E				cmp	ah,0Eh
020A:086E  75 28				jne	loc_17			; Jump if not equal
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_7		proc	near
020A:0870  56					push	si
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 4

020A:0871  2E: 8B 36 0802			mov	si,word ptr cs:[802h]	; (020A:0802=0)
020A:0876  81 FE 00A4				cmp	si,0A4h
020A:087A  73 E4				jae	loc_15			; Jump if above or =
020A:087C  1E					push	ds
020A:087D  BE B000				mov	si,0B000h
020A:0880  8E DE				mov	ds,si
020A:0882  2E: 8B 36 0802			mov	si,word ptr cs:[802h]	; (020A:0802=0)
020A:0887  88 04				mov	[si],al
020A:0889  46					inc	si
020A:088A  2E: 89 36 0802			mov	word ptr cs:[802h],si	; (020A:0802=0)
020A:088F  1F					pop	ds
020A:0890  5E					pop	si
020A:0891  F9					stc				; Set carry flag
020A:0892  2E: FF 0E 0804			dec	word ptr cs:[804h]	; (020A:0804=0)
020A:0897  C3					retn
				sub_7		endp
  
020A:0898			loc_17:
020A:0898  50					push	ax
020A:0899  B8 13FE				mov	ax,13FEh
020A:089C  C4					db	0C4h
020A:089D  C4 42 58				les	ax,dword ptr [bp+si+58h]	; Load 32 bit ptr
020A:08A0  F8					clc				; Clear carry flag
020A:08A1  2E: FF 0E 0804			dec	word ptr cs:[804h]	; (020A:0804=0)
020A:08A6  C3					retn
020A:08A7  00			data_160	db	0
020A:08A8  00			data_161	db	0
020A:08A9  2E: 80 3E 08A7 02			cmp	cs:data_160,2		; (020A:08A7=0)
020A:08AF  75 05				jne	loc_18			; Jump if not equal
020A:08B1  E8 FF52		;*		call	sub_6			;*(0806)
020A:08B1  E8 52 FF				db	0E8h, 52h,0FFh
020A:08B4  72 5F				jc	loc_24			; Jump if carry Set
020A:08B6			loc_18:
020A:08B6  2E: 80 3E 08A7 01			cmp	cs:data_160,1		; (020A:08A7=0)
020A:08BC  74 5D				je	loc_26			; Jump if equal
020A:08BE  80 FC 00				cmp	ah,0
020A:08C1  74 30				je	loc_22			; Jump if equal
020A:08C3  80 FC 1C				cmp	ah,1Ch
020A:08C6  77 0B				ja	loc_19			; Jump if above
020A:08C8  80 FC 04				cmp	ah,4
020A:08CB  74 20				je	loc_21			; Jump if equal
020A:08CD  C4					db	0C4h
020A:08CE  C4 42 EB				les	ax,dword ptr [bp+si-15h]	; Load 32 bit ptr
020A:08D1  43					inc	bx
020A:08D2  90					nop
020A:08D3			loc_19:
020A:08D3  80 FC 4F				cmp	ah,4Fh			; 'O'
020A:08D6  75 06				jne	loc_20			; Jump if not equal
020A:08D8  C4					db	0C4h
020A:08D9  C4 BE 73EB				les	di,dword ptr [bp+73EBh]	; Load 32 bit ptr
020A:08DD  90					nop
020A:08DE			loc_20:
020A:08DE  80 FC F0				cmp	ah,0F0h
020A:08E1  72 35				jb	loc_25			; Jump if below
020A:08E3  80 FC F7				cmp	ah,0F7h
020A:08E6  76 05				jbe	loc_21			; Jump if below or =
020A:08E8  80 FC FA				cmp	ah,0FAh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 5

020A:08EB  75 2B				jne	loc_25			; Jump if not equal
020A:08ED			loc_21:
020A:08ED  C4					db	0C4h
020A:08EE  C4 BE 23EB				les	di,dword ptr [bp+23EBh]	; Load 32 bit ptr
020A:08F2  90					nop
020A:08F3			loc_22:
020A:08F3  2E: C6 06 08A8 01			mov	cs:data_161,1		; (020A:08A8=0)
020A:08F9  C4					db	0C4h
020A:08FA  C4 BE 9090				les	di,dword ptr [bp-6F70h]	; Load 32 bit ptr
020A:08FE  50					push	ax
020A:08FF  25 007F				and	ax,7Fh
020A:0902  3C 03				cmp	al,3
020A:0904  76 08				jbe	loc_23			; Jump if below or =
020A:0906  3C 07				cmp	al,7
020A:0908  74 04				je	loc_23			; Jump if equal
020A:090A  58					pop	ax
020A:090B  EB 0E				jmp	short loc_26		; (091B)
020A:090D  90					nop
020A:090E			loc_23:
020A:090E  58					pop	ax
020A:090F  2E: C6 06 08A8 00			mov	cs:data_161,0		; (020A:08A8=0)
020A:0915			loc_24:
020A:0915  E9 FD34				jmp	$-2C9h
020A:0918			loc_25:
020A:0918  F9					stc				; Set carry flag
020A:0919  EB FA				jmp	short loc_24		; (0915)
020A:091B			loc_26:
020A:091B  2E: C6 06 08A8 00			mov	cs:data_161,0		; (020A:08A8=0)
020A:0921  3D 13FF				cmp	ax,13FFh
020A:0924  74 2F				je	loc_30			; Jump if equal
020A:0926  80 FC F0				cmp	ah,0F0h
020A:0929  72 0D				jb	loc_27			; Jump if below
020A:092B  80 FC F7				cmp	ah,0F7h
020A:092E  76 BD				jbe	loc_21			; Jump if below or =
020A:0930  80 FC FA				cmp	ah,0FAh
020A:0933  74 B8				je	loc_21			; Jump if equal
020A:0935  EB 19				jmp	short loc_29		; (0950)
020A:0937  90					nop
020A:0938			loc_27:
020A:0938  80 FC 04				cmp	ah,4
020A:093B  74 B0				je	loc_21			; Jump if equal
020A:093D  80 FC 00				cmp	ah,0
020A:0940  75 06				jne	loc_28			; Jump if not equal
020A:0942  C4					db	0C4h
020A:0943  C4 BE 09EB				les	di,dword ptr [bp+9EBh]	; Load 32 bit ptr
020A:0947  90					nop
020A:0948			loc_28:
020A:0948  80 FC 11				cmp	ah,11h
020A:094B  75 03				jne	loc_29			; Jump if not equal
020A:094D  C4					db	0C4h
020A:094E  C4 BE 22EA				les	di,dword ptr [bp+22EAh]	; Load 32 bit ptr
020A:0952  00 00				add	[bx+si],al
020A:0954  C0					db	0C0h
020A:0955			loc_30:
020A:0955  56					push	si
020A:0956  57					push	di
020A:0957  55					push	bp
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 6

  
020A:0958			locloop_31:
020A:0958  BA 0046				mov	dx,46h
020A:095B  52					push	dx
020A:095C  0E					push	cs
020A:095D  BB 096C				mov	bx,96Ch
020A:0960  53					push	bx
020A:0961  BB 0007				mov	bx,7
020A:0964  B4 0E				mov	ah,0Eh
020A:0966  26: 8A 05				mov	al,es:[di]
020A:0969  47					inc	di
020A:096A  EB E4		;*		jmp	short loc_29		;*(0950)
020A:096A  EB E4				db	0EBh,0E4h
020A:096C  E2 EA				loop	locloop_31		; Loop if cx > 0
  
020A:096E  5D					pop	bp
020A:096F  5F					pop	di
020A:0970  5E					pop	si
020A:0971  B8 0001				mov	ax,1
020A:0974			loc_32:
020A:0974  EB 9F				jmp	short loc_24		; (0915)
020A:0976  2E: 80 3E 08A7 02			cmp	cs:data_160,2		; (020A:08A7=0)
020A:097C  75 05				jne	loc_33			; Jump if not equal
020A:097E  E8 FE85		;*		call	sub_6			;*(0806)
020A:097E  E8 85 FE				db	0E8h, 85h,0FEh
020A:0981  72 F1				jc	loc_32			; Jump if carry Set
020A:0983			loc_33:
020A:0983  2E: 80 3E 08A7 01			cmp	cs:data_160,1		; (020A:08A7=0)
020A:0989  74 06				je	loc_34			; Jump if equal
020A:098B  C4					db	0C4h
020A:098C  C4 10				les	dx,dword ptr [bx+si]	; Load 32 bit ptr
020A:098E  E9 FCBB				jmp	$-342h
020A:0991			loc_34:
020A:0991  80 FC 13				cmp	ah,13h
020A:0994  75 04				jne	loc_35			; Jump if not equal
020A:0996  3C FF				cmp	al,0FFh
020A:0998  74 BB				je	loc_30			; Jump if equal
020A:099A			loc_35:
020A:099A  EA F000:FF53		;*		jmp	far ptr loc_2078	;*(F000:FF53)
020A:099A  EA 53 FF 00 F0			db	0EAh, 53h,0FFh, 00h,0F0h
020A:099F  CD 10				int	10h			; Video display   ah=functn 00h
										;  set display mode in al
020A:09A1  C4					db	0C4h
020A:09A2  C4					db	0C4h
020A:09A3  FE C4				inc	ah
020A:09A5  C4 11				les	dx,dword ptr [bx+di]	; Load 32 bit ptr
020A:09A7  E9 FCA2				jmp	$-35Bh
020A:09AA  C4					db	0C4h
020A:09AB  C4 12				les	dx,dword ptr [bp+si]	; Load 32 bit ptr
020A:09AD  E9 FC9C				jmp	$-361h
020A:09B0  C4					db	0C4h
020A:09B1  C4 14				les	dx,dword ptr [si]	; Load 32 bit ptr
020A:09B3  E9 FC96				jmp	$-367h
020A:09B6  87 DB				xchg	bx,bx
020A:09B8  0000			data_163	dw	0
020A:09BA  00 00				add	[bx+si],al
020A:09BC  2630			data_164	dw	2630h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 7

020A:09BE  00 00				add	[bx+si],al
020A:09C0  0032			data_165	dw	32h
020A:09C2  00 00				add	[bx+si],al
020A:09C4  1E					push	ds
020A:09C5  53					push	bx
020A:09C6  BB 0040				mov	bx,40h
020A:09C9  8E DB				mov	ds,bx
020A:09CB  80 FC 10				cmp	ah,10h
020A:09CE  E8 FDE8				call	sub_4			; (07B9)
020A:09D1  72 03				jc	locloop_36		; Jump if carry Set
020A:09D3  E9 00E0				jmp	$+0E3h
  
020A:09D6			locloop_36:
020A:09D6  0A E4				or	ah,ah			; Zero ?
020A:09D8  74 3E				jz	loc_41			; Jump if zero
020A:09DA  FE CC				dec	ah
020A:09DC  74 74				jz	loc_45			; Jump if zero
020A:09DE  FE CC				dec	ah
020A:09E0  74 11				jz	loc_38			; Jump if zero
020A:09E2  FE CC				dec	ah
020A:09E4  74 08				jz	loc_37			; Jump if zero
020A:09E6  FE CC				dec	ah
020A:09E8  74 04				jz	loc_37			; Jump if zero
020A:09EA  FE CC				dec	ah
020A:09EC  74 0A				jz	loc_39			; Jump if zero
020A:09EE			loc_37:
020A:09EE  5B					pop	bx
020A:09EF  1F					pop	ds
020A:09F0  E9 FC59				jmp	$-3A4h
020A:09F3			loc_38:
020A:09F3  A0 0017				mov	al,byte ptr data_74+1	; (020A:0017=0)
020A:09F6  EB F6				jmp	short loc_37		; (09EE)
020A:09F8			loc_39:
020A:09F8  56					push	si
020A:09F9  8B 1E 001C				mov	bx,word ptr data_78+2	; (020A:001C=148Fh)
020A:09FD  8B F3				mov	si,bx
020A:09FF  E8 01B9				call	sub_12			; (0BBB)
020A:0A02  3B 1E 001A				cmp	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A06  74			data_166	db	74h			; Data table (indexed access)
020A:0A07  0B 89 890C				or	cx,word ptr ds:[890Ch][bx+di]	; (020A:890C=5800h)
020A:0A0B  1E					push	ds
020A:0A0C  1C			data_167	db	1Ch			; Data table (indexed access)
020A:0A0D  00			data_168	db	0
020A:0A0E  B0 00				mov	al,0
020A:0A10  5E					pop	si
020A:0A11  EB DB				jmp	short loc_37		; (09EE)
020A:0A13			loc_40:
020A:0A13  B0 01				mov	al,1
020A:0A15  5E					pop	si
020A:0A16  EB D6				jmp	short loc_37		; (09EE)
020A:0A18			loc_41:
020A:0A18  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A1C  3B 1E 001C				cmp	bx,word ptr data_78+2	; (020A:001C=148Fh)
020A:0A20  75 13				jne	loc_43			; Jump if not equal
020A:0A22  E8 FDB4				call	sub_5			; (07D9)
020A:0A25  B8 9002				mov	ax,9002h
020A:0A28  CD 15				int	15h			; General services, ah=func 90h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 8

										;  device busy, al=type
020A:0A2A			loc_42:
020A:0A2A  E8 FD8C				call	sub_4			; (07B9)
020A:0A2D  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A31  3B 1E 001C				cmp	bx,word ptr data_78+2	; (020A:001C=148Fh)
020A:0A35			loc_43:
020A:0A35  E8 0190				call	sub_13			; (0BC8)
020A:0A38  75 05				jnz	loc_44			; Jump if not zero
020A:0A3A  E8 00E3				call	sub_8			; (0B20)
020A:0A3D  EB EB				jmp	short loc_42		; (0A2A)
020A:0A3F			loc_44:
020A:0A3F  8B 07				mov	ax,[bx]
020A:0A41  E8 0177				call	sub_12			; (0BBB)
020A:0A44  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (020A:001A=0AE9Ch)
020A:0A48  E8 0129				call	sub_11			; (0B74)
020A:0A4B  72 DD				jc	loc_42			; Jump if carry Set
020A:0A4D  E8 00FC				call	sub_9			; (0B4C)
020A:0A50  EB 9C				jmp	short loc_37		; (09EE)
020A:0A52			loc_45:
020A:0A52  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A56  3B 1E 001C				cmp	bx,word ptr data_78+2	; (020A:001C=148Fh)
020A:0A5A  8B 07				mov	ax,[bx]
020A:0A5C  E8 0169				call	sub_13			; (0BC8)
020A:0A5F  74 2F				jz	loc_47			; Jump if zero
020A:0A61  E8 00E8				call	sub_9			; (0B4C)
020A:0A64  E8 010D				call	sub_11			; (0B74)
020A:0A67  E8 FD6F				call	sub_5			; (07D9)
020A:0A6A  73 45				jnc	loc_49			; Jump if carry=0
020A:0A6C  E8 014C				call	sub_12			; (0BBB)
020A:0A6F  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (020A:001A=0AE9Ch)
020A:0A73  EB DD				jmp	short loc_45		; (0A52)
020A:0A75			loc_46:
020A:0A75  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A79  3B 1E 001C				cmp	bx,word ptr data_78+2	; (020A:001C=148Fh)
020A:0A7D  8B 07				mov	ax,[bx]
020A:0A7F  E8 0146				call	sub_13			; (0BC8)
020A:0A82  74 0C				jz	loc_47			; Jump if zero
020A:0A84  E8 00C5				call	sub_9			; (0B4C)
020A:0A87  E8 00D1				call	sub_10			; (0B5B)
020A:0A8A  E8 FD4C				call	sub_5			; (07D9)
020A:0A8D  EB 22				jmp	short loc_49		; (0AB1)
020A:0A8F  90					nop
020A:0A90			loc_47:
020A:0A90  E8 FD46				call	sub_5			; (07D9)
020A:0A93  50					push	ax
020A:0A94  9F					lahf				; Load ah from flags
020A:0A95  50					push	ax
020A:0A96  2E: A1 09B8				mov	ax,cs:data_163		; (020A:09B8=0)
020A:0A9A  2E: 3B 06 09C0			cmp	ax,cs:data_165		; (020A:09C0=32h)
020A:0A9F  72 08				jb	loc_48			; Jump if below
020A:0AA1  B4 01				mov	ah,1
020A:0AA3  C4					db	0C4h
020A:0AA4  C4 16 06EB				les	dx,dword ptr ds:[6EBh]	; (020A:06EB=52D2h) Load 32 bit ptr
020A:0AA8  90					nop
020A:0AA9			loc_48:
020A:0AA9  2E: FF 06 09BC			inc	cs:data_164		; (020A:09BC=26FAh)
020A:0AAE  58					pop	ax
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 9

020A:0AAF  9E					sahf				; Store ah into flags
020A:0AB0  58					pop	ax
020A:0AB1			loc_49:
020A:0AB1  5B					pop	bx
020A:0AB2  1F					pop	ds
020A:0AB3  CA 0002				retf	2
020A:0AB6  80 EC 10				sub	ah,10h
020A:0AB9  74 2C				jz	loc_51			; Jump if zero
020A:0ABB  FE CC				dec	ah
020A:0ABD  74 B6				jz	loc_46			; Jump if zero
020A:0ABF  FE CC				dec	ah
020A:0AC1  74 03				jz	loc_50			; Jump if zero
020A:0AC3  E9 FF28				jmp	loc_37			; (09EE)
020A:0AC6			loc_50:
020A:0AC6  A0 0018				mov	al,byte ptr data_74+2	; (020A:0018=0)
020A:0AC9  8A E0				mov	ah,al
020A:0ACB  24 04				and	al,4
020A:0ACD  51					push	cx
020A:0ACE  B1 05				mov	cl,5
020A:0AD0  D2 E0				shl	al,cl			; Shift w/zeros fill
020A:0AD2  59					pop	cx
020A:0AD3  80 E4 73				and	ah,73h			; 's'
020A:0AD6  0A C4				or	al,ah
020A:0AD8  8A 26 0096				mov	ah,byte ptr ds:[96h]	; (020A:0096=0)
020A:0ADC  80 E4 0C				and	ah,0Ch
020A:0ADF  E00A 17A0		data_171	dw	0E00Ah, 17A0h
020A:0AE3  E900 FF07		data_172	dw	0E900h, 0FF07h
020A:0AE7			loc_51:
020A:0AE7  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0AEB  3B 1E 001C				cmp	bx,word ptr data_78+2	; (020A:001C=148Fh)
020A:0AEF  75 13				jne	loc_53			; Jump if not equal
020A:0AF1  E8 FCE5				call	sub_5			; (07D9)
020A:0AF4  B8 9002				mov	ax,9002h
020A:0AF7  CD 15				int	15h			; General services, ah=func 90h
										;  device busy, al=type
020A:0AF9			loc_52:
020A:0AF9  E8 FCBD				call	sub_4			; (07B9)
020A:0AFC  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0B00  3B 1E 001C				cmp	bx,word ptr data_78+2	; (020A:001C=148Fh)
020A:0B04			loc_53:
020A:0B04  E8 00C1				call	sub_13			; (0BC8)
020A:0B07  75 05				jnz	loc_54			; Jump if not zero
020A:0B09  E8 0014				call	sub_8			; (0B20)
020A:0B0C  EB EB				jmp	short loc_52		; (0AF9)
020A:0B0E			loc_54:
020A:0B0E  8B 07				mov	ax,[bx]
020A:0B10  E8 00A8				call	sub_12			; (0BBB)
020A:0B13  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (020A:001A=0AE9Ch)
020A:0B17  E8 0041				call	sub_10			; (0B5B)
020A:0B1A  E8 002F				call	sub_9			; (0B4C)
020A:0B1D  E9 FECE				jmp	loc_37			; (09EE)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_8		proc	near
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 10

020A:0B20  50					push	ax
020A:0B21  E8 FCB5				call	sub_5			; (07D9)
020A:0B24  B4 02				mov	ah,2
020A:0B26  C4					db	0C4h
020A:0B27  C4 16 1E8B				les	dx,dword ptr ds:[1E8Bh]	; (020A:1E8B=0) Load 32 bit ptr
020A:0B2B  1A 00				sbb	al,[bx+si]
020A:0B2D  3B 1E 001C				cmp	bx,word ptr data_78+2	; (020A:001C=148Fh)
020A:0B31  75 17				jne	loc_57			; Jump if not equal
020A:0B33  2E: A1 09B8				mov	ax,cs:data_163		; (020A:09B8=0)
020A:0B37  2E: 3B 06 09C0			cmp	ax,cs:data_165		; (020A:09C0=32h)
020A:0B3C  73 07				jae	loc_56			; Jump if above or =
020A:0B3E  2E: FF 06 09BC			inc	cs:data_164		; (020A:09BC=2772h)
020A:0B43  EB E4		;*		jmp	short loc_55		;*(0B29)
020A:0B43  EB E4				db	0EBh,0E4h
020A:0B45			loc_56:
020A:0B45  B4 01				mov	ah,1
020A:0B47  C4					db	0C4h
020A:0B48  C4 16 C358				les	dx,dword ptr ds:[0C358h]	; (020A:C358=2B43h) Load 32 bit ptr
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_9:
020A:0B4C  2E: C7 06 09B8 0000			mov	cs:data_163,0		; (020A:09B8=0)
020A:0B53  2E: C7 06 09BC 0000			mov	cs:data_164,0		; (020A:09BC=2782h)
020A:0B5A  C3					retn
				sub_8		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_10		proc	near
020A:0B5B  53					push	bx
020A:0B5C  50					push	ax
020A:0B5D  9F					lahf				; Load ah from flags
020A:0B5E  8B D8				mov	bx,ax
020A:0B60  58					pop	ax
020A:0B61  53					push	bx
020A:0B62  3C F0				cmp	al,0F0h
020A:0B64  75 06				jne	loc_58			; Jump if not equal
020A:0B66  0A E4				or	ah,ah			; Zero ?
020A:0B68  74 02				jz	loc_58			; Jump if zero
020A:0B6A  32 C0				xor	al,al			; Zero register
020A:0B6C			loc_58:
020A:0B6C  8B D8				mov	bx,ax
020A:0B6E  58					pop	ax
020A:0B6F  9E					sahf				; Store ah into flags
020A:0B70  8B C3				mov	ax,bx
020A:0B72  5B					pop	bx
020A:0B73  C3					retn
				sub_10		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 11

  
				sub_11		proc	near
020A:0B74  53					push	bx
020A:0B75  50					push	ax
020A:0B76  9F					lahf				; Load ah from flags
020A:0B77  8B D8				mov	bx,ax
020A:0B79  58					pop	ax
020A:0B7A  53					push	bx
020A:0B7B  80 FC E0				cmp	ah,0E0h
020A:0B7E  75 0F				jne	loc_59			; Jump if not equal
020A:0B80  B4 1C				mov	ah,1Ch
020A:0B82  3C 0D				cmp	al,0Dh
020A:0B84  74 23				je	loc_61			; Jump if equal
020A:0B86  3C 0A				cmp	al,0Ah
020A:0B88  74 1F				je	loc_61			; Jump if equal
020A:0B8A  B4 35				mov	ah,35h			; '5'
020A:0B8C  EB 1B				jmp	short loc_61		; (0BA9)
020A:0B8E  90					nop
020A:0B8F			loc_59:
020A:0B8F  80 FC 84				cmp	ah,84h
020A:0B92  77 1E				ja	loc_62			; Jump if above
020A:0B94  3C F0				cmp	al,0F0h
020A:0B96  75 07				jne	loc_60			; Jump if not equal
020A:0B98  0A E4				or	ah,ah			; Zero ?
020A:0B9A  74 0D				jz	loc_61			; Jump if zero
020A:0B9C  EB 14				jmp	short loc_62		; (0BB2)
020A:0B9E  90					nop
020A:0B9F			loc_60:
020A:0B9F  3C E0				cmp	al,0E0h
020A:0BA1  75 06				jne	loc_61			; Jump if not equal
020A:0BA3  0A E4				or	ah,ah			; Zero ?
020A:0BA5  74 02				jz	loc_61			; Jump if zero
020A:0BA7  32 C0				xor	al,al			; Zero register
020A:0BA9			loc_61:
020A:0BA9  8B D8				mov	bx,ax
020A:0BAB  58					pop	ax
020A:0BAC  9E					sahf				; Store ah into flags
020A:0BAD  8B C3				mov	ax,bx
020A:0BAF  5B					pop	bx
020A:0BB0  F8					clc				; Clear carry flag
020A:0BB1  C3					retn
020A:0BB2			loc_62:
020A:0BB2  8B D8				mov	bx,ax
020A:0BB4  58					pop	ax
020A:0BB5  9E					sahf				; Store ah into flags
020A:0BB6  8B C3				mov	ax,bx
020A:0BB8  5B					pop	bx
020A:0BB9  F9					stc				; Set carry flag
020A:0BBA  C3					retn
				sub_11		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_12		proc	near
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 12

020A:0BBB  43					inc	bx
020A:0BBC  43					inc	bx
020A:0BBD  3B 1E 0082				cmp	bx,word ptr ds:[82h]	; (020A:0082=10h)
020A:0BC1  75 04				jne	loc_63			; Jump if not equal
020A:0BC3  8B 1E 0080				mov	bx,word ptr ds:[80h]	; (020A:0080=1850h)
020A:0BC7			loc_63:
020A:0BC7  C3					retn
				sub_12		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_13		proc	near
020A:0BC8  53					push	bx
020A:0BC9  51					push	cx
020A:0BCA  50					push	ax
020A:0BCB  9F					lahf				; Load ah from flags
020A:0BCC  50					push	ax
020A:0BCD  A0 0017				mov	al,byte ptr data_74+1	; (020A:0017=0)
020A:0BD0  24 70				and	al,70h			; 'p'
020A:0BD2  B1 04				mov	cl,4
020A:0BD4  D2 E8				shr	al,cl			; Shift w/zeros fill
020A:0BD6  24 07				and	al,7
020A:0BD8  8A 1E 0097				mov	bl,byte ptr ds:[97h]	; (020A:0097=0)
020A:0BDC  32 D8				xor	bl,al
020A:0BDE  80 E3 07				and	bl,7
020A:0BE1  74 25				jz	loc_64			; Jump if zero
020A:0BE3  06F6			data_173	dw	6F6h
020A:0BE5  0097			data_174	dw	97h
020A:0BE7  7540			data_175	dw	7540h
020A:0BE9  801E			data_176	dw	801Eh
020A:0BEB  970E			data_177	dw	970Eh
020A:0BED  4000			data_178	dw	4000h
020A:0BEF  D2 E3				shl	bl,cl			; Shift w/zeros fill
020A:0BF1  C30A			data_179	dw	0C30Ah
020A:0BF3  03B4			data_180	dw	3B4h
020A:0BF5  C4					db	0C4h
020A:0BF6  C4 16 2680				les	dx,dword ptr ds:[2680h]	; (020A:2680=6572h) Load 32 bit ptr
020A:0BFA  97					xchg	ax,di
020A:0BFB  F800			data_183	dw	0F800h
020A:0BFD  24 0F				and	al,0Fh
020A:0BFF  08 06 0097				or	byte ptr ds:[97h],al	; (020A:0097=0)
020A:0C03  80 26 0097 BF			and	byte ptr ds:[97h],0BFh	; (020A:0097=0)
020A:0C08			loc_64:
020A:0C08  58					pop	ax
020A:0C09  9E					sahf				; Store ah into flags
020A:0C0A  58					pop	ax
020A:0C0B  59					pop	cx
020A:0C0C  5B					pop	bx
020A:0C0D  C3					retn
				sub_13		endp
  
020A:0C0E  C4					db	0C4h
020A:0C0F  C4 18				les	bx,dword ptr [bx+si]	; Load 32 bit ptr
020A:0C11  E9 FA38				jmp	$-5C5h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 13

020A:0C14  C4					db	0C4h
020A:0C15  C4 19				les	bx,dword ptr [bx+di]	; Load 32 bit ptr
020A:0C17  E9 FA32				jmp	$-5CBh
020A:0C1A  280E			data_185	dw	280Eh
020A:0C1C  000C			data_186	dw	0Ch
020A:0C1E  00			data_187	db	0
020A:0C1F  E8 FBB7				call	sub_5			; (07D9)
020A:0C22  80 FC 02				cmp	ah,2
020A:0C25  72 06				jb	loc_65			; Jump if below
020A:0C27  C4					db	0C4h
020A:0C28  C4 1A				les	bx,dword ptr [bp+si]	; Load 32 bit ptr
020A:0C2A  E9 FA1F				jmp	$-5DEh
020A:0C2D			loc_65:
020A:0C2D  1E					push	ds
020A:0C2E  53					push	bx
020A:0C2F  50					push	ax
020A:0C30  B8 0040				mov	ax,40h
020A:0C33  8E D8				mov	ds,ax
020A:0C35  58					pop	ax
020A:0C36  E8 FB80				call	sub_4			; (07B9)
020A:0C39  0A E4				or	ah,ah			; Zero ?
020A:0C3B  75 3F				jnz	loc_68			; Jump if not zero
020A:0C3D			loc_66:
020A:0C3D  A0 0070				mov	al,byte ptr ds:[70h]	; (0040:0070=0)
020A:0C40  8B 0E 006E				mov	cx,word ptr ds:[6Eh]	; (0040:006E=0Ch)
020A:0C44  8B 16 006C				mov	dx,word ptr ds:[6Ch]	; (0040:006C=280Eh)
020A:0C48  2E: 39 0E 0C1C			cmp	cs:data_186,cx		; (020A:0C1C=0Ch)
020A:0C4D  75 35				jne	loc_69			; Jump if not equal
020A:0C4F  2E: 8B 1E 0C1A			mov	bx,cs:data_185		; (020A:0C1A=280Eh)
020A:0C54  3B DA				cmp	bx,dx
020A:0C56  74 05				je	loc_67			; Jump if equal
020A:0C58  43					inc	bx
020A:0C59  3B DA				cmp	bx,dx
020A:0C5B  75 27				jne	loc_69			; Jump if not equal
020A:0C5D			loc_67:
020A:0C5D  2E: FE 06 0C1E			inc	cs:data_187		; (020A:0C1E=0)
020A:0C62  2E: 80 3E 0C1E 10			cmp	cs:data_187,10h		; (020A:0C1E=0)
020A:0C68  72 20				jb	loc_70			; Jump if below
020A:0C6A  E8 FB6C				call	sub_5			; (07D9)
020A:0C6D  33 C0				xor	ax,ax			; Zero register
020A:0C6F  2E: FF 0E 0C1A			dec	cs:data_185		; (020A:0C1A=280Eh)
020A:0C74  C4					db	0C4h
020A:0C75  C4 5A E8				les	bx,dword ptr [bp+si-18h]	; Load 32 bit ptr
020A:0C78  3F					aas				; Ascii adjust
020A:0C79  FB					sti				; Enable interrupts
020A:0C7A  EB C1				jmp	short loc_66		; (0C3D)
020A:0C7C			loc_68:
020A:0C7C  89 16 006C				mov	word ptr ds:[6Ch],dx	; (0040:006C=280Eh)
020A:0C80  89 0E 006E				mov	word ptr ds:[6Eh],cx	; (0040:006E=0Ch)
020A:0C84			loc_69:
020A:0C84  2E: C6 06 0C1E 00			mov	cs:data_187,0		; (020A:0C1E=0)
020A:0C8A			loc_70:
020A:0C8A  2E: 89 16 0C1A			mov	cs:data_185,dx		; (020A:0C1A=280Eh)
020A:0C8F  2E: 89 0E 0C1C			mov	cs:data_186,cx		; (020A:0C1C=0Ch)
020A:0C94  C6 06 0070 00			mov	byte ptr ds:[70h],0	; (0040:0070=0)
020A:0C99  5B					pop	bx
020A:0C9A  1F					pop	ds
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 14

020A:0C9B  E9 F9AE				jmp	$-64Fh
020A:0C9E  C4					db	0C4h
020A:0C9F  C4 1E A8E9				les	bx,data_612		; (020A:A8E9=2A65h) Load 32 bit ptr
020A:0CA3  F9					stc				; Set carry flag
020A:0CA4  C4					db	0C4h
020A:0CA5  C4 70 E9				les	si,dword ptr [bx+si-17h]	; Load 32 bit ptr
020A:0CA8  A2			data_188	db	0A2h
020A:0CA9  F9					stc				; Set carry flag
020A:0CAA  E8 FB2C				call	sub_5			; (07D9)
020A:0CAD  CD 4A				int	4Ah			; RTC Alarm occurred
020A:0CAF  EB 01				jmp	short $+3		; delay for I/O
020A:0CB1  90					nop
020A:0CB2  EB 01				jmp	short $+3		; delay for I/O
020A:0CB4  90					nop
020A:0CB5  EB 01				jmp	short $+3		; delay for I/O
020A:0CB7  90					nop
020A:0CB8  E8 FAFE				call	sub_4			; (07B9)
020A:0CBB  C4					db	0C4h
020A:0CBC  C4					db	0C4h
020A:0CBD  FE C4				inc	ah
020A:0CBF  C4 71 CD				les	si,dword ptr [bx+di-33h]	; Load 32 bit ptr
020A:0CC2  0A E9				or	ch,cl
020A:0CC4  86 F9				xchg	bh,cl
020A:0CC6  C4					db	0C4h
020A:0CC7			loc_71:
020A:0CC7  C4 75 CD				les	si,dword ptr [di-33h]	; Load 32 bit ptr
020A:0CCA  02 E9				add	ch,cl
020A:0CCC  7E F9				jle	loc_71			; Jump if < or =
020A:0CCE  E8 FB08				call	sub_5			; (07D9)
020A:0CD1  EB 00				jmp	short $+2		; delay for I/O
020A:0CD3  EB 00				jmp	short $+2		; delay for I/O
020A:0CD5  EB 00				jmp	short $+2		; delay for I/O
020A:0CD7  C4					db	0C4h
020A:0CD8  C4					db	0C4h
020A:0CD9  FE					db	0FEh
020A:0CDA  EB 0B				jmp	short loc_73		; (0CE7)
020A:0CDC  3C 2F				cmp	al,2Fh			; '/'
020A:0CDE  75 06				jne	loc_72			; Jump if not equal
020A:0CE0  44					inc	sp
020A:0CE1  D9 02				esc	1,[bp+si]		; coprocessor escape
020A:0CE3  4E					dec	si
020A:0CE4  00 40 F8				add	[bx+si-8],al
020A:0CE7			loc_73:
020A:0CE7  C3					retn
020A:0CE8  48					dec	ax
020A:0CE9  49					dec	cx
020A:0CEA  4D					dec	bp
020A:0CEB  45					inc	bp
020A:0CEC  4D					dec	bp
020A:0CED  20 20				and	[bx+si],ah
020A:0CEF  20 24				and	[si],ah
020A:0CF1  00 70 00				add	[bx+si+0],dh
020A:0CF4  00 A0 0041				add	[bx+si+41h],ah
020A:0CF8  4C					dec	sp
020A:0CF9  00 58 4D				add	[bx+si+4Dh],bl
020A:0CFC  53					push	bx
020A:0CFD  58					pop	ax
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 15

020A:0CFE  58					pop	ax
020A:0CFF  58					pop	ax
020A:0D00  58					pop	ax
020A:0D01  30 DE				xor	dh,bl
020A:0D03  04 74				add	al,74h			; 't'
020A:0D05  00 82 FB04				add	[bp+si-4FCh],al
020A:0D09  8D 54 00				lea	dx,[si+0]		; Load effective addr
020A:0D0C  00 00				add	[bx+si],al
020A:0D0E  42					inc	dx
020A:0D0F  05 020A				add	ax,20Ah
020A:0D12  A4					movsb				; Mov [si] to es:[di]
020A:0D13  10 A7 0100				adc	byte ptr ds:[100h][bx],ah	; (020A:0100=28h)
020A:0D17  01 01				add	[bx+di],ax
020A:0D19  01 00				add	[bx+si],ax
020A:0D1B  01 00				add	[bx+si],ax
020A:0D1D  01 00				add	[bx+si],ax
020A:0D1F  01 00				add	[bx+si],ax
020A:0D21  000A[00]				db	10 dup (0)
020A:0D2B  02 01				add	al,[bx+di]
020A:0D2D  00 00				add	[bx+si],al
020A:0D2F  00 00				add	[bx+si],al
020A:0D31  2E: 89 1E 0016			mov	word ptr cs:[16h],bx	; (020A:0016=0)
020A:0D36  2E: 8C 06 0018			mov	word ptr cs:data_74+2,es	; (020A:0018=0)
020A:0D3B  CB					retf
020A:0D3C  53					push	bx
020A:0D3D  1E					push	ds
020A:0D3E  2E: C5 1E 0016			lds	bx,dword ptr cs:[16h]	; (020A:0016=0) Load 32 bit ptr
020A:0D43  80 7F 02 10				cmp	byte ptr [bx+2],10h
020A:0D47  C7 47 03 0100			mov	word ptr [bx+3],100h
020A:0D4C  76 05				jbe	loc_74			; Jump if below or =
020A:0D4E  81 4F 03 8003			or	word ptr [bx+3],8003h
020A:0D53			loc_74:
020A:0D53  1F					pop	ds
020A:0D54  5B					pop	bx
020A:0D55  CB					retf
020A:0D56  E8 03DB				call	sub_22			; (1134)
020A:0D59  80 FC 43				cmp	ah,43h			; 'C'
020A:0D5C  75 15				jne	loc_76			; Jump if not equal
020A:0D5E  0A C0				or	al,al			; Zero ?
020A:0D60  75 05				jnz	loc_75			; Jump if not zero
020A:0D62  B0 80				mov	al,80h
020A:0D64  E9 03F5				jmp	loc_127			; (115C)
020A:0D67			loc_75:
020A:0D67  3C 10				cmp	al,10h
020A:0D69  75 08				jne	loc_76			; Jump if not equal
020A:0D6B  0E					push	cs
020A:0D6C  07					pop	es
020A:0D6D  BB 00AF				mov	bx,0AFh
020A:0D70  E9 03E9				jmp	loc_127			; (115C)
020A:0D73			loc_76:
020A:0D73  E8 039E				call	sub_21			; (1114)
020A:0D76  2E: FF 2E 0022			jmp	dword ptr cs:[22h]	; (020A:0022=0FFh)
020A:0D7B  12 A0 0265				adc	ah,byte ptr ds:[265h][bx+si]	; (020A:0265=0)
020A:0D7F  98					cbw				; Convrt byte to word
020A:0D80  02 B2 D402				add	dh,[bp+si-2BFEh]
020A:0D84  02 F6				add	dh,dh
020A:0D86  02 30				add	dh,[bx+si]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 16

020A:0D88  03 99 2B03				add	bx,data_368[bx+di]	; (020A:2B03=8D1Eh)
020A:0D8C  A0 A03C				mov	al,data_579		; (020A:A03C=8Bh)
020A:0D8F  94					xchg	ax,sp
020A:0D90  A0 A264				mov	al,data_586		; (020A:A264=74h)
020A:0D93  CF					iret				; Interrupt return
020A:0D94  A0 A0FF				mov	al,data_582		; (020A:A0FF=3Eh)
020A:0D97  23 A1 A159				and	sp,data_583[bx+di]	; (020A:A159=0D1E8h)
020A:0D9B  11 A2 A216				adc	[bp+si-5DEAh],sp
020A:0D9F  EB 03				jmp	short loc_77		; (0DA4)
020A:0DA1  90					nop
020A:0DA2  90					nop
020A:0DA3  90					nop
020A:0DA4			loc_77:
020A:0DA4  51					push	cx
020A:0DA5  56					push	si
020A:0DA6  57					push	di
020A:0DA7  1E					push	ds
020A:0DA8  06					push	es
020A:0DA9  9C					pushf				; Push flags
020A:0DAA  FC					cld				; Clear direction
020A:0DAB  1E					push	ds
020A:0DAC  07					pop	es
020A:0DAD  0E					push	cs
020A:0DAE  1F					pop	ds
020A:0DAF  50					push	ax
020A:0DB0  0A E4				or	ah,ah			; Zero ?
020A:0DB2  74 31				jz	loc_80			; Jump if zero
020A:0DB4  80 FC 12				cmp	ah,12h
020A:0DB7  72 07				jb	loc_78			; Jump if below
020A:0DB9  58					pop	ax
020A:0DBA  33 C0				xor	ax,ax			; Zero register
020A:0DBC  B3 80				mov	bl,80h
020A:0DBE  EB 72				jmp	short loc_84		; (0E32)
020A:0DC0			loc_78:
020A:0DC0  9C					pushf				; Push flags
020A:0DC1  E8 0350				call	sub_21			; (1114)
020A:0DC4  83 3E 0020 00			cmp	word ptr data_80+2,0	; (020A:0020=0A3B9h)
020A:0DC9  75 05				jne	loc_79			; Jump if not equal
020A:0DCB  52					push	dx
020A:0DCC  E8 0076				call	sub_15			; (0E45)
020A:0DCF  5A					pop	dx
020A:0DD0			loc_79:
020A:0DD0  0E					push	cs
020A:0DD1  FF 16 0014				call	word ptr ds:[14h]	; (020A:0014=0E0Dh)
020A:0DD5  80 3E 002C 00			cmp	byte ptr ds:[2Ch],0	; (020A:002C=39h)
020A:0DDA  74 09				je	loc_80			; Jump if equal
020A:0DDC  58					pop	ax
020A:0DDD  33 C0				xor	ax,ax			; Zero register
020A:0DDF  B3 81				mov	bl,81h
020A:0DE1  33 D2				xor	dx,dx			; Zero register
020A:0DE3  EB			data_190	db	0EBh
020A:0DE4  4D					dec	bp
020A:0DE5			loc_80:
020A:0DE5  58					pop	ax
020A:0DE6  50					push	ax
020A:0DE7  8A C4				mov	al,ah
020A:0DE9  32 E4				xor	ah,ah			; Zero register
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 17

020A:0DEB  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:0DED  8B F8				mov	di,ax
020A:0DEF  58					pop	ax
020A:0DF0  8B BD 008B				mov	di,word ptr ds:[8Bh][di]	; (020A:008B=504Fh)
020A:0DF4  0B FF				or	di,di			; Zero ?
020A:0DF6  79 38				jns	loc_83			; Jump if not sign
020A:0DF8  80 3E 002B 00			cmp	byte ptr ds:[2Bh],0	; (020A:002B=38h)
020A:0DFD  74 12				je	loc_81			; Jump if equal
020A:0DFF  56					push	si
020A:0E00  5057			data_191	dw	5057h			; Data table (indexed access)
020A:0E02  5153			data_192	dw	5153h
020A:0E04  DFE8			data_193	dw	0DFE8h
020A:0E06  01 3D				add	[di],di
020A:0E08  01 00				add	[bx+si],ax
020A:0E0A  59					pop	cx
020A:0E0B  5B					pop	bx
020A:0E0C  58					pop	ax
020A:0E0D  5F					pop	di
020A:0E0E  5E					pop	si
020A:0E0F  75 17				jnz	loc_82			; Jump if not zero
020A:0E11			loc_81:
020A:0E11  0E					push	cs
020A:0E12  E8 002A				call	sub_14			; (0E3F)
020A:0E15  80 3E 002B 00			cmp	byte ptr ds:[2Bh],0	; (020A:002B=38h)
020A:0E1A  74 16				je	loc_84			; Jump if equal
020A:0E1C  50					push	ax
020A:0E1D  53					push	bx
020A:0E1E  E8 01FF				call	sub_18			; (1020)
020A:0E21  3D 0001				cmp	ax,1
020A:0E24  5B					pop	bx
020A:0E25  58					pop	ax
020A:0E26  74 0A				jz	loc_84			; Jump if zero
020A:0E28			loc_82:
020A:0E28  33 C0				xor	ax,ax			; Zero register
020A:0E2A  33 D2				xor	dx,dx			; Zero register
020A:0E2C  B3 82				mov	bl,82h
020A:0E2E  EB 02				jmp	short loc_84		; (0E32)
020A:0E30			loc_83:
020A:0E30  FF D7				call	di			;*
020A:0E32			loc_84:
020A:0E32  0E					push	cs
020A:0E33  FF 16 0014				call	word ptr ds:[14h]	; (020A:0014=0E0Dh)
020A:0E37  07					pop	es
020A:0E38  1F					pop	ds
020A:0E39  5F					pop	di
020A:0E3A  5E					pop	si
020A:0E3B  59					pop	cx
020A:0E3C  CB					retf				; Return far
020A:0E3D  6E					db	6Eh
020A:0E3E  FB					sti				; Enable interrupts
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_14		proc	near
020A:0E3F  FF 36 014D				push	word ptr ds:[14Dh]	; (020A:014D=5582h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 18

020A:0E43  57					push	di
020A:0E44  CB					retf				; Return far
				sub_14		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_15		proc	near
020A:0E45  06					push	es
020A:0E46  E8 0071				call	sub_16			; (0EBA)
020A:0E49  80 3E 002C 00			cmp	byte ptr ds:[2Ch],0	; (020A:002C=39h)
020A:0E4E  74 02				je	loc_85			; Jump if equal
020A:0E50  07					pop	es
020A:0E51  C3					retn
020A:0E52			loc_85:
020A:0E52  B8 020D				mov	ax,20Dh
020A:0E55  C4					db	0C4h
020A:0E56  C4 52 09				les	dx,dword ptr [bp+si+9]	; Load 32 bit ptr
020A:0E59  C4 36 001A				les	si,dword ptr ds:[1Ah]	; (020A:001A=0AE9Ch) Load 32 bit ptr
020A:0E5D  26: 87 04				xchg	ax,es:[si]
020A:0E60  A3 001E				mov	word ptr ds:[1Eh],ax	; (020A:001E=961Fh)
020A:0E63  8C C8				mov	ax,cs
020A:0E65  26: 87 44 02				xchg	ax,es:[si+2]
020A:0E69  A3 0020				mov	word ptr data_80+2,ax	; (020A:0020=0A3B9h)
020A:0E6C  8B C1				mov	ax,cx
020A:0E6E  3D 3C00				cmp	ax,3C00h
020A:0E71  72 03				jb	loc_86			; Jump if below
020A:0E73  B8 3C00				mov	ax,3C00h
020A:0E76			loc_86:
020A:0E76  2B 06 0037				sub	ax,word ptr ds:[37h]	; (020A:0037=0)
020A:0E7A  3D 0040				cmp	ax,40h
020A:0E7D  72 0C				jb	loc_87			; Jump if below
020A:0E7F  83 3E 0035 00			cmp	word ptr ds:[35h],0	; (020A:0035=80Fh)
020A:0E84  75 05				jne	loc_87			; Jump if not equal
020A:0E86  C6 06 0029 01			mov	byte ptr ds:[29h],1	; (020A:0029=14h)
020A:0E8B			loc_87:
020A:0E8B  0B C0				or	ax,ax			; Zero ?
020A:0E8D  74 20				jz	loc_90			; Jump if zero
020A:0E8F  B9 0400				mov	cx,400h
020A:0E92  33 DB				xor	bx,bx			; Zero register
020A:0E94  80 3E 0029 00			cmp	byte ptr ds:[29h],0	; (020A:0029=14h)
020A:0E99  74 03				je	loc_88			; Jump if equal
020A:0E9B  BB 0040				mov	bx,40h
020A:0E9E			loc_88:
020A:0E9E  3B 1E 0035				cmp	bx,word ptr ds:[35h]	; (020A:0035=80Fh)
020A:0EA2  73 04				jae	loc_89			; Jump if above or =
020A:0EA4  8B 1E 0035				mov	bx,word ptr ds:[35h]	; (020A:0035=80Fh)
020A:0EA8			loc_89:
020A:0EA8  03 CB				add	cx,bx
020A:0EAA  2B C3				sub	ax,bx
020A:0EAC  E8 01E2				call	sub_20			; (1091)
020A:0EAF			loc_90:
020A:0EAF  07					pop	es
020A:0EB0  C3					retn
				sub_15		endp
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 19

  
020A:0EB1  13 00				adc	ax,[bx+si]
020A:0EB3  FF					db	0FFh
020A:0EB4  FF 56 44				call	word ptr [bp+44h]	;*
020A:0EB7  49					dec	cx
020A:0EB8  53					push	bx
020A:0EB9  4B					dec	bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_16		proc	near
020A:0EBA  06					push	es
020A:0EBB  33 C0				xor	ax,ax			; Zero register
020A:0EBD  8E C0				mov	es,ax
020A:0EBF  26: 8E 06 0066			mov	es,word ptr es:[66h]	; (0000:0066=20Ah)
020A:0EC4  BF 0012				mov	di,12h
020A:0EC7  BE 01C5				mov	si,1C5h
020A:0ECA  B9 0005				mov	cx,5
020A:0ECD  FC					cld				; Clear direction
020A:0ECE  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:0ED0  07					pop	es
020A:0ED1  2474			data_196	dw	2474h
020A:0ED3  10E8			data_197	dw	10E8h
020A:0ED5  01			data_198	db	1
020A:0ED6  06					push	es
020A:0ED7  2E: C4 3E 01C1			les	di,dword ptr cs:[1C1h]	; (020A:01C1=0) Load 32 bit ptr
020A:0EDC  BE 01C5				mov	si,1C5h
020A:0EDF  B9 0005				mov	cx,5
020A:0EE2  FC					cld				; Clear direction
020A:0EE3  A6F3			data_201	dw	0A6F3h
020A:0EE5  07					pop	es
020A:0EE6  9C					pushf				; Push flags
020A:0EE7  36E8			data_202	dw	36E8h
020A:0EE9  0E01			data_203	dw	0E01h
020A:0EEB  16FF			data_204	dw	16FFh
020A:0EED  14 00				adc	al,0
020A:0EEF  74			data_206	db	74h
020A:0EF0  06					push	es
020A:0EF1  C6 06 002C 00			mov	byte ptr ds:[2Ch],0	; (020A:002C=39h)
020A:0EF6  C3					retn
				sub_16		endp
  
020A:0EF7			loc_91:
020A:0EF7  C6 06 002C 01			mov	byte ptr ds:[2Ch],1	; (020A:002C=39h)
020A:0EFC  C3					retn
020A:0EFD  80 FC 88				cmp	ah,88h
020A:0F00  74 0A				je	loc_92			; Jump if equal
020A:0F02  80 FC 87				cmp	ah,87h
020A:0F05  74 0C				je	loc_93			; Jump if equal
020A:0F07  2E: FF 2E 001E			jmp	dword ptr cs:[1Eh]	; (020A:001E=961Fh)
020A:0F0C			loc_92:
020A:0F0C  2E: A1 0035				mov	ax,word ptr cs:[35h]	; (020A:0035=80Fh)
020A:0F10  E9 0249				jmp	loc_127			; (115C)
020A:0F13			loc_93:
020A:0F13  E8 01FE				call	sub_21			; (1114)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 20

020A:0F16  83 EC 04				sub	sp,4
020A:0F19  60					db	60h
020A:0F1A  E8 016C				call	sub_19			; (1089)
020A:0F1D  8B EC				mov	bp,sp
020A:0F1F  89 46 12				mov	[bp+12h],ax
020A:0F22  8B 46 18				mov	ax,[bp+18h]
020A:0F25  89 46 10				mov	[bp+10h],ax
020A:0F28  61					db	61h
020A:0F29  2E: FF 1E 001E			call	dword ptr cs:[1Eh]	; (020A:001E=961Fh)
020A:0F2E  50					push	ax
020A:0F2F  9C					pushf				; Push flags
020A:0F30  55					push	bp
020A:0F31  8B EC				mov	bp,sp
020A:0F33  8B 46 02				mov	ax,[bp+2]
020A:0F36  89 46 0C				mov	[bp+0Ch],ax
020A:0F39  83 7E 06 00				cmp	word ptr [bp+6],0
020A:0F3D  5D					pop	bp
020A:0F3E  58					pop	ax
020A:0F3F  58					pop	ax
020A:0F40  74 0B				jz	loc_94			; Jump if zero
020A:0F42  E8 01CF				call	sub_21			; (1114)
020A:0F45  60					db	60h
020A:0F46  B8 0001				mov	ax,1
020A:0F49  E8 0272				call	sub_23			; (11BE)
020A:0F4C  61					db	61h
020A:0F4D			loc_94:
020A:0F4D  83 C4 02				add	sp,2
020A:0F50  E9 0209				jmp	loc_127			; (115C)
020A:0F53  00 00				add	[bx+si],al
020A:0F55  E8 01BC				call	sub_21			; (1114)
020A:0F58  B3 91				mov	bl,91h
020A:0F5A  3C 40				cmp	al,40h			; '@'
020A:0F5C  75 06				jne	loc_95			; Jump if not equal
020A:0F5E  3B 16 0263				cmp	dx,word ptr ds:[263h]	; (020A:0263=0)
020A:0F62  74 21				je	loc_96			; Jump if equal
020A:0F64			loc_95:
020A:0F64  80 3E 0026 01			cmp	byte ptr ds:[26h],1	; (020A:0026=3)
020A:0F69  74 1A				je	loc_96			; Jump if equal
020A:0F6B  B3 90				mov	bl,90h
020A:0F6D  80 3E 0029 00			cmp	byte ptr ds:[29h],0	; (020A:0029=14h)
020A:0F72  74 11				je	loc_96			; Jump if equal
020A:0F74  B3 92				mov	bl,92h
020A:0F76  3B 16 0033				cmp	dx,word ptr ds:[33h]	; (020A:0033=0Ch)
020A:0F7A  72 09				jb	loc_96			; Jump if below
020A:0F7C  B8 0001				mov	ax,1
020A:0F7F  A2 0026				mov	byte ptr ds:[26h],al	; (020A:0026=3)
020A:0F82  32 DB				xor	bl,bl			; Zero register
020A:0F84  C3					retn
020A:0F85			loc_96:
020A:0F85  33 C0				xor	ax,ax			; Zero register
020A:0F87  C3					retn
020A:0F88  E8 0189				call	sub_21			; (1114)
020A:0F8B  A0 0026				mov	al,byte ptr ds:[26h]	; (020A:0026=3)
020A:0F8E  0A C0				or	al,al			; Zero ?
020A:0F90  74 0B				jz	loc_97			; Jump if zero
020A:0F92  C6 06 0026 00			mov	byte ptr ds:[26h],0	; (020A:0026=3)
020A:0F97  B8 0001				mov	ax,1
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 21

020A:0F9A  32 DB				xor	bl,bl			; Zero register
020A:0F9C  C3					retn
020A:0F9D			loc_97:
020A:0F9D  33 C0				xor	ax,ax			; Zero register
020A:0F9F  B3 93				mov	bl,93h
020A:0FA1  C3					retn
020A:0FA2  E8 016F				call	sub_21			; (1114)
020A:0FA5  83 3E 0031 01			cmp	word ptr ds:[31h],1	; (020A:0031=3F3Eh)
020A:0FAA  74 0D				je	loc_98			; Jump if equal
020A:0FAC  E8 0037				call	sub_17			; (0FE6)
020A:0FAF  0B C0				or	ax,ax			; Zero ?
020A:0FB1  74 0C				jz	loc_99			; Jump if zero
020A:0FB3  C7 06 0031 0001			mov	word ptr ds:[31h],1	; (020A:0031=3F3Eh)
020A:0FB9			loc_98:
020A:0FB9  B8 0001				mov	ax,1
020A:0FBC  32 DB				xor	bl,bl			; Zero register
020A:0FBE  C3					retn
020A:0FBF			loc_99:
020A:0FBF  B3 82				mov	bl,82h
020A:0FC1  33 C0				xor	ax,ax			; Zero register
020A:0FC3  C3					retn
020A:0FC4  E8 014D				call	sub_21			; (1114)
020A:0FC7  83 3E 0031 00			cmp	word ptr ds:[31h],0	; (020A:0031=3F3Eh)
020A:0FCC  74 0D				je	loc_100			; Jump if equal
020A:0FCE  E8 004F				call	sub_18			; (1020)
020A:0FD1  0B C0				or	ax,ax			; Zero ?
020A:0FD3  74 0C				jz	loc_101			; Jump if zero
020A:0FD5  C7 06 0031 0000			mov	word ptr ds:[31h],0	; (020A:0031=3F3Eh)
020A:0FDB			loc_100:
020A:0FDB  B8 0001				mov	ax,1
020A:0FDE  32 DB				xor	bl,bl			; Zero register
020A:0FE0  C3					retn
020A:0FE1			loc_101:
020A:0FE1  B3 82				mov	bl,82h
020A:0FE3  33			data_207	db	33h
020A:0FE4  C0					db	0C0h
020A:0FE5  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_17		proc	near
020A:0FE6  E8 012B				call	sub_21			; (1114)
020A:0FE9  80 3E 0027 01			cmp	byte ptr ds:[27h],1	; (020A:0027=4)
020A:0FEE  75 25				jne	loc_105			; Jump if not equal
020A:0FF0  C6 06 003B 03			mov	byte ptr ds:[3Bh],3	; (020A:003B=0)
020A:0FF5  83 3E 002F 00			cmp	word ptr ds:[2Fh],0	; (020A:002F=3D3Ch)
020A:0FFA  74 07				je	loc_103			; Jump if equal
020A:0FFC			loc_102:
020A:0FFC  E8 008A				call	sub_19			; (1089)
020A:0FFF  0B C0				or	ax,ax			; Zero ?
020A:1001  75 0E				jnz	loc_104			; Jump if not zero
020A:1003			loc_103:
020A:1003  B8 0001				mov	ax,1
020A:1006  E8 01B5				call	sub_23			; (11BE)
020A:1009  FE 0E 003B				dec	byte ptr ds:[3Bh]	; (020A:003B=0)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 22

020A:100D  75 ED				jnz	loc_102			; Jump if not zero
020A:100F  EB 0A				jmp	short loc_106		; (101B)
020A:1011			loc_104:
020A:1011  FF 06 002F				inc	word ptr ds:[2Fh]	; (020A:002F=3D3Ch)
020A:1015			loc_105:
020A:1015  B8 0001				mov	ax,1
020A:1018  32 DB				xor	bl,bl			; Zero register
020A:101A  C3					retn
020A:101B			loc_106:
020A:101B  B3 82				mov	bl,82h
020A:101D  33 C0				xor	ax,ax			; Zero register
020A:101F  C3					retn
				sub_17		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_18		proc	near
020A:1020  E8 00F1				call	sub_21			; (1114)
020A:1023  80 3E 0027 00			cmp	byte ptr ds:[27h],0	; (020A:0027=4)
020A:1028  74 34				je	loc_111			; Jump if equal
020A:102A  83 3E 002F 00			cmp	word ptr ds:[2Fh],0	; (020A:002F=3D3Ch)
020A:102F  74 33				je	loc_112			; Jump if equal
020A:1031  C6 06 003B 03			mov	byte ptr ds:[3Bh],3	; (020A:003B=0)
020A:1036			loc_107:
020A:1036  E8 0050				call	sub_19			; (1089)
020A:1039  83 3E 002F 01			cmp	word ptr ds:[2Fh],1	; (020A:002F=3D3Ch)
020A:103E  75 08				jne	loc_108			; Jump if not equal
020A:1040  0B C0				or	ax,ax			; Zero ?
020A:1042  74 16				jz	loc_110			; Jump if zero
020A:1044  33 C0				xor	ax,ax			; Zero register
020A:1046  EB 07				jmp	short loc_109		; (104F)
020A:1048			loc_108:
020A:1048  0B C0				or	ax,ax			; Zero ?
020A:104A  75 0E				jnz	loc_110			; Jump if not zero
020A:104C  B8 0001				mov	ax,1
020A:104F			loc_109:
020A:104F  E8 016C				call	sub_23			; (11BE)
020A:1052  FE 0E 003B				dec	byte ptr ds:[3Bh]	; (020A:003B=0)
020A:1056  75 DE				jnz	loc_107			; Jump if not zero
020A:1058  EB 0A				jmp	short loc_112		; (1064)
020A:105A			loc_110:
020A:105A  FF 0E 002F				dec	word ptr ds:[2Fh]	; (020A:002F=3D3Ch)
020A:105E			loc_111:
020A:105E  B8 0001				mov	ax,1
020A:1061  32 DB				xor	bl,bl			; Zero register
020A:1063  C3					retn
020A:1064			loc_112:
020A:1064  B3 82				mov	bl,82h
020A:1066  33 C0				xor	ax,ax			; Zero register
020A:1068  C3					retn
				sub_18		endp
  
020A:1069  2E: 80 3E 002B 00			cmp	byte ptr cs:[2Bh],0	; (020A:002B=38h)
020A:106F  74 04				je	loc_113			; Jump if equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 23

020A:1071  B8 0001				mov	ax,1
020A:1074  CB					retf				; Return far
020A:1075			loc_113:
020A:1075  E8 FF6E				call	sub_17			; (0FE6)
020A:1078  CB					retf
020A:1079  2E: 80 3E 002B 00			cmp	byte ptr cs:[2Bh],0	; (020A:002B=38h)
020A:107F  74 04				je	loc_114			; Jump if equal
020A:1081  B8 0001				mov	ax,1
020A:1084  CB					retf				; Return far
020A:1085			loc_114:
020A:1085  E8 FF98				call	sub_18			; (1020)
020A:1088  CB					retf				; Return far
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_19		proc	near
020A:1089  2E: A0 003C				mov	al,byte ptr cs:[3Ch]	; (020A:003C=10h)
020A:108D  98					cbw				; Convrt byte to word
020A:108E  32 DB				xor	bl,bl			; Zero register
020A:1090  C3					retn
				sub_19		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_20		proc	near
020A:1091  8B D0				mov	dx,ax
020A:1093  8B F1				mov	si,cx
020A:1095  33 FF				xor	di,di			; Zero register
020A:1097  06					push	es
020A:1098  8E 06 014D				mov	es,word ptr ds:[14Dh]	; (020A:014D=5582h)
020A:109C  26: 8B 1E A004			mov	bx,word ptr es:[0A004h]	; (5582:A004=0FFFFh)
020A:10A1  26: 8B 0E A008			mov	cx,word ptr es:[0A008h]	; (5582:A008=0FFFFh)
  
020A:10A6			locloop_115:
020A:10A6  26: 80 3F 04				cmp	byte ptr es:[bx],4
020A:10AA  75 08				jne	loc_116			; Jump if not equal
020A:10AC  0B FF				or	di,di			; Zero ?
020A:10AE  75 48				jnz	loc_119			; Jump if not zero
020A:10B0  8B FB				mov	di,bx
020A:10B2  EB 44				jmp	short loc_119		; (10F8)
020A:10B4			loc_116:
020A:10B4  26: 80 3F 01				cmp	byte ptr es:[bx],1
020A:10B8  75 3E				jne	loc_119			; Jump if not equal
020A:10BA  26: 8B 47 02				mov	ax,es:[bx+2]
020A:10BE  26: 03 47 04				add	ax,es:[bx+4]
020A:10C2  3B C6				cmp	ax,si
020A:10C4  72 32				jb	loc_119			; Jump if below
020A:10C6  8B C6				mov	ax,si
020A:10C8  03 C2				add	ax,dx
020A:10CA  26: 3B 47 02				cmp	ax,es:[bx+2]
020A:10CE  72 28				jb	loc_119			; Jump if below
020A:10D0  26: 3B 77 02				cmp	si,es:[bx+2]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 24

020A:10D4  76 08				jbe	loc_117			; Jump if below or =
020A:10D6  03 D6				add	dx,si
020A:10D8  26: 8B 77 02				mov	si,es:[bx+2]
020A:10DC  2B D6				sub	dx,si
020A:10DE			loc_117:
020A:10DE  26: 8B 47 02				mov	ax,es:[bx+2]
020A:10E2  26: 03 47 04				add	ax,es:[bx+4]
020A:10E6  2B C2				sub	ax,dx
020A:10E8  2B C6				sub	ax,si
020A:10EA  76 02				jbe	loc_118			; Jump if below or =
020A:10EC  03 D0				add	dx,ax
020A:10EE			loc_118:
020A:10EE  26: C6 07 04				mov	byte ptr es:[bx],4
020A:10F2  0B FF				or	di,di			; Zero ?
020A:10F4  75 02				jnz	loc_119			; Jump if not zero
020A:10F6  8B FB				mov	di,bx
020A:10F8			loc_119:
020A:10F8  83 C3 06				add	bx,6
020A:10FB  E2 A9				loop	locloop_115		; Loop if cx > 0
  
020A:10FD  0B FF				or	di,di			; Zero ?
020A:10FF  74 11				jz	loc_120			; Jump if zero
020A:1101  26: C6 45 01 00			mov	byte ptr es:[di+1],0
020A:1106  26: C6 05 01				mov	byte ptr es:[di],1
020A:110A  26: 89 75 02				mov	es:[di+2],si
020A:110E  26: 89 55 04				mov	es:[di+4],dx
020A:1112			loc_120:
020A:1112  07					pop	es
020A:1113  C3					retn
				sub_20		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_21		proc	near
020A:1114  1E					push	ds
020A:1115  50					push	ax
020A:1116  B8 0040				mov	ax,40h
020A:1119  8E D8				mov	ds,ax
020A:111B  9F					lahf				; Load ah from flags
020A:111C  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:1122  75 0C				jnz	loc_122			; Jump if not zero
020A:1124  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:112B			loc_121:
020A:112B  9E					sahf				; Store ah into flags
020A:112C  58					pop	ax
020A:112D  1F					pop	ds
020A:112E  EB 03				jmp	short loc_123		; (1133)
020A:1130			loc_122:
020A:1130  FA					cli				; Disable interrupts
020A:1131  EB F8				jmp	short loc_121		; (112B)
020A:1133			loc_123:
020A:1133  C3					retn
				sub_21		endp
  
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 25

  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_22		proc	near
020A:1134  1E					push	ds
020A:1135  50					push	ax
020A:1136  B8 0040				mov	ax,40h
020A:1139  8E D8				mov	ds,ax
020A:113B  9F					lahf				; Load ah from flags
020A:113C  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:1142  75 14				jnz	loc_125			; Jump if not zero
020A:1144  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:114A  75 0C				jnz	loc_125			; Jump if not zero
020A:114C  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:1153			loc_124:
020A:1153  9E					sahf				; Store ah into flags
020A:1154  58					pop	ax
020A:1155  1F					pop	ds
020A:1156  EB 03				jmp	short loc_126		; (115B)
020A:1158			loc_125:
020A:1158  FB					sti				; Enable interrupts
020A:1159  EB F8				jmp	short loc_124		; (1153)
020A:115B			loc_126:
020A:115B  C3					retn
				sub_22		endp
  
020A:115C			loc_127:
020A:115C  1E					push	ds
020A:115D  50					push	ax
020A:115E  B8 0040				mov	ax,40h
020A:1161  8E D8				mov	ds,ax
020A:1163  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:1169  75 4F				jnz	loc_135			; Jump if not zero
020A:116B  55					push	bp
020A:116C  8B EC				mov	bp,sp
020A:116E  8B 46 0A				mov	ax,[bp+0Ah]
020A:1171  5D					pop	bp
020A:1172  A9 0100				test	ax,100h
020A:1175  75 43				jnz	loc_135			; Jump if not zero
020A:1177  A9 0200				test	ax,200h
020A:117A  74 22				jz	loc_131			; Jump if zero
020A:117C  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:1183  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:1189  75 2F				jnz	loc_135			; Jump if not zero
020A:118B			loc_128:
020A:118B  86 E0				xchg	ah,al
020A:118D  FC					cld				; Clear direction
020A:118E  A8 04				test	al,4
020A:1190  75 25				jnz	loc_134			; Jump if not zero
020A:1192			loc_129:
020A:1192  A8 08				test	al,8
020A:1194  75 11				jnz	loc_132			; Jump if not zero
020A:1196  70 19				jo	loc_133			; Jump if overflow=1
020A:1198			loc_130:
020A:1198  9E					sahf				; Store ah into flags
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 26

020A:1199  58					pop	ax
020A:119A  1F					pop	ds
020A:119B  CA 0002				retf	2			; Return far
020A:119E			loc_131:
020A:119E  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (020A:0314=3231h)
020A:11A5  EB E4				jmp	short loc_128		; (118B)
020A:11A7			loc_132:
020A:11A7  70 EF				jo	loc_130			; Jump if overflow=1
020A:11A9  50					push	ax
020A:11AA  B0 7F				mov	al,7Fh
020A:11AC  04 02				add	al,2
020A:11AE  58					pop	ax
020A:11AF  EB E7				jmp	short loc_130		; (1198)
020A:11B1			loc_133:
020A:11B1  50					push	ax
020A:11B2  32 C0				xor	al,al			; Zero register
020A:11B4  58					pop	ax
020A:11B5  EB E1				jmp	short loc_130		; (1198)
020A:11B7			loc_134:
020A:11B7  FD					std				; Set direction flag
020A:11B8  EB D8				jmp	short loc_129		; (1192)
020A:11BA			loc_135:
020A:11BA  58					pop	ax
020A:11BB  1F					pop	ds
020A:11BC  CF					iret				; Interrupt return
020A:11BD  00 3D				add	[di],bh
020A:11BF  02 00				add	al,[bx+si]
020A:11C1  75 06				jnz	loc_136			; Jump if not zero
020A:11C3  2E: A0 003C				mov	al,byte ptr cs:[3Ch]	; (020A:003C=10h)
020A:11C7  98					cbw				; Convrt byte to word
020A:11C8  C3					retn
020A:11C9			loc_136:
020A:11C9  C4					db	0C4h
020A:11CA  C4 52 00				les	dx,dword ptr [bp+si+0]	; Load 32 bit ptr
020A:11CD  C3					retn
020A:11CE  2E: C6 46 28 03			mov	byte ptr cs:[bp+28h],3
020A:11D3  49					dec	cx
020A:11D4  00 00				add	[bx+si],al
020A:11D6  0D 002F				or	ax,2Fh
020A:11D9  00 06 0600				add	byte ptr ds:[600h],al	; (020A:0600=2)
020A:11DD  00 0F				add	[bx],cl
020A:11DF  61					db	61h
020A:11E0  FF					db	0FFh
020A:11E1  FF 06 2300				inc	data_274		; (020A:2300=0)
020A:11E5  00					db	0
020A:11E6  00			data_209	db	0
020A:11E7  00			data_210	db	0
020A:11E8  00			data_211	db	0
020A:11E9  00 00				add	[bx+si],al
020A:11EB  00 00				add	[bx+si],al
020A:11ED  00 00				add	[bx+si],al
020A:11EF  00 00				add	[bx+si],al
020A:11F1  00 00				add	[bx+si],al
020A:11F3  00 00				add	[bx+si],al
020A:11F5  00 00				add	[bx+si],al
020A:11F7  00 00				add	[bx+si],al
020A:11F9  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 27

020A:11FB  00 00				add	[bx+si],al
020A:11FD  00 00				add	[bx+si],al
020A:11FF  00 00				add	[bx+si],al
020A:1201  00 00				add	[bx+si],al
020A:1203  00 00				add	[bx+si],al
020A:1205  00 00				add	[bx+si],al
020A:1207  00 00				add	[bx+si],al
020A:1209  00 00				add	[bx+si],al
020A:120B  00 00				add	[bx+si],al
020A:120D  00 00				add	[bx+si],al
020A:120F  00 00				add	[bx+si],al
020A:1211  00 00				add	[bx+si],al
020A:1213  00 00				add	[bx+si],al
020A:1215  00 00				add	[bx+si],al
020A:1217  00 00				add	[bx+si],al
020A:1219  00 00				add	[bx+si],al
020A:121B  00 00				add	[bx+si],al
020A:121D  00 00				add	[bx+si],al
020A:121F  00 00				add	[bx+si],al
020A:1221  00 00				add	[bx+si],al
020A:1223  00 00				add	[bx+si],al
020A:1225  00 00				add	[bx+si],al
020A:1227  00 00				add	[bx+si],al
020A:1229  00 00				add	[bx+si],al
020A:122B  00 00				add	[bx+si],al
020A:122D  00 00				add	[bx+si],al
020A:122F  00 00				add	[bx+si],al
020A:1231  00 00				add	[bx+si],al
020A:1233  00 00				add	[bx+si],al
020A:1235  00 00				add	[bx+si],al
020A:1237  00 00				add	[bx+si],al
020A:1239  00 00				add	[bx+si],al
020A:123B  00 00				add	[bx+si],al
020A:123D  00 00				add	[bx+si],al
020A:123F  00 00				add	[bx+si],al
020A:1241  00 00				add	[bx+si],al
020A:1243  00 00				add	[bx+si],al
020A:1245  00 00				add	[bx+si],al
020A:1247  00 00				add	[bx+si],al
020A:1249  00 00				add	[bx+si],al
020A:124B  00 00				add	[bx+si],al
020A:124D  00 00				add	[bx+si],al
020A:124F  00 00				add	[bx+si],al
020A:1251  00 00				add	[bx+si],al
020A:1253  00 00				add	[bx+si],al
020A:1255  00 00				add	[bx+si],al
020A:1257  00 00				add	[bx+si],al
020A:1259  00 00				add	[bx+si],al
020A:125B  00 00				add	[bx+si],al
020A:125D  00 00				add	[bx+si],al
020A:125F  00 00				add	[bx+si],al
020A:1261  00 00				add	[bx+si],al
020A:1263  00 00				add	[bx+si],al
020A:1265  00 00				add	[bx+si],al
020A:1267  00 00				add	[bx+si],al
020A:1269  00 00				add	[bx+si],al
020A:126B  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 28

020A:126D  00 00				add	[bx+si],al
020A:126F  00 00				add	[bx+si],al
020A:1271  00 00				add	[bx+si],al
020A:1273  00 00				add	[bx+si],al
020A:1275  00 00				add	[bx+si],al
020A:1277  00 00				add	[bx+si],al
020A:1279  00 00				add	[bx+si],al
020A:127B  00 00				add	[bx+si],al
020A:127D  00 00				add	[bx+si],al
020A:127F  00 00				add	[bx+si],al
020A:1281  00 00				add	[bx+si],al
020A:1283  00 00				add	[bx+si],al
020A:1285  00 00				add	[bx+si],al
020A:1287  00 00				add	[bx+si],al
020A:1289  00 00				add	[bx+si],al
020A:128B  00 00				add	[bx+si],al
020A:128D  00 00				add	[bx+si],al
020A:128F  00 00				add	[bx+si],al
020A:1291  00 00				add	[bx+si],al
020A:1293  00 00				add	[bx+si],al
020A:1295  00 00				add	[bx+si],al
020A:1297  00 00				add	[bx+si],al
020A:1299  00 00				add	[bx+si],al
020A:129B  00 00				add	[bx+si],al
020A:129D  00 00				add	[bx+si],al
020A:129F  00 00				add	[bx+si],al
020A:12A1  00 00				add	[bx+si],al
020A:12A3  00 00				add	[bx+si],al
020A:12A5  00 00				add	[bx+si],al
020A:12A7  00 00				add	[bx+si],al
020A:12A9  00 00				add	[bx+si],al
020A:12AB  00 00				add	[bx+si],al
020A:12AD  00 00				add	[bx+si],al
020A:12AF  00 00				add	[bx+si],al
020A:12B1  00 00				add	[bx+si],al
020A:12B3  00 00				add	[bx+si],al
020A:12B5  00 00				add	[bx+si],al
020A:12B7  00 00				add	[bx+si],al
020A:12B9  00 00				add	[bx+si],al
020A:12BB  00 00				add	[bx+si],al
020A:12BD  00 00				add	[bx+si],al
020A:12BF  00 00				add	[bx+si],al
020A:12C1  00 00				add	[bx+si],al
020A:12C3  00 00				add	[bx+si],al
020A:12C5  00 00				add	[bx+si],al
020A:12C7  00 00				add	[bx+si],al
020A:12C9  00 00				add	[bx+si],al
020A:12CB  00 00				add	[bx+si],al
020A:12CD  00 00				add	[bx+si],al
020A:12CF  00 00				add	[bx+si],al
020A:12D1  00 00				add	[bx+si],al
020A:12D3  00 00				add	[bx+si],al
020A:12D5  00 00				add	[bx+si],al
020A:12D7  00 00				add	[bx+si],al
020A:12D9  00 00				add	[bx+si],al
020A:12DB  00 00				add	[bx+si],al
020A:12DD  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 29

020A:12DF  00 00				add	[bx+si],al
020A:12E1  00 00				add	[bx+si],al
020A:12E3  00 00				add	[bx+si],al
020A:12E5  00 00				add	[bx+si],al
020A:12E7  00 00				add	[bx+si],al
020A:12E9  00 00				add	[bx+si],al
020A:12EB  00 00				add	[bx+si],al
020A:12ED  00 00				add	[bx+si],al
020A:12EF  00 00				add	[bx+si],al
020A:12F1  00 00				add	[bx+si],al
020A:12F3  00 00				add	[bx+si],al
020A:12F5  00 00				add	[bx+si],al
020A:12F7  00 00				add	[bx+si],al
020A:12F9  00 00				add	[bx+si],al
020A:12FB  0000			data_212	dw	0
020A:12FD  0000			data_213	dw	0
020A:12FF  0000			data_214	dw	0
020A:1301  0000			data_215	dw	0
020A:1303  00 00				add	[bx+si],al
020A:1305  00 00				add	[bx+si],al
020A:1307  00 00				add	[bx+si],al
020A:1309  00			data_218	db	0
020A:130A  00 00				add	[bx+si],al
020A:130C  00 00				add	[bx+si],al
020A:130E  00 00				add	[bx+si],al
020A:1310  00 00				add	[bx+si],al
020A:1312  00 00				add	[bx+si],al
020A:1314  00 00				add	[bx+si],al
020A:1316  00 00				add	[bx+si],al
020A:1318  00 00				add	[bx+si],al
020A:131A  00 00				add	[bx+si],al
020A:131C  00 00				add	[bx+si],al
020A:131E  00 00				add	[bx+si],al
020A:1320  00 00				add	[bx+si],al
020A:1322  00 00				add	[bx+si],al
020A:1324  00 00				add	[bx+si],al
020A:1326  00 00				add	[bx+si],al
020A:1328  00 00				add	[bx+si],al
020A:132A  00 00				add	[bx+si],al
020A:132C  00 00				add	[bx+si],al
020A:132E  00 00				add	[bx+si],al
020A:1330  00 00				add	[bx+si],al
020A:1332  00 00				add	[bx+si],al
020A:1334  00 00				add	[bx+si],al
020A:1336  00 00				add	[bx+si],al
020A:1338  00 00				add	[bx+si],al
020A:133A  00 00				add	[bx+si],al
020A:133C  00 00				add	[bx+si],al
020A:133E  00 00				add	[bx+si],al
020A:1340  00 00				add	[bx+si],al
020A:1342  00 00				add	[bx+si],al
020A:1344  00 00				add	[bx+si],al
020A:1346  00 00				add	[bx+si],al
020A:1348  00 00				add	[bx+si],al
020A:134A  00 00				add	[bx+si],al
020A:134C  00 00				add	[bx+si],al
020A:134E  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 30

020A:1350  00 00				add	[bx+si],al
020A:1352  00 00				add	[bx+si],al
020A:1354  00 00				add	[bx+si],al
020A:1356  00 00				add	[bx+si],al
020A:1358  00 00				add	[bx+si],al
020A:135A  00 00				add	[bx+si],al
020A:135C  00 00				add	[bx+si],al
020A:135E  00 00				add	[bx+si],al
020A:1360  00 00				add	[bx+si],al
020A:1362  00 00				add	[bx+si],al
020A:1364  00 00				add	[bx+si],al
020A:1366  00 00				add	[bx+si],al
020A:1368  00 00				add	[bx+si],al
020A:136A  00 00				add	[bx+si],al
020A:136C  00 00				add	[bx+si],al
020A:136E  00 00				add	[bx+si],al
020A:1370  00 00				add	[bx+si],al
020A:1372  00 00				add	[bx+si],al
020A:1374  00 00				add	[bx+si],al
020A:1376  00 00				add	[bx+si],al
020A:1378  00 00				add	[bx+si],al
020A:137A  00 00				add	[bx+si],al
020A:137C  00 00				add	[bx+si],al
020A:137E  00 00				add	[bx+si],al
020A:1380  00 00				add	[bx+si],al
020A:1382  00 00				add	[bx+si],al
020A:1384  00 00				add	[bx+si],al
020A:1386  00 00				add	[bx+si],al
020A:1388  00 00				add	[bx+si],al
020A:138A  00 00				add	[bx+si],al
020A:138C  00 00				add	[bx+si],al
020A:138E  00 00				add	[bx+si],al
020A:1390  00 00				add	[bx+si],al
020A:1392  00 00				add	[bx+si],al
020A:1394  00 00				add	[bx+si],al
020A:1396  00 00				add	[bx+si],al
020A:1398  00 00				add	[bx+si],al
020A:139A  00 00				add	[bx+si],al
020A:139C  00 00				add	[bx+si],al
020A:139E  00			data_219	db	0
020A:139F  0000			data_220	dw	0
020A:13A1  00 00				add	[bx+si],al
020A:13A3  00 00				add	[bx+si],al
020A:13A5  00 00				add	[bx+si],al
020A:13A7  00 00				add	[bx+si],al
020A:13A9  00 00				add	[bx+si],al
020A:13AB  00 00				add	[bx+si],al
020A:13AD  00 00				add	[bx+si],al
020A:13AF  00 00				add	[bx+si],al
020A:13B1  00 00				add	[bx+si],al
020A:13B3  00 00				add	[bx+si],al
020A:13B5  00 00				add	[bx+si],al
020A:13B7  00 00				add	[bx+si],al
020A:13B9  00 00				add	[bx+si],al
020A:13BB  00 00				add	[bx+si],al
020A:13BD  00 00				add	[bx+si],al
020A:13BF  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 31

020A:13C1  00 00				add	[bx+si],al
020A:13C3  00 00				add	[bx+si],al
020A:13C5  00 00				add	[bx+si],al
020A:13C7  00 00				add	[bx+si],al
020A:13C9  00 00				add	[bx+si],al
020A:13CB  00 00				add	[bx+si],al
020A:13CD  00 00				add	[bx+si],al
020A:13CF  00 00				add	[bx+si],al
020A:13D1  00 00				add	[bx+si],al
020A:13D3  00 00				add	[bx+si],al
020A:13D5  00 00				add	[bx+si],al
020A:13D7  00 00				add	[bx+si],al
020A:13D9  00 00				add	[bx+si],al
020A:13DB  00 00				add	[bx+si],al
020A:13DD  00 00				add	[bx+si],al
020A:13DF  00 00				add	[bx+si],al
020A:13E1  00 00				add	[bx+si],al
020A:13E3  00 00				add	[bx+si],al
020A:13E5  00 00				add	[bx+si],al
020A:13E7  00 00				add	[bx+si],al
020A:13E9  00 00				add	[bx+si],al
020A:13EB  00 00				add	[bx+si],al
020A:13ED  00 00				add	[bx+si],al
020A:13EF  00 00				add	[bx+si],al
020A:13F1  00 00				add	[bx+si],al
020A:13F3  00 00				add	[bx+si],al
020A:13F5  00 00				add	[bx+si],al
020A:13F7  00 00				add	[bx+si],al
020A:13F9  00 00				add	[bx+si],al
020A:13FB  00 00				add	[bx+si],al
020A:13FD  00 00				add	[bx+si],al
020A:13FF  00 00				add	[bx+si],al
020A:1401  00 00				add	[bx+si],al
020A:1403  00 00				add	[bx+si],al
020A:1405  00 00				add	[bx+si],al
020A:1407  00 00				add	[bx+si],al
020A:1409  00 00				add	[bx+si],al
020A:140B  00 00				add	[bx+si],al
020A:140D  00 00				add	[bx+si],al
020A:140F  00 00				add	[bx+si],al
020A:1411  00 00				add	[bx+si],al
020A:1413  00 00				add	[bx+si],al
020A:1415  00 00				add	[bx+si],al
020A:1417  00 00				add	[bx+si],al
020A:1419  00 00				add	[bx+si],al
020A:141B  00 00				add	[bx+si],al
020A:141D  00 00				add	[bx+si],al
020A:141F  00 00				add	[bx+si],al
020A:1421  00 00				add	[bx+si],al
020A:1423  00 00				add	[bx+si],al
020A:1425  00 00				add	[bx+si],al
020A:1427  00 00				add	[bx+si],al
020A:1429  00 00				add	[bx+si],al
020A:142B  00 00				add	[bx+si],al
020A:142D  00 00				add	[bx+si],al
020A:142F  00 00				add	[bx+si],al
020A:1431  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 32

020A:1433  00 00				add	[bx+si],al
020A:1435  00 00				add	[bx+si],al
020A:1437  00 00				add	[bx+si],al
020A:1439  00 00				add	[bx+si],al
020A:143B  00 00				add	[bx+si],al
020A:143D  00 00				add	[bx+si],al
020A:143F  00 00				add	[bx+si],al
020A:1441  00 00				add	[bx+si],al
020A:1443  00 00				add	[bx+si],al
020A:1445  00 00				add	[bx+si],al
020A:1447  00 00				add	[bx+si],al
020A:1449  00 00				add	[bx+si],al
020A:144B  00 00				add	[bx+si],al
020A:144D  00 00				add	[bx+si],al
020A:144F  00 00				add	[bx+si],al
020A:1451  00 00				add	[bx+si],al
020A:1453  00 00				add	[bx+si],al
020A:1455  00 00				add	[bx+si],al
020A:1457  00 00				add	[bx+si],al
020A:1459  00 00				add	[bx+si],al
020A:145B  00 00				add	[bx+si],al
020A:145D  00 00				add	[bx+si],al
020A:145F  00 00				add	[bx+si],al
020A:1461  00 00				add	[bx+si],al
020A:1463  00 00				add	[bx+si],al
020A:1465  00 00				add	[bx+si],al
020A:1467  00 00				add	[bx+si],al
020A:1469  00 00				add	[bx+si],al
020A:146B  00 00				add	[bx+si],al
020A:146D  00 00				add	[bx+si],al
020A:146F  00 00				add	[bx+si],al
020A:1471  00 00				add	[bx+si],al
020A:1473  00 00				add	[bx+si],al
020A:1475  00 00				add	[bx+si],al
020A:1477  00 00				add	[bx+si],al
020A:1479  00 00				add	[bx+si],al
020A:147B  00 00				add	[bx+si],al
020A:147D  00 00				add	[bx+si],al
020A:147F  00 00				add	[bx+si],al
020A:1481  00 00				add	[bx+si],al
020A:1483  00 00				add	[bx+si],al
020A:1485  00 00				add	[bx+si],al
020A:1487  00 00				add	[bx+si],al
020A:1489  00 00				add	[bx+si],al
020A:148B  00 00				add	[bx+si],al
020A:148D  00 00				add	[bx+si],al
020A:148F  00 00				add	[bx+si],al
020A:1491  00 00				add	[bx+si],al
020A:1493  00 00				add	[bx+si],al
020A:1495  00 00				add	[bx+si],al
020A:1497  00 00				add	[bx+si],al
020A:1499  00 00				add	[bx+si],al
020A:149B  00 00				add	[bx+si],al
020A:149D  00 00				add	[bx+si],al
020A:149F  00 00				add	[bx+si],al
020A:14A1  00 00				add	[bx+si],al
020A:14A3  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 33

020A:14A5  00 00				add	[bx+si],al
020A:14A7  00 00				add	[bx+si],al
020A:14A9  00 00				add	[bx+si],al
020A:14AB  00 00				add	[bx+si],al
020A:14AD  00			data_222	db	0
020A:14AE  00 00				add	[bx+si],al
020A:14B0  00 00				add	[bx+si],al
020A:14B2  00 00				add	[bx+si],al
020A:14B4  00 00				add	[bx+si],al
020A:14B6  00 00				add	[bx+si],al
020A:14B8  00 00				add	[bx+si],al
020A:14BA  00 00				add	[bx+si],al
020A:14BC  00 00				add	[bx+si],al
020A:14BE  00 00				add	[bx+si],al
020A:14C0  00 00				add	[bx+si],al
020A:14C2  00 00				add	[bx+si],al
020A:14C4  00 00				add	[bx+si],al
020A:14C6  00 00				add	[bx+si],al
020A:14C8  00 00				add	[bx+si],al
020A:14CA  00 00				add	[bx+si],al
020A:14CC  00 00				add	[bx+si],al
020A:14CE  00 00				add	[bx+si],al
020A:14D0  00 00				add	[bx+si],al
020A:14D2  00 00				add	[bx+si],al
020A:14D4  00 00				add	[bx+si],al
020A:14D6  00 00				add	[bx+si],al
020A:14D8  00 00				add	[bx+si],al
020A:14DA  00 00				add	[bx+si],al
020A:14DC  00 00				add	[bx+si],al
020A:14DE  00 00				add	[bx+si],al
020A:14E0  00 00				add	[bx+si],al
020A:14E2  00 00				add	[bx+si],al
020A:14E4  00 00				add	[bx+si],al
020A:14E6  00 00				add	[bx+si],al
020A:14E8  00 00				add	[bx+si],al
020A:14EA  00 00				add	[bx+si],al
020A:14EC  00 00				add	[bx+si],al
020A:14EE  00 00				add	[bx+si],al
020A:14F0  00 00				add	[bx+si],al
020A:14F2  00 00				add	[bx+si],al
020A:14F4  00 00				add	[bx+si],al
020A:14F6  00 00				add	[bx+si],al
020A:14F8  00 00				add	[bx+si],al
020A:14FA  00 00				add	[bx+si],al
020A:14FC  00 00				add	[bx+si],al
020A:14FE  00 00				add	[bx+si],al
020A:1500  00 00				add	[bx+si],al
020A:1502  00 00				add	[bx+si],al
020A:1504  00 00				add	[bx+si],al
020A:1506  00 00				add	[bx+si],al
020A:1508  00 00				add	[bx+si],al
020A:150A  00 00				add	[bx+si],al
020A:150C  00 00				add	[bx+si],al
020A:150E  00 00				add	[bx+si],al
020A:1510  00 00				add	[bx+si],al
020A:1512  00 00				add	[bx+si],al
020A:1514  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 34

020A:1516  00 00				add	[bx+si],al
020A:1518  00 00				add	[bx+si],al
020A:151A  00 00				add	[bx+si],al
020A:151C  00 00				add	[bx+si],al
020A:151E  00 00				add	[bx+si],al
020A:1520  00 00				add	[bx+si],al
020A:1522  00 00				add	[bx+si],al
020A:1524  00 00				add	[bx+si],al
020A:1526  00 00				add	[bx+si],al
020A:1528  00 00				add	[bx+si],al
020A:152A  00			data_223	db	0
020A:152B  00			data_224	db	0
020A:152C  00 00				add	[bx+si],al
020A:152E  00 00				add	[bx+si],al
020A:1530  00 00				add	[bx+si],al
020A:1532  00 00				add	[bx+si],al
020A:1534  00 00				add	[bx+si],al
020A:1536  00 00				add	[bx+si],al
020A:1538  00 00				add	[bx+si],al
020A:153A  00 00				add	[bx+si],al
020A:153C  00 00				add	[bx+si],al
020A:153E  00 00				add	[bx+si],al
020A:1540  00 00				add	[bx+si],al
020A:1542  00 00				add	[bx+si],al
020A:1544  00 00				add	[bx+si],al
020A:1546  00 00				add	[bx+si],al
020A:1548  00 00				add	[bx+si],al
020A:154A  00 00				add	[bx+si],al
020A:154C  00 00				add	[bx+si],al
020A:154E  00 00				add	[bx+si],al
020A:1550  00 00				add	[bx+si],al
020A:1552  00 00				add	[bx+si],al
020A:1554  00 00				add	[bx+si],al
020A:1556  00 00				add	[bx+si],al
020A:1558  00 00				add	[bx+si],al
020A:155A  00 00				add	[bx+si],al
020A:155C  00 00				add	[bx+si],al
020A:155E  00 00				add	[bx+si],al
020A:1560  00 00				add	[bx+si],al
020A:1562  00 00				add	[bx+si],al
020A:1564  00 00				add	[bx+si],al
020A:1566  00 00				add	[bx+si],al
020A:1568  00 00				add	[bx+si],al
020A:156A  00 00				add	[bx+si],al
020A:156C  00 00				add	[bx+si],al
020A:156E  00 00				add	[bx+si],al
020A:1570  00 00				add	[bx+si],al
020A:1572  00 00				add	[bx+si],al
020A:1574  00 00				add	[bx+si],al
020A:1576  00 00				add	[bx+si],al
020A:1578  00 00				add	[bx+si],al
020A:157A  00 00				add	[bx+si],al
020A:157C  00 00				add	[bx+si],al
020A:157E  00 00				add	[bx+si],al
020A:1580  00 00				add	[bx+si],al
020A:1582  00 00				add	[bx+si],al
020A:1584  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 35

020A:1586  00 00				add	[bx+si],al
020A:1588  00 00				add	[bx+si],al
020A:158A  00 00				add	[bx+si],al
020A:158C  00 00				add	[bx+si],al
020A:158E  00 00				add	[bx+si],al
020A:1590  00 00				add	[bx+si],al
020A:1592  00 00				add	[bx+si],al
020A:1594  00 00				add	[bx+si],al
020A:1596  00 00				add	[bx+si],al
020A:1598  00 00				add	[bx+si],al
020A:159A  00 00				add	[bx+si],al
020A:159C  00 00				add	[bx+si],al
020A:159E  00 00				add	[bx+si],al
020A:15A0  00 00				add	[bx+si],al
020A:15A2  00 00				add	[bx+si],al
020A:15A4  00 00				add	[bx+si],al
020A:15A6  00 00				add	[bx+si],al
020A:15A8  00 00				add	[bx+si],al
020A:15AA  00 00				add	[bx+si],al
020A:15AC  00 00				add	[bx+si],al
020A:15AE  00 00				add	[bx+si],al
020A:15B0  00 00				add	[bx+si],al
020A:15B2  00 00				add	[bx+si],al
020A:15B4  00 00				add	[bx+si],al
020A:15B6  00 00				add	[bx+si],al
020A:15B8  00 00				add	[bx+si],al
020A:15BA  00 00				add	[bx+si],al
020A:15BC  00 00				add	[bx+si],al
020A:15BE  00 00				add	[bx+si],al
020A:15C0  00 00				add	[bx+si],al
020A:15C2  00 00				add	[bx+si],al
020A:15C4  00 00				add	[bx+si],al
020A:15C6  00 00				add	[bx+si],al
020A:15C8  00 00				add	[bx+si],al
020A:15CA  00 00				add	[bx+si],al
020A:15CC  00 00				add	[bx+si],al
020A:15CE  00 00				add	[bx+si],al
020A:15D0  00 00				add	[bx+si],al
020A:15D2  00 00				add	[bx+si],al
020A:15D4  00 00				add	[bx+si],al
020A:15D6  00 00				add	[bx+si],al
020A:15D8  00 00				add	[bx+si],al
020A:15DA  00 00				add	[bx+si],al
020A:15DC  00 00				add	[bx+si],al
020A:15DE  00 00				add	[bx+si],al
020A:15E0  00 00				add	[bx+si],al
020A:15E2  00 00				add	[bx+si],al
020A:15E4  00 00				add	[bx+si],al
020A:15E6  00 00				add	[bx+si],al
020A:15E8  00 00				add	[bx+si],al
020A:15EA  00 00				add	[bx+si],al
020A:15EC  00 00				add	[bx+si],al
020A:15EE  00 00				add	[bx+si],al
020A:15F0  00 00				add	[bx+si],al
020A:15F2  00 00				add	[bx+si],al
020A:15F4  00 00				add	[bx+si],al
020A:15F6  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 36

020A:15F8  00 00				add	[bx+si],al
020A:15FA  00 00				add	[bx+si],al
020A:15FC  00 00				add	[bx+si],al
020A:15FE  00 00				add	[bx+si],al
020A:1600  00 00				add	[bx+si],al
020A:1602  00 00				add	[bx+si],al
020A:1604  00 00				add	[bx+si],al
020A:1606  00 00				add	[bx+si],al
020A:1608  00 00				add	[bx+si],al
020A:160A  00 00				add	[bx+si],al
020A:160C  00 00				add	[bx+si],al
020A:160E  00 00				add	[bx+si],al
020A:1610  00 00				add	[bx+si],al
020A:1612  00 00				add	[bx+si],al
020A:1614  00 00				add	[bx+si],al
020A:1616  00 00				add	[bx+si],al
020A:1618  00 00				add	[bx+si],al
020A:161A  00 00				add	[bx+si],al
020A:161C  00 00				add	[bx+si],al
020A:161E  00 00				add	[bx+si],al
020A:1620  00 00				add	[bx+si],al
020A:1622  00 00				add	[bx+si],al
020A:1624  00 00				add	[bx+si],al
020A:1626  00 00				add	[bx+si],al
020A:1628  00 00				add	[bx+si],al
020A:162A  00 00				add	[bx+si],al
020A:162C  00 00				add	[bx+si],al
020A:162E  00 00				add	[bx+si],al
020A:1630  00 00				add	[bx+si],al
020A:1632  00 00				add	[bx+si],al
020A:1634  00 00				add	[bx+si],al
020A:1636  00 00				add	[bx+si],al
020A:1638  00 00				add	[bx+si],al
020A:163A  00 00				add	[bx+si],al
020A:163C  00 00				add	[bx+si],al
020A:163E  00 00				add	[bx+si],al
020A:1640  00 00				add	[bx+si],al
020A:1642  00 00				add	[bx+si],al
020A:1644  00 00				add	[bx+si],al
020A:1646  00 00				add	[bx+si],al
020A:1648  00 00				add	[bx+si],al
020A:164A  00 00				add	[bx+si],al
020A:164C  00 00				add	[bx+si],al
020A:164E  00 00				add	[bx+si],al
020A:1650  00 00				add	[bx+si],al
020A:1652  00 00				add	[bx+si],al
020A:1654  00 00				add	[bx+si],al
020A:1656  00 00				add	[bx+si],al
020A:1658  00 00				add	[bx+si],al
020A:165A  00 00				add	[bx+si],al
020A:165C  00 00				add	[bx+si],al
020A:165E  00 00				add	[bx+si],al
020A:1660  00 00				add	[bx+si],al
020A:1662  00 00				add	[bx+si],al
020A:1664  00 00				add	[bx+si],al
020A:1666  00 00				add	[bx+si],al
020A:1668  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 37

020A:166A  0C 00				or	al,0
020A:166C  82 01 54				add	byte ptr [bx+di],54h	; 'T'
020A:166F  03 58 72				add	bx,[bx+si+72h]
020A:1672  03 09				add	cx,[bx+di]
020A:1674  00 19				add	[bx+di],bl
020A:1676  00 00				add	[bx+si],al
020A:1678  0C 00				or	al,0
020A:167A  82 01 52				add	byte ptr [bx+di],52h	; 'R'
020A:167D  03 00				add	ax,[bx+si]
020A:167F  00 FF				add	bh,bh
020A:1681  FF					db	0FFh
020A:1682  D9 19				esc	1,[bx+di]		; coprocessor escape
020A:1684  04 00				add	al,0
020A:1686  00 00				add	[bx+si],al
020A:1688  0011[41]				db	17 dup (41h)
020A:1699  00 00				add	[bx+si],al
020A:169B  00 00				add	[bx+si],al
020A:169D  000A[41]				db	10 dup (41h)
020A:16A7  00 00				add	[bx+si],al
020A:16A9  0011[41]				db	17 dup (41h)
020A:16BA  00 00				add	[bx+si],al
020A:16BC  00 00				add	[bx+si],al
020A:16BE  000A[41]				db	10 dup (41h)
020A:16C8  00 00				add	[bx+si],al
020A:16CA  0011[41]				db	17 dup (41h)
020A:16DB  00 00				add	[bx+si],al
020A:16DD  00 00				add	[bx+si],al
020A:16DF  000A[41]				db	10 dup (41h)
020A:16E9  00 00				add	[bx+si],al
020A:16EB  0011[41]				db	17 dup (41h)
020A:16FC  00 00				add	[bx+si],al
020A:16FE  00 00				add	[bx+si],al
020A:1700  000A[41]				db	10 dup (41h)
020A:170A  00 00				add	[bx+si],al
020A:170C  00 00				add	[bx+si],al
020A:170E  95					xchg	ax,bp
020A:170F  1C 4C				sbb	al,4Ch			; 'L'
020A:1711  7C 03				jl	loc_138			; Jump if <
020A:1713  12 00				adc	al,[bx+si]
020A:1715  00 52 03				add	[bp+si+3],dl
020A:1718  00 00				add	[bx+si],al
020A:171A  00 00				add	[bx+si],al
020A:171C  C7					db	0C7h
020A:171D  1C 00				sbb	al,0
020A:171F  00 41 3A				add	[bx+di+3Ah],al
020A:1722  5C					pop	sp
020A:1723  0041[00]				db	65 dup (0)
020A:1764  58					pop	ax
020A:1765  02 00				add	al,[bx+si]
020A:1767  42					inc	dx
020A:1768  3A 5C 00				cmp	bl,[si+0]
020A:176B  0040[00]				db	64 dup (0)
020A:17AB  58					pop	ax
020A:17AC  02 00				add	al,[bx+si]
020A:17AE  43					inc	bx
020A:17AF  3A 5C 44				cmp	bl,[si+44h]
020A:17B2  4F					dec	di
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 38

020A:17B3  43					inc	bx
020A:17B4  55					push	bp
020A:17B5  4D					dec	bp
020A:17B6  45					inc	bp
020A:17B7  7E 31				jle	loc_139			; Jump if < or =
020A:17B9  5C					pop	sp
020A:17BA  4C					dec	sp
020A:17BB  4F					dec	di
020A:17BC  41					inc	cx
020A:17BD  44					inc	sp
020A:17BE  45					inc	bp
020A:17BF  45					inc	bp
020A:17C0  7E 31				jle	loc_140			; Jump if < or =
020A:17C2  5C					pop	sp
020A:17C3  30 30				xor	[bx+si],dh
020A:17C5  31 36 317E				xor	data_418,si		; (020A:317E=464Fh)
020A:17C9  0029[00]				db	41 dup (0)
020A:17F2  54					push	sp
020A:17F3			loc_140:
020A:17F3  02 00				add	al,[bx+si]
020A:17F5  44					inc	sp
020A:17F6  3A 5C 00				cmp	bl,[si+0]
020A:17F9  0040[00]				db	64 dup (0)
020A:1839  5C					pop	sp
020A:183A  02 00				add	al,[bx+si]
020A:183C  B5 01				mov	ch,1
020A:183E  00 00				add	[bx+si],al
020A:1840  53					push	bx
020A:1841  8F 03				pop	word ptr [bp+di]
020A:1843  7E 00				jle	loc_141			; Jump if < or =
020A:1845			loc_141:
020A:1845  00 0C				add	[si],cl
020A:1847  00 58 00				add	[bx+si+0],bl
020A:184A  AA					stosb				; Store al to es:[di]
020A:184B  03 00				add	ax,[bx+si]
020A:184D  00 00				add	[bx+si],al
020A:184F  00 00				add	[bx+si],al
020A:1851  00 09				add	[bx+di],cl
020A:1853  00 48 00				add	[bx+si+0],cl
020A:1856  80 00 00				add	byte ptr [bx+si],0
020A:1859  00 C0				add	al,al
020A:185B  03 00				add	ax,[bx+si]
020A:185D  00 40 00				add	[bx+si+0],al
020A:1860  40					inc	ax
020A:1861  00 53 FF				add	[bp+di-1],dl
020A:1864  00 F0				add	al,dh
020A:1866  E8 01CE				call	sub_25			; (1A37)
020A:1869  12 00				adc	al,[bx+si]
020A:186B  46					inc	si
020A:186C  07					pop	es
020A:186D  0A 02				or	al,[bp+si]
020A:186F  E8 01C5				call	sub_25			; (1A37)
020A:1872  1B 00				sbb	ax,[bx+si]
020A:1874  0A 04				or	al,[si]
020A:1876  0A 02				or	al,[bp+si]
020A:1878  EB 02				jmp	short loc_142		; (187C)
020A:187A  90					nop
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 39

020A:187B  00 E8				add	al,ch
020A:187D  B8 2401				mov	ax,2401h
020A:1880  00 A4 0A0C				add	data_167[si],ah		; (020A:0A0C=1Ch)
020A:1884  02 E8				add	ch,al
020A:1886  AF					scasw				; Scan es:[di] for ax
020A:1887  01 31				add	[bx+di],si
020A:1889  00 EB				add	bl,ch
020A:188B  10 FF				adc	bh,bh
020A:188D  03 0A				add	cx,[bp+si]
020A:188F  02 4B 42				add	cl,[bp+di+42h]
020A:1892  00 EB				add	bl,ch
020A:1894  000C 0000		data_239	dw	0Ch, 0
020A:1898  00 00				add	[bx+si],al
020A:189A  00 00				add	[bx+si],al
020A:189C  E8 0198				call	sub_25			; (1A37)
020A:189F  3C 00				cmp	al,0
020A:18A1  E9 0132				jmp	loc_158			; (19D6)
020A:18A4  EB 10				jmp	short loc_143		; (18B6)
020A:18A6  FF 03				inc	word ptr [bp+di]
020A:18A8  0A 02				or	al,[bp+si]
020A:18AA  4B					dec	bx
020A:18AB  42					inc	dx
020A:18AC  00 EB				add	bl,ch
020A:18AE  0C 00				or	al,0
020A:18B0  00 00				add	[bx+si],al
020A:18B2  00 00				add	[bx+si],al
020A:18B4  00 00				add	[bx+si],al
020A:18B6			loc_143:
020A:18B6  E8 017E				call	sub_25			; (1A37)
020A:18B9  56					push	si
020A:18BA  00 E9				add	cl,ch
020A:18BC  18 01				sbb	[bx+di],al
020A:18BE  EB 10				jmp	short loc_144		; (18D0)
020A:18C0  FF 03				inc	word ptr [bp+di]
020A:18C2  0A 02				or	al,[bp+si]
020A:18C4  4B					dec	bx
020A:18C5  42					inc	dx
020A:18C6  00 EB				add	bl,ch
020A:18C8  0C 00				or	al,0
020A:18CA  00 00				add	[bx+si],al
020A:18CC  00 00				add	[bx+si],al
020A:18CE  00 00				add	[bx+si],al
020A:18D0			loc_144:
020A:18D0  E8 0164				call	sub_25			; (1A37)
020A:18D3  70 00				jo	loc_145			; Jump if overflow=1
020A:18D5			loc_145:
020A:18D5  E9 00FE				jmp	loc_158			; (19D6)
020A:18D8  EB 10				jmp	short loc_146		; (18EA)
020A:18DA  FF 03				inc	word ptr [bp+di]
020A:18DC  0A 02				or	al,[bp+si]
020A:18DE  4B					dec	bx
020A:18DF  42					inc	dx
020A:18E0  00 EB				add	bl,ch
020A:18E2  0C 00				or	al,0
020A:18E4  00 00				add	[bx+si],al
020A:18E6  00 00				add	[bx+si],al
020A:18E8  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 40

020A:18EA			loc_146:
020A:18EA  E8 014A				call	sub_25			; (1A37)
020A:18ED  8A 00				mov	al,[bx+si]
020A:18EF  E9 00E4				jmp	loc_158			; (19D6)
020A:18F2  EB 10				jmp	short loc_147		; (1904)
020A:18F4  B3 07				mov	bl,7
020A:18F6  0A 02				or	al,[bp+si]
020A:18F8  4B					dec	bx
020A:18F9  42					inc	dx
020A:18FA  00 EB				add	bl,ch
020A:18FC  0C 00				or	al,0
020A:18FE  00 00				add	[bx+si],al
020A:1900  00 00				add	[bx+si],al
020A:1902  00 00				add	[bx+si],al
020A:1904			loc_147:
020A:1904  E8 0130				call	sub_25			; (1A37)
020A:1907  A4					movsb				; Mov [si] to es:[di]
020A:1908  00 E9				add	cl,ch
020A:190A  CA EB00				retf	0EB00h			; Return far
020A:190D  10 B4 0A06				adc	data_166[si],dh		; (020A:0A06=74h)
020A:1911  02 4B 42				add	cl,[bp+di+42h]
020A:1914  00 EB				add	bl,ch
020A:1916  0C 00				or	al,0
020A:1918  00 00				add	[bx+si],al
020A:191A  00 00				add	[bx+si],al
020A:191C  00 00				add	[bx+si],al
020A:191E  E8 0116				call	sub_25			; (1A37)
020A:1921  BE E900				mov	si,0E900h
020A:1924  B0 00				mov	al,0
020A:1926  EB 10				jmp	short loc_148		; (1938)
020A:1928  B4 06				mov	ah,6
020A:192A  0A 02				or	al,[bp+si]
020A:192C  4B					dec	bx
020A:192D  42					inc	dx
020A:192E  00 EB				add	bl,ch
020A:1930  0C 00				or	al,0
020A:1932  00 00				add	[bx+si],al
020A:1934  00 00				add	[bx+si],al
020A:1936  00 00				add	[bx+si],al
020A:1938			loc_148:
020A:1938  E8 00FC				call	sub_25			; (1A37)
020A:193B  D8 00				esc	0,[bx+si]		; coprocessor escape
020A:193D  E9 0096				jmp	loc_158			; (19D6)
020A:1940  EB 10				jmp	short loc_149		; (1952)
020A:1942  B4 06				mov	ah,6
020A:1944  0A 02				or	al,[bp+si]
020A:1946  4B					dec	bx
020A:1947  42					inc	dx
020A:1948  00 EB				add	bl,ch
020A:194A  0C 00				or	al,0
020A:194C  00 00				add	[bx+si],al
020A:194E  00 00				add	[bx+si],al
020A:1950  00 00				add	[bx+si],al
020A:1952			loc_149:
020A:1952  E8 00E2				call	sub_25			; (1A37)
020A:1955  F2					db	0F2h
020A:1956  00 EB				add	bl,ch
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 41

020A:1958  7D 90				jge	loc_146			; Jump if > or =
020A:195A  EB 10				jmp	short loc_150		; (196C)
020A:195C  B4 06				mov	ah,6
020A:195E  0A 02				or	al,[bp+si]
020A:1960  4B					dec	bx
020A:1961  42					inc	dx
020A:1962  00 EB				add	bl,ch
020A:1964  0C 00				or	al,0
020A:1966  00 00				add	[bx+si],al
020A:1968  00 00				add	[bx+si],al
020A:196A  00 00				add	[bx+si],al
020A:196C			loc_150:
020A:196C  E8 00C8				call	sub_25			; (1A37)
020A:196F  0C 01				or	al,1
020A:1971  EB 63				jmp	short loc_158		; (19D6)
020A:1973  90					nop
020A:1974  EB 10				jmp	short loc_151		; (1986)
020A:1976  B4 06				mov	ah,6
020A:1978  0A 02				or	al,[bp+si]
020A:197A  4B					dec	bx
020A:197B  42					inc	dx
020A:197C  00 EB				add	bl,ch
020A:197E  0C 00				or	al,0
020A:1980  00 00				add	[bx+si],al
020A:1982  00 00				add	[bx+si],al
020A:1984  00 00				add	[bx+si],al
020A:1986			loc_151:
020A:1986  E8 00AE				call	sub_25			; (1A37)
020A:1989  26					db	26h
020A:198A  01 EB				add	bx,bp
020A:198C  49					dec	cx
020A:198D  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_24		proc	near
020A:198E  1E					push	ds
020A:198F  50					push	ax
020A:1990  B8 0040				mov	ax,40h
020A:1993  8E D8				mov	ds,ax
020A:1995  9F					lahf				; Load ah from flags
020A:1996  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:199C  75 0C				jnz	loc_153			; Jump if not zero
020A:199E  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:19A5			loc_152:
020A:19A5  9E					sahf				; Store ah into flags
020A:19A6  58					pop	ax
020A:19A7  1F					pop	ds
020A:19A8  EB 03				jmp	short loc_154		; (19AD)
020A:19AA			loc_153:
020A:19AA  FA					cli				; Disable interrupts
020A:19AB  EB F8				jmp	short loc_152		; (19A5)
020A:19AD			loc_154:
020A:19AD  C3					retn
				sub_24		endp
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 42

  
020A:19AE  1E					push	ds
020A:19AF  50					push	ax
020A:19B0  B8 0040				mov	ax,40h
020A:19B3  8E D8				mov	ds,ax
020A:19B5  9F					lahf				; Load ah from flags
020A:19B6  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:19BC  75 14				jnz	loc_156			; Jump if not zero
020A:19BE  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:19C4  75 0C				jnz	loc_156			; Jump if not zero
020A:19C6  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:19CD			loc_155:
020A:19CD  9E					sahf				; Store ah into flags
020A:19CE  58					pop	ax
020A:19CF  1F					pop	ds
020A:19D0  EB 03				jmp	short loc_157		; (19D5)
020A:19D2			loc_156:
020A:19D2  FB					sti				; Enable interrupts
020A:19D3  EB F8				jmp	short loc_155		; (19CD)
020A:19D5			loc_157:
020A:19D5  C3					retn
020A:19D6			loc_158:
020A:19D6  1E					push	ds
020A:19D7  50					push	ax
020A:19D8  B8 0040				mov	ax,40h
020A:19DB  8E D8				mov	ds,ax
020A:19DD  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:19E3  75 4F				jnz	loc_166			; Jump if not zero
020A:19E5  55					push	bp
020A:19E6  8B EC				mov	bp,sp
020A:19E8  8B 46 0A				mov	ax,[bp+0Ah]
020A:19EB  5D					pop	bp
020A:19EC  A9 0100				test	ax,100h
020A:19EF  75 43				jnz	loc_166			; Jump if not zero
020A:19F1  A9 0200				test	ax,200h
020A:19F4  74 22				jz	loc_162			; Jump if zero
020A:19F6  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:19FD  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:1A03  75 2F				jnz	loc_166			; Jump if not zero
020A:1A05			loc_159:
020A:1A05  86 E0				xchg	ah,al
020A:1A07  FC					cld				; Clear direction
020A:1A08  A8 04				test	al,4
020A:1A0A  75 25				jnz	loc_165			; Jump if not zero
020A:1A0C			loc_160:
020A:1A0C  A8 08				test	al,8
020A:1A0E  75 11				jnz	loc_163			; Jump if not zero
020A:1A10  70 19				jo	loc_164			; Jump if overflow=1
020A:1A12			loc_161:
020A:1A12  9E					sahf				; Store ah into flags
020A:1A13  58					pop	ax
020A:1A14  1F					pop	ds
020A:1A15  CA 0002				retf	2			; Return far
020A:1A18			loc_162:
020A:1A18  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (020A:0314=3231h)
020A:1A1F  EB E4				jmp	short loc_159		; (1A05)
020A:1A21			loc_163:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 43

020A:1A21  70 EF				jo	loc_161			; Jump if overflow=1
020A:1A23  50					push	ax
020A:1A24  B0 7F				mov	al,7Fh
020A:1A26  04 02				add	al,2
020A:1A28  58					pop	ax
020A:1A29  EB E7				jmp	short loc_161		; (1A12)
020A:1A2B			loc_164:
020A:1A2B  50					push	ax
020A:1A2C  32 C0				xor	al,al			; Zero register
020A:1A2E  58					pop	ax
020A:1A2F  EB E1				jmp	short loc_161		; (1A12)
020A:1A31			loc_165:
020A:1A31  FD					std				; Set direction flag
020A:1A32  EB D8				jmp	short loc_160		; (1A0C)
020A:1A34			loc_166:
020A:1A34  58					pop	ax
020A:1A35  1F					pop	ds
020A:1A36  CF					iret				; Interrupt return
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_25		proc	near
020A:1A37  50					push	ax
020A:1A38  55					push	bp
020A:1A39  06					push	es
020A:1A3A  2E: 8E 06 000A			mov	es,word ptr cs:[0Ah]	; (020A:000A=272Dh)
020A:1A3F  2E: 8B 2E 0010			mov	bp,word ptr cs:[10h]	; (020A:0010=1FBFh)
020A:1A44  B0 01				mov	al,1
020A:1A46  26: 86 46 00				xchg	al,es:[bp]
020A:1A4A  3C 00				cmp	al,0
020A:1A4C  75 51				jne	loc_168			; Jump if not equal
020A:1A4E  2E: 83 2E 0010 08			sub	word ptr cs:[10h],8	; (020A:0010=1FBFh)
020A:1A54			loc_167:
020A:1A54  26: 89 66 02				mov	es:[bp+2],sp
020A:1A58  26: 8C 56 04				mov	es:[bp+4],ss
020A:1A5C  8B C5				mov	ax,bp
020A:1A5E  26: 8B 6E 06				mov	bp,es:[bp+6]
020A:1A62  26: 39 46 00				cmp	es:[bp],ax
020A:1A66  75 44				jne	loc_170			; Jump if not equal
020A:1A68  55					push	bp
020A:1A69  8B EC				mov	bp,sp
020A:1A6B  8B 46 08				mov	ax,[bp+8]
020A:1A6E  5D					pop	bp
020A:1A6F  06					push	es
020A:1A70  17					pop	ss
020A:1A71  8B E5				mov	sp,bp
020A:1A73  8B E8				mov	bp,ax
020A:1A75  2E: 8B 6E 00				mov	bp,cs:[bp]
020A:1A79  9C					pushf				; Push flags
020A:1A7A  2E: FF 5E 00		;*		call	dword ptr cs:[bp]	;*3 entries
020A:1A7B  FF 5E 00				db	0FFh, 5Eh, 00h
020A:1A7E  8B EC				mov	bp,sp
020A:1A80  26: 8B 6E 00				mov	bp,es:[bp]
020A:1A84  26: 8E 56 04				mov	ss,es:[bp+4]
020A:1A88  26: 8B 66 02				mov	sp,es:[bp+2]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 44

020A:1A8C  26: C6 46 00 00			mov	byte ptr es:[bp],0
020A:1A91  2E: 89 2E 0010			mov	word ptr cs:[10h],bp	; (020A:0010=1FBFh)
020A:1A96  07					pop	es
020A:1A97  5D					pop	bp
020A:1A98  58					pop	ax
020A:1A99  83 C4 02				add	sp,2
020A:1A9C  E9 FF37				jmp	loc_158			; (19D6)
020A:1A9F			loc_168:
020A:1A9F  3C 01				cmp	al,1
020A:1AA1  74 04				je	loc_169			; Jump if equal
020A:1AA3  26: 86 46 00				xchg	al,es:[bp]
020A:1AA7			loc_169:
020A:1AA7  E8 0012				call	sub_26			; (1ABC)
020A:1AAA  EB A8				jmp	short loc_167		; (1A54)
020A:1AAC			loc_170:
020A:1AAC  2E: 3B 2E 000C			cmp	bp,word ptr cs:[0Ch]	; (020A:000C=9028h)
020A:1AB1  72 F4				jb	loc_169			; Jump if below
020A:1AB3  8B E8				mov	bp,ax
020A:1AB5  26: C6 46 00 03			mov	byte ptr es:[bp],3
020A:1ABA  EB EB				jmp	short loc_169		; (1AA7)
				sub_25		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_26		proc	near
020A:1ABC  2E: 8B 2E 000E			mov	bp,word ptr cs:[0Eh]	; (020A:000E=0A02Bh)
020A:1AC1			loc_171:
020A:1AC1  26: 80 7E 00 00			cmp	byte ptr es:[bp],0
020A:1AC6  75 12				jne	loc_173			; Jump if not equal
020A:1AC8  B0 01				mov	al,1
020A:1ACA  26: 86 46 00				xchg	al,es:[bp]
020A:1ACE  3C 00				cmp	al,0
020A:1AD0  74 14				je	loc_174			; Jump if equal
020A:1AD2  3C 01				cmp	al,1
020A:1AD4  74 04				je	loc_173			; Jump if equal
020A:1AD6  26: 88 46 00				mov	es:[bp],al
020A:1ADA			loc_173:
020A:1ADA  2E: 3B 2E 000C			cmp	bp,word ptr cs:[0Ch]	; (020A:000C=9028h)
020A:1ADF  74 06				je	loc_175			; Jump if equal
020A:1AE1  83 ED 08				sub	bp,8
020A:1AE4  EB DB				jmp	short loc_171		; (1AC1)
020A:1AE6			loc_174:
020A:1AE6  C3					retn
020A:1AE7			loc_175:
020A:1AE7  E8 FEA4				call	sub_24			; (198E)
  
020A:1AEA			locloop_176:
020A:1AEA  B0 FF				mov	al,0FFh
020A:1AEC  E6 21				out	21h,al			; port 21h, 8259-1 int comands
020A:1AEE  E6 A1				out	0A1h,al			; port 0A1h, inhibit IRQ8 RTC
										;  al = 0FFh, inhibit interrupts
020A:1AF0  8C CE				mov	si,cs
020A:1AF2  8E DE				mov	ds,si
020A:1AF4  BE 02CB				mov	si,2CBh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 45

020A:1AF7  50					push	ax
020A:1AF8  1E					push	ds
020A:1AF9  B8 0070				mov	ax,70h
020A:1AFC  8E D8				mov	ds,ax
020A:1AFE  F6 06 0337 01			test	byte ptr ds:[337h],1	; (0070:0337=0)
020A:1B03  1F					pop	ds
020A:1B04  58					pop	ax
020A:1B05  74 05				jz	loc_177			; Jump if zero
020A:1B07  9A 0070:0338		;*		call	far ptr sub_2		;*(0070:0338)
020A:1B07  9A 38 03 70 00			db	 9Ah, 38h, 03h, 70h, 00h
020A:1B0C			loc_177:
020A:1B0C  AC					lodsb				; String [si] to al
020A:1B0D  3C 24				cmp	al,24h			; '$'
020A:1B0F  74 08				je	loc_179			; Jump if equal
020A:1B11  B3 07				mov	bl,7
020A:1B13  B4 0E				mov	ah,0Eh
020A:1B15  CD 10				int	10h			; Video display   ah=functn 0Eh
										;  write char al, teletype mode
020A:1B17  EB F3				jmp	short loc_177		; (1B0C)
020A:1B19			loc_179:
020A:1B19  EB FE				jmp	short loc_179		; (1B19)
				sub_26		endp
  
020A:1B1B  0D 070A				or	ax,70Ah
020A:1B1E  0D 8F0A				or	ax,8F0Ah
020A:1B21  A5					movsw				; Mov [si] to es:[di]
020A:1B22  E0 A5		;*		loopnz	locloop_172		;*Loop if zf=0, cx>0
  
020A:1B22  E0 A5				db	0E0h,0A5h
020A:1B24  AF					scasw				; Scan es:[di] for ax
020A:1B25  AE					scasb				; Scan es:[di] for al
020A:1B26  AB					stosw				; Store ax to es:[di]
020A:1B27  AD					lodsw				; String [si] to ax
020A:1B28  A5					movsw				; Mov [si] to es:[di]
020A:1B29  AD					lodsw				; String [si] to ax
020A:1B2A  A8 A5				test	al,0A5h
020A:1B2C  20 A2 E3AD				and	[bp+si-1C53h],ah
020A:1B30  E2 E0		;*		loop	locloop_178		;*Loop if cx > 0
  
020A:1B30  E2 E0				db	0E2h,0E0h
020A:1B32  A5					movsw				; Mov [si] to es:[di]
020A:1B33  AD					lodsw				; String [si] to ax
020A:1B34  AD					lodsw				; String [si] to ax
020A:1B35  A5					movsw				; Mov [si] to es:[di]
020A:1B36  A3 20AE				mov	data_259,ax		; (020A:20AE=2020h)
020A:1B39  E1 E2		;*		loopz	locloop_180		;*Loop if zf=1, cx>0
  
020A:1B39  E1 E2				db	0E1h,0E2h
020A:1B3B  A5					movsw				; Mov [si] to es:[di]
020A:1B3C  AA					stosb				; Store al to es:[di]
020A:1B3D  A0 0A0D				mov	al,data_168		; (020A:0A0D=0)
020A:1B40  91					xchg	ax,cx
020A:1B41  A8 E1				test	al,0E1h
020A:1B43  E2 A5				loop	locloop_176		; Loop if cx > 0
  
020A:1B45  AC					lodsb				; String [si] to al
020A:1B46  A0 AE20				mov	al,data_624		; (020A:AE20=75h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 46

020A:1B49  E1 E2		;*		loopz	locloop_181		;*Loop if zf=1, cx>0
  
020A:1B49  E1 E2				db	0E1h,0E2h
020A:1B4B  A0 AEAD				mov	al,data_627		; (020A:AEAD=0Dh)
020A:1B4E  A2 A5AB				mov	data_599,al		; (020A:A5AB=0C6h)
020A:1B51  AD					lodsw				; String [si] to ax
020A:1B52  A0 0A0D				mov	al,data_168		; (020A:0A0D=0)
020A:1B55  24 07				and	al,7
020A:1B57  00 09				add	[bx+di],cl
020A:1B59  69					db	69h
020A:1B5A  00 00				add	[bx+si],al
020A:1B5C  06					push	es
020A:1B5D  00 06 0000				add	byte ptr ds:[0],al	; (020A:0000=28h)
020A:1B61  00 00				add	[bx+si],al
020A:1B63  00 00				add	[bx+si],al
020A:1B65  00 C6				add	dh,al
020A:1B67  0007[00]				db	7 dup (0)
020A:1B6E  46					inc	si
020A:1B6F  01 00				add	[bx+si],ax
020A:1B71  00 00				add	[bx+si],al
020A:1B73  00 00				add	[bx+si],al
020A:1B75  00 C6				add	dh,al
020A:1B77  01 00				add	[bx+si],ax
020A:1B79  00 00				add	[bx+si],al
020A:1B7B  00 00				add	[bx+si],al
020A:1B7D  00 46 02				add	[bp+2],al
020A:1B80  00 00				add	[bx+si],al
020A:1B82  00 00				add	[bx+si],al
020A:1B84  00 00				add	[bx+si],al
020A:1B86  C6 02 00				mov	byte ptr [bp+si],0
020A:1B89  00 00				add	[bx+si],al
020A:1B8B  00 00				add	[bx+si],al
020A:1B8D  00 46 03				add	[bp+3],al
020A:1B90  00 00				add	[bx+si],al
020A:1B92  00 00				add	[bx+si],al
020A:1B94  00 00				add	[bx+si],al
020A:1B96  C6 03 00				mov	byte ptr [bp+di],0
020A:1B99  00 00				add	[bx+si],al
020A:1B9B  00 00				add	[bx+si],al
020A:1B9D  00 46 04				add	[bp+4],al
020A:1BA0  00 00				add	[bx+si],al
020A:1BA2  06					push	es
020A:1BA3  06					push	es
020A:1BA4  FB					sti				; Enable interrupts
020A:1BA5  8D					db	8Dh
020A:1BA6  C6 04 00				mov	byte ptr [si],0
020A:1BA9  00FD[00]				db	253 dup (0)
020A:1CA6  08 00				or	[bx+si],al
020A:1CA8  0078[00]				db	120 dup (0)
020A:1D20  00			data_243	db	0
020A:1D21  00 00				add	[bx+si],al
020A:1D23  00 00				add	[bx+si],al
020A:1D25  00 10				add	[bx+si],dl
020A:1D27  00 00				add	[bx+si],al
020A:1D29  00 00				add	[bx+si],al
020A:1D2B  00 00				add	[bx+si],al
020A:1D2D  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 47

020A:1D2F  00 00				add	[bx+si],al
020A:1D31  00 00				add	[bx+si],al
020A:1D33  00 00				add	[bx+si],al
020A:1D35  00 00				add	[bx+si],al
020A:1D37  00 00				add	[bx+si],al
020A:1D39  00 00				add	[bx+si],al
020A:1D3B  00 00				add	[bx+si],al
020A:1D3D  00 00				add	[bx+si],al
020A:1D3F  00 00				add	[bx+si],al
020A:1D41  00 00				add	[bx+si],al
020A:1D43  00 00				add	[bx+si],al
020A:1D45  00 00				add	[bx+si],al
020A:1D47  00 00				add	[bx+si],al
020A:1D49  00 00				add	[bx+si],al
020A:1D4B  00 00				add	[bx+si],al
020A:1D4D  00 00				add	[bx+si],al
020A:1D4F  00 00				add	[bx+si],al
020A:1D51  00 00				add	[bx+si],al
020A:1D53  00 00				add	[bx+si],al
020A:1D55  00 00				add	[bx+si],al
020A:1D57  00 00				add	[bx+si],al
020A:1D59  00 00				add	[bx+si],al
020A:1D5B  00 00				add	[bx+si],al
020A:1D5D  00 00				add	[bx+si],al
020A:1D5F  00 00				add	[bx+si],al
020A:1D61  00 00				add	[bx+si],al
020A:1D63  00 00				add	[bx+si],al
020A:1D65  00 00				add	[bx+si],al
020A:1D67  00 00				add	[bx+si],al
020A:1D69  00 00				add	[bx+si],al
020A:1D6B  00 00				add	[bx+si],al
020A:1D6D  00 00				add	[bx+si],al
020A:1D6F  00 00				add	[bx+si],al
020A:1D71  00 00				add	[bx+si],al
020A:1D73  00 00				add	[bx+si],al
020A:1D75  00 00				add	[bx+si],al
020A:1D77  00 00				add	[bx+si],al
020A:1D79  00 00				add	[bx+si],al
020A:1D7B  00 00				add	[bx+si],al
020A:1D7D  00 00				add	[bx+si],al
020A:1D7F  00 00				add	[bx+si],al
020A:1D81  00 00				add	[bx+si],al
020A:1D83  00 00				add	[bx+si],al
020A:1D85  00 00				add	[bx+si],al
020A:1D87  00 00				add	[bx+si],al
020A:1D89  00 00				add	[bx+si],al
020A:1D8B  00 00				add	[bx+si],al
020A:1D8D  00 00				add	[bx+si],al
020A:1D8F  00 00				add	[bx+si],al
020A:1D91  00 00				add	[bx+si],al
020A:1D93  00 00				add	[bx+si],al
020A:1D95  00 00				add	[bx+si],al
020A:1D97  00 00				add	[bx+si],al
020A:1D99  00 00				add	[bx+si],al
020A:1D9B  00 00				add	[bx+si],al
020A:1D9D  00 00				add	[bx+si],al
020A:1D9F  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 48

020A:1DA1  00 00				add	[bx+si],al
020A:1DA3  00 00				add	[bx+si],al
020A:1DA5  00 18				add	[bx+si],bl
020A:1DA7  00 00				add	[bx+si],al
020A:1DA9  00 00				add	[bx+si],al
020A:1DAB  00 00				add	[bx+si],al
020A:1DAD  00 00				add	[bx+si],al
020A:1DAF  00 00				add	[bx+si],al
020A:1DB1  00 00				add	[bx+si],al
020A:1DB3  00 00				add	[bx+si],al
020A:1DB5  00 00				add	[bx+si],al
020A:1DB7  00 00				add	[bx+si],al
020A:1DB9  00 00				add	[bx+si],al
020A:1DBB  00 00				add	[bx+si],al
020A:1DBD  00 00				add	[bx+si],al
020A:1DBF  00 00				add	[bx+si],al
020A:1DC1  00 00				add	[bx+si],al
020A:1DC3  00 00				add	[bx+si],al
020A:1DC5  00 00				add	[bx+si],al
020A:1DC7  00 00				add	[bx+si],al
020A:1DC9  00 00				add	[bx+si],al
020A:1DCB  00 00				add	[bx+si],al
020A:1DCD  00 00				add	[bx+si],al
020A:1DCF  00 00				add	[bx+si],al
020A:1DD1  00 00				add	[bx+si],al
020A:1DD3  00 00				add	[bx+si],al
020A:1DD5  00 00				add	[bx+si],al
020A:1DD7  00 00				add	[bx+si],al
020A:1DD9  00 00				add	[bx+si],al
020A:1DDB  00 00				add	[bx+si],al
020A:1DDD  00 00				add	[bx+si],al
020A:1DDF  00 00				add	[bx+si],al
020A:1DE1  00 00				add	[bx+si],al
020A:1DE3  00 00				add	[bx+si],al
020A:1DE5  00 00				add	[bx+si],al
020A:1DE7  00 00				add	[bx+si],al
020A:1DE9  00 00				add	[bx+si],al
020A:1DEB  00 00				add	[bx+si],al
020A:1DED  00 00				add	[bx+si],al
020A:1DEF  00 00				add	[bx+si],al
020A:1DF1  00 00				add	[bx+si],al
020A:1DF3  00 00				add	[bx+si],al
020A:1DF5  00 00				add	[bx+si],al
020A:1DF7  00 00				add	[bx+si],al
020A:1DF9  00 00				add	[bx+si],al
020A:1DFB  00 00				add	[bx+si],al
020A:1DFD  00 00				add	[bx+si],al
020A:1DFF  00 00				add	[bx+si],al
020A:1E01  00 00				add	[bx+si],al
020A:1E03  00 00				add	[bx+si],al
020A:1E05  00 00				add	[bx+si],al
020A:1E07  00 00				add	[bx+si],al
020A:1E09  00 00				add	[bx+si],al
020A:1E0B  00 00				add	[bx+si],al
020A:1E0D  00 00				add	[bx+si],al
020A:1E0F  00 00				add	[bx+si],al
020A:1E11  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 49

020A:1E13  00 00				add	[bx+si],al
020A:1E15  00 00				add	[bx+si],al
020A:1E17  00 00				add	[bx+si],al
020A:1E19  00 00				add	[bx+si],al
020A:1E1B  00 00				add	[bx+si],al
020A:1E1D  00 00				add	[bx+si],al
020A:1E1F  00 00				add	[bx+si],al
020A:1E21  00 00				add	[bx+si],al
020A:1E23  00 00				add	[bx+si],al
020A:1E25  00 20				add	[bx+si],ah
020A:1E27  00 00				add	[bx+si],al
020A:1E29  00 00				add	[bx+si],al
020A:1E2B  00 00				add	[bx+si],al
020A:1E2D  00 00				add	[bx+si],al
020A:1E2F  00 00				add	[bx+si],al
020A:1E31  00 00				add	[bx+si],al
020A:1E33  00 00				add	[bx+si],al
020A:1E35  00 00				add	[bx+si],al
020A:1E37  00 00				add	[bx+si],al
020A:1E39  00 00				add	[bx+si],al
020A:1E3B  00 00				add	[bx+si],al
020A:1E3D  00 00				add	[bx+si],al
020A:1E3F  00 00				add	[bx+si],al
020A:1E41  00 00				add	[bx+si],al
020A:1E43  00 00				add	[bx+si],al
020A:1E45  00 00				add	[bx+si],al
020A:1E47  00 00				add	[bx+si],al
020A:1E49  00 00				add	[bx+si],al
020A:1E4B  00 00				add	[bx+si],al
020A:1E4D  00 00				add	[bx+si],al
020A:1E4F  00 00				add	[bx+si],al
020A:1E51  00 00				add	[bx+si],al
020A:1E53  00 00				add	[bx+si],al
020A:1E55  00 00				add	[bx+si],al
020A:1E57  00 00				add	[bx+si],al
020A:1E59  00 00				add	[bx+si],al
020A:1E5B  00 00				add	[bx+si],al
020A:1E5D  00 00				add	[bx+si],al
020A:1E5F  00 00				add	[bx+si],al
020A:1E61  00 00				add	[bx+si],al
020A:1E63  00 00				add	[bx+si],al
020A:1E65  00 00				add	[bx+si],al
020A:1E67  00 00				add	[bx+si],al
020A:1E69  00 00				add	[bx+si],al
020A:1E6B  00 00				add	[bx+si],al
020A:1E6D  00 00				add	[bx+si],al
020A:1E6F  00 00				add	[bx+si],al
020A:1E71  00 00				add	[bx+si],al
020A:1E73  00 00				add	[bx+si],al
020A:1E75  00 00				add	[bx+si],al
020A:1E77  00 00				add	[bx+si],al
020A:1E79  00 00				add	[bx+si],al
020A:1E7B  00 00				add	[bx+si],al
020A:1E7D  00 00				add	[bx+si],al
020A:1E7F  00 00				add	[bx+si],al
020A:1E81  00 00				add	[bx+si],al
020A:1E83  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 50

020A:1E85  00 00				add	[bx+si],al
020A:1E87  00 00				add	[bx+si],al
020A:1E89  00 00				add	[bx+si],al
020A:1E8B  0000 0000				dd	00000h
020A:1E8F  00 00				add	[bx+si],al
020A:1E91  00 00				add	[bx+si],al
020A:1E93  00 00				add	[bx+si],al
020A:1E95  00 00				add	[bx+si],al
020A:1E97  00 00				add	[bx+si],al
020A:1E99  00 00				add	[bx+si],al
020A:1E9B  00 00				add	[bx+si],al
020A:1E9D  00 00				add	[bx+si],al
020A:1E9F  00 00				add	[bx+si],al
020A:1EA1  00 00				add	[bx+si],al
020A:1EA3  00 00				add	[bx+si],al
020A:1EA5  00 28				add	[bx+si],ch
020A:1EA7  00 00				add	[bx+si],al
020A:1EA9  00 00				add	[bx+si],al
020A:1EAB  00 00				add	[bx+si],al
020A:1EAD  00 00				add	[bx+si],al
020A:1EAF  00 00				add	[bx+si],al
020A:1EB1  00 00				add	[bx+si],al
020A:1EB3  00 00				add	[bx+si],al
020A:1EB5  00 00				add	[bx+si],al
020A:1EB7  00 00				add	[bx+si],al
020A:1EB9  00 00				add	[bx+si],al
020A:1EBB  00 00				add	[bx+si],al
020A:1EBD  00 00				add	[bx+si],al
020A:1EBF  00 00				add	[bx+si],al
020A:1EC1  00 00				add	[bx+si],al
020A:1EC3  00 00				add	[bx+si],al
020A:1EC5  00 00				add	[bx+si],al
020A:1EC7  00 00				add	[bx+si],al
020A:1EC9  00 00				add	[bx+si],al
020A:1ECB  00 00				add	[bx+si],al
020A:1ECD  00 00				add	[bx+si],al
020A:1ECF  00 00				add	[bx+si],al
020A:1ED1  00 00				add	[bx+si],al
020A:1ED3  00 00				add	[bx+si],al
020A:1ED5  00 00				add	[bx+si],al
020A:1ED7  00 00				add	[bx+si],al
020A:1ED9  00 00				add	[bx+si],al
020A:1EDB  00 00				add	[bx+si],al
020A:1EDD  00 00				add	[bx+si],al
020A:1EDF  00 00				add	[bx+si],al
020A:1EE1  00 00				add	[bx+si],al
020A:1EE3  00 00				add	[bx+si],al
020A:1EE5  00 00				add	[bx+si],al
020A:1EE7  00 00				add	[bx+si],al
020A:1EE9  00 00				add	[bx+si],al
020A:1EEB  00 00				add	[bx+si],al
020A:1EED  00 00				add	[bx+si],al
020A:1EEF  00 00				add	[bx+si],al
020A:1EF1  00 00				add	[bx+si],al
020A:1EF3  00 00				add	[bx+si],al
020A:1EF5  00 00				add	[bx+si],al
020A:1EF7  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 51

020A:1EF9  00 00				add	[bx+si],al
020A:1EFB  00 00				add	[bx+si],al
020A:1EFD  00 00				add	[bx+si],al
020A:1EFF  00 00				add	[bx+si],al
020A:1F01  00 00				add	[bx+si],al
020A:1F03  00 00				add	[bx+si],al
020A:1F05  00 00				add	[bx+si],al
020A:1F07  00 00				add	[bx+si],al
020A:1F09  00 00				add	[bx+si],al
020A:1F0B  00 00				add	[bx+si],al
020A:1F0D  00 00				add	[bx+si],al
020A:1F0F  00 00				add	[bx+si],al
020A:1F11  00 00				add	[bx+si],al
020A:1F13  00 00				add	[bx+si],al
020A:1F15  00 00				add	[bx+si],al
020A:1F17  00 00				add	[bx+si],al
020A:1F19  00 00				add	[bx+si],al
020A:1F1B  00 00				add	[bx+si],al
020A:1F1D  00 00				add	[bx+si],al
020A:1F1F  00 00				add	[bx+si],al
020A:1F21  00 00				add	[bx+si],al
020A:1F23  00 00				add	[bx+si],al
020A:1F25  00 30				add	[bx+si],dh
020A:1F27  00 00				add	[bx+si],al
020A:1F29  00 00				add	[bx+si],al
020A:1F2B  00 00				add	[bx+si],al
020A:1F2D  00 00				add	[bx+si],al
020A:1F2F  00 00				add	[bx+si],al
020A:1F31  00 00				add	[bx+si],al
020A:1F33  00 00				add	[bx+si],al
020A:1F35  00 00				add	[bx+si],al
020A:1F37  00 00				add	[bx+si],al
020A:1F39  00 00				add	[bx+si],al
020A:1F3B  00 00				add	[bx+si],al
020A:1F3D  00 00				add	[bx+si],al
020A:1F3F  00 00				add	[bx+si],al
020A:1F41  00 00				add	[bx+si],al
020A:1F43  00 00				add	[bx+si],al
020A:1F45  00 00				add	[bx+si],al
020A:1F47  00 00				add	[bx+si],al
020A:1F49  00 00				add	[bx+si],al
020A:1F4B  00 00				add	[bx+si],al
020A:1F4D  00 00				add	[bx+si],al
020A:1F4F  00 00				add	[bx+si],al
020A:1F51  00 00				add	[bx+si],al
020A:1F53  00 00				add	[bx+si],al
020A:1F55  00 00				add	[bx+si],al
020A:1F57  00 00				add	[bx+si],al
020A:1F59  00 00				add	[bx+si],al
020A:1F5B  00 00				add	[bx+si],al
020A:1F5D  00 00				add	[bx+si],al
020A:1F5F  00 00				add	[bx+si],al
020A:1F61  00 00				add	[bx+si],al
020A:1F63  00 00				add	[bx+si],al
020A:1F65  00 00				add	[bx+si],al
020A:1F67  00 00				add	[bx+si],al
020A:1F69  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 52

020A:1F6B  00 00				add	[bx+si],al
020A:1F6D  00 00				add	[bx+si],al
020A:1F6F  00 00				add	[bx+si],al
020A:1F71  00 00				add	[bx+si],al
020A:1F73  00 00				add	[bx+si],al
020A:1F75  00 00				add	[bx+si],al
020A:1F77  00 00				add	[bx+si],al
020A:1F79  00 00				add	[bx+si],al
020A:1F7B  00 00				add	[bx+si],al
020A:1F7D  00 00				add	[bx+si],al
020A:1F7F  00 00				add	[bx+si],al
020A:1F81  00 00				add	[bx+si],al
020A:1F83  00 00				add	[bx+si],al
020A:1F85  00 00				add	[bx+si],al
020A:1F87  00 00				add	[bx+si],al
020A:1F89  00 00				add	[bx+si],al
020A:1F8B  00 00				add	[bx+si],al
020A:1F8D  00 00				add	[bx+si],al
020A:1F8F  00 00				add	[bx+si],al
020A:1F91  00 00				add	[bx+si],al
020A:1F93  00 00				add	[bx+si],al
020A:1F95  00 00				add	[bx+si],al
020A:1F97  00 00				add	[bx+si],al
020A:1F99  00 00				add	[bx+si],al
020A:1F9B  00 00				add	[bx+si],al
020A:1F9D  00 00				add	[bx+si],al
020A:1F9F  00 00				add	[bx+si],al
020A:1FA1  00 00				add	[bx+si],al
020A:1FA3  00 00				add	[bx+si],al
020A:1FA5  00 38				add	[bx+si],bh
020A:1FA7  00 00				add	[bx+si],al
020A:1FA9  00 00				add	[bx+si],al
020A:1FAB  00 00				add	[bx+si],al
020A:1FAD  00 00				add	[bx+si],al
020A:1FAF  00 00				add	[bx+si],al
020A:1FB1  00 00				add	[bx+si],al
020A:1FB3  00 00				add	[bx+si],al
020A:1FB5  00 00				add	[bx+si],al
020A:1FB7  00 00				add	[bx+si],al
020A:1FB9  00 00				add	[bx+si],al
020A:1FBB  00 00				add	[bx+si],al
020A:1FBD  00 00				add	[bx+si],al
020A:1FBF  00 00				add	[bx+si],al
020A:1FC1  00 00				add	[bx+si],al
020A:1FC3  00 00				add	[bx+si],al
020A:1FC5  00 00				add	[bx+si],al
020A:1FC7  00 00				add	[bx+si],al
020A:1FC9  00 00				add	[bx+si],al
020A:1FCB  00 00				add	[bx+si],al
020A:1FCD  00 00				add	[bx+si],al
020A:1FCF  00 00				add	[bx+si],al
020A:1FD1  00 00				add	[bx+si],al
020A:1FD3  00 00				add	[bx+si],al
020A:1FD5  00 00				add	[bx+si],al
020A:1FD7  00 00				add	[bx+si],al
020A:1FD9  00 00				add	[bx+si],al
020A:1FDB  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 53

020A:1FDD  00 00				add	[bx+si],al
020A:1FDF  00 00				add	[bx+si],al
020A:1FE1  00 00				add	[bx+si],al
020A:1FE3  00 00				add	[bx+si],al
020A:1FE5  00 00				add	[bx+si],al
020A:1FE7  00 00				add	[bx+si],al
020A:1FE9  00 00				add	[bx+si],al
020A:1FEB  00 00				add	[bx+si],al
020A:1FED  00 00				add	[bx+si],al
020A:1FEF  00 00				add	[bx+si],al
020A:1FF1  00 00				add	[bx+si],al
020A:1FF3  00 00				add	[bx+si],al
020A:1FF5  00 00				add	[bx+si],al
020A:1FF7  00 00				add	[bx+si],al
020A:1FF9  00 00				add	[bx+si],al
020A:1FFB  00 00				add	[bx+si],al
020A:1FFD  00 00				add	[bx+si],al
020A:1FFF  00 00				add	[bx+si],al
020A:2001  00 00				add	[bx+si],al
020A:2003  00 00				add	[bx+si],al
020A:2005  00 00				add	[bx+si],al
020A:2007  00 00				add	[bx+si],al
020A:2009  00 00				add	[bx+si],al
020A:200B  00 00				add	[bx+si],al
020A:200D  00 00				add	[bx+si],al
020A:200F  00 00				add	[bx+si],al
020A:2011  00 00				add	[bx+si],al
020A:2013  00 01				add	[bx+di],al
020A:2015  91					xchg	ax,cx
020A:2016  01 91 8DFB				add	word ptr ds:[8DFBh][bx+di],dx	; (020A:8DFB=0EBFDh)
020A:201A  F3					db	0F3h
020A:201B  03 B7 FB00				add	si,word ptr ds:[0FB00h][bx]	; (020A:FB00=755Fh)
020A:201F  8D 2E 8F02				lea	bp,cs:[8F02h]		; Load effective addr
020A:2023  03 46 30				add	ax,[bp+30h]
020A:2026  40					inc	ax
020A:2027  00 04				add	[si],al
020A:2029  00 C3				add	bl,al
020A:202B  3C 00				cmp	al,0
020A:202D  00 06 4D00				add	byte ptr data_526+60h,al	; (020A:4D00=77h)
020A:2031  0E					push	cs
020A:2032  04 B5				add	al,0B5h
020A:2034  00 00				add	[bx+si],al
020A:2036  06					push	es
020A:2037  00 43 4F				add	[bp+di+4Fh],al
020A:203A  4D					dec	bp
020A:203B  4D					dec	bp
020A:203C  41					inc	cx
020A:203D  4E					dec	si
020A:203E  44					inc	sp
020A:203F  00 CD				add	ch,cl
020A:2041  20 FF				and	bh,bh
020A:2043  9F					lahf				; Load ah from flags
020A:2044  00 9A FEF0				add	[bp+si-110h],bl
020A:2048  1D 7FF0				sbb	ax,7FF0h
020A:204B  01 0E 4B04				add	data_518,cx		; (020A:4B04=9B66h)
020A:204F  01 0E 5604				add	data_533,cx		; (020A:5604=41EAh)
020A:2053  01 0E 0E04				add	data_193,cx		; (020A:0E04=0DFE8h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 54

020A:2057  04 01				add	al,1
020A:2059  01 01				add	[bx+di],ax
020A:205B  00 02				add	[bp+si],al
020A:205D  000F[FF]				db	15 dup (0FFh)
020A:206C  CC					int	3			; Debug breakpoint
020A:206D  04 FA				add	al,0FAh
020A:206F  05 040E				add	ax,40Eh
020A:2072  14 00				adc	al,0
020A:2074  18 00				sbb	[bx+si],al
020A:2076  0E					push	cs
020A:2077  04 FF				add	al,0FFh
020A:2079  FF					db	0FFh
020A:207A  FF					db	0FFh
020A:207B  FF 00				inc	word ptr [bx+si]
020A:207D  00 00				add	[bx+si],al
020A:207F  00 05				add	[di],al
020A:2081  000F[00]				db	15 dup (0)
020A:2090  CD 21				int	21h			; DOS Services  ah=function 86h
020A:2092  CB					retf				; Return far
020A:2093  000A[00]				db	10 dup (0)
020A:209D  20 20 20				db	 20h, 20h, 20h
020A:20A0  20			data_256	db	20h			; Data table (indexed access)
020A:20A1  20 20				and	[bx+si],ah
020A:20A3  20 20				and	[bx+si],ah
020A:20A5  2020			data_257	dw	2020h			; Data table (indexed access)
020A:20A7  20 00				and	[bx+si],al
020A:20A9  00 00				add	[bx+si],al
020A:20AB  00 00				add	[bx+si],al
020A:20AD  20			data_258	db	20h
020A:20AE  2020			data_259	dw	2020h
020A:20B0  0008[20]				db	8 dup (20h)
020A:20B8  0009[00]				db	9 dup (0)
020A:20C1  0D 2020				or	ax,2020h
020A:20C4  20 53 45				and	[bp+di+45h],dl
020A:20C7  54					push	sp
020A:20C8  20 42 4C				and	[bp+si+4Ch],al
020A:20CB  41					inc	cx
020A:20CC  53					push	bx
020A:20CD  54					push	sp
020A:20CE  45					inc	bp
020A:20CF  52					push	dx
020A:20D0  3D 3041				cmp	ax,3041h
020A:20D3  0D A8AD				or	ax,0A8ADh
020A:20D6  A5					movsw				; Mov [si] to es:[di]
020A:20D7  20 A4 EFAB				and	byte ptr ds:[0EFABh][si],ah	; (020A:EFAB=0FFh)
020A:20DB  20 A1 A7A2				and	data_603[bx+di],ah	; (020A:A7A2=1Ch)
020A:20DF  AE					scasb				; Scan es:[di] for al
020A:20E0  A2 A3AE				mov	data_590,al		; (020A:A3AE=74h)
020A:20E3  AE					scasb				; Scan es:[di] for al
020A:20E4  20 AF E0AE				and	byte ptr ds:[0E0AEh][bx],ch	; (020A:E0AE=10h)
020A:20E8  E2 A0		;*		loop	locloop_182		;*Loop if cx > 0
  
020A:20E8  E2 A0				db	0E2h,0A0h
020A:20EA  20 A2 AEA2				and	[bp+si-515Eh],ah
020A:20EE  A4					movsb				; Mov [si] to es:[di]
020A:20EF  A0			data_262	db	0A0h
020A:20F0  2D EBA2				sub	ax,0EBA2h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 55

020A:20F3  A2 A4AE				mov	byte ptr data_597,al	; (020A:A4AE=53h)
020A:20F6  A0 5320				mov	al,data_532		; (020A:5320=26h)
020A:20F9  42					inc	dx
020A:20FA  2C 20				sub	al,20h			; ' '
020A:20FC  AD					lodsw				; String [si] to ax
020A:20FD  A0 E0AF				mov	al,byte ptr ds:[0E0AFh]	; (020A:E0AF=0BFh)
020A:2100  A8 AC				test	al,0ACh
020A:2102  A5					movsw				; Mov [si] to es:[di]
020A:2103  E0 3A				loopnz	locloop_186		; Loop if zf=0, cx>0
  
020A:2105  0D 0DEC				or	ax,0DECh
020A:2108  E0 EB		;*		loopnz	locloop_185		;*Loop if zf=0, cx>0
  
020A:2108  E0 EB				db	0E0h,0EBh
020A:210A  A5					movsw				; Mov [si] to es:[di]
020A:210B  0D 0000				or	ax,0
020A:210E  0032[00]				db	50 dup (0)
020A:2140  E9 174D				jmp	loc_383			; (3890)
020A:2143  00 17				add	[bx],dl
020A:2145  64					db	64h
020A:2146  FF					db	0FFh
020A:2147  FF 37				push	word ptr [bx]
020A:2149  5E					pop	si
020A:214A  FF					db	0FFh
020A:214B  FF F5				push	bp
020A:214D  5C					pop	sp
020A:214E  FF					db	0FFh
020A:214F  FF 24				jmp	word ptr [si]		;*
020A:2151  61					db	61h
020A:2152  FF					db	0FFh
020A:2153  FF					db	0FFh
020A:2154  E9 FF5C		;*		jmp	loc_184			;*(20B3)
020A:2154  E9 5C FF				db	0E9h, 5Ch,0FFh
020A:2157  FF 63 5F				jmp	word ptr [bp+di+5Fh]	;*
020A:215A  FF					db	0FFh
020A:215B  FF 01				inc	word ptr [bx+di]
020A:215D  61					db	61h
020A:215E  FF					db	0FFh
020A:215F  FF 6E 5E		;*		jmp	dword ptr [bp+5Eh]	;*7 entries
020A:215F  FF 6E 5E				db	0FFh, 6Eh, 5Eh
020A:2162  FF					db	0FFh
020A:2163  FF 5A 64		;*		call	dword ptr [bp+si+64h]	;*3 entries
020A:2163  FF 5A 64				db	0FFh, 5Ah, 64h
020A:2166  FF					db	0FFh
020A:2167  FF 82 FF5F				inc	word ptr [bp+si-0A1h]
020A:216B  FF D3				call	bx			;*
020A:216D  64					db	64h
020A:216E  FF					db	0FFh
020A:216F  FF AF D900				jmp	dword ptr ds:[0D900h][bx]	;*(020A:D900=25E8h)
020A:2173  02 01				add	al,[bx+di]
020A:2175  FB					sti				; Enable interrupts
020A:2176  E8 0064				call	sub_27			; (21DD)
020A:2179  1E					push	ds
020A:217A  0E					push	cs
020A:217B  2E: FF 2E 0104			jmp	dword ptr cs:[104h]	; (020A:0104=908h)
020A:2180  FB					sti				; Enable interrupts
020A:2181  E8 0059				call	sub_27			; (21DD)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 56

020A:2184  1E					push	ds
020A:2185  0E					push	cs
020A:2186  2E: FF 2E 0108			jmp	dword ptr cs:[108h]	; (020A:0108=0A302h)
020A:218B  FB					sti				; Enable interrupts
020A:218C  E8 004E				call	sub_27			; (21DD)
020A:218F  1E					push	ds
020A:2190  0E					push	cs
020A:2191  2E: FF 2E 010C			jmp	dword ptr cs:[10Ch]	; (020A:010C=9028h)
020A:2196  FB					sti				; Enable interrupts
020A:2197  E8 0043				call	sub_27			; (21DD)
020A:219A  1E					push	ds
020A:219B  0E					push	cs
020A:219C  2E: FF 2E 0110			jmp	dword ptr cs:[110h]	; (020A:0110=1FBFh)
020A:21A1			loc_187:
020A:21A1  E8 0039				call	sub_27			; (21DD)
020A:21A4  1E					push	ds
020A:21A5  0E					push	cs
020A:21A6  2E: FF 2E 0114			jmp	dword ptr cs:[114h]	; (020A:0114=0C0Bh)
020A:21AB  E8 002F				call	sub_27			; (21DD)
020A:21AE  1E					push	ds
020A:21AF  0E					push	cs
020A:21B0  2E: FF 2E 0118			jmp	dword ptr cs:[118h]	; (020A:0118=0)
020A:21B5  E8 0025				call	sub_27			; (21DD)
020A:21B8  1E					push	ds
020A:21B9  0E					push	cs
020A:21BA  2E: FF 2E 011C			jmp	dword ptr cs:[11Ch]	; (020A:011C=145Dh)
020A:21BF			loc_188:
020A:21BF  E8 001B				call	sub_27			; (21DD)
020A:21C2  1E					push	ds
020A:21C3  0E					push	cs
020A:21C4  2E: FF 2E 0120			jmp	dword ptr cs:[120h]	; (020A:0120=0A3BAh)
020A:21C9  E8 0011				call	sub_27			; (21DD)
020A:21CC  1E					push	ds
020A:21CD  0E					push	cs
020A:21CE  2E: FF 2E 0124			jmp	dword ptr cs:[124h]	; (020A:0124=201h)
020A:21D3  E8 0007				call	sub_27			; (21DD)
020A:21D6  1E					push	ds
020A:21D7  0E					push	cs
020A:21D8  2E: FF 2E 0128			jmp	dword ptr cs:[128h]	; (020A:0128=1405h)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_27		proc	near
020A:21DD  9C					pushf				; Push flags
020A:21DE  50					push	ax
020A:21DF  2E: 80 3E 0134 00			cmp	byte ptr cs:[134h],0	; (020A:0134=0)
020A:21E5  74 08				je	loc_189			; Jump if equal
020A:21E7  E8 000D				call	sub_28			; (21F7)
020A:21EA  73 03				jnc	loc_189			; Jump if carry=0
020A:21EC  E8 001B				call	sub_29			; (220A)
020A:21EF			loc_189:
020A:21EF  58					pop	ax
020A:21F0  9D					popf				; Pop flags
020A:21F1  C3					retn
				sub_27		endp
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 57

  
020A:21F2  EA 040E:0135		;*		jmp	far ptr loc_2071	;*(040E:0135)
020A:21F2  EA 35 01 0E 04			db	0EAh, 35h, 01h, 0Eh, 04h
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_28		proc	near
020A:21F7  53					push	bx
020A:21F8  50					push	ax
020A:21F9  B4 07				mov	ah,7
020A:21FB  2E: FF 1E 0130			call	dword ptr cs:[130h]	; (020A:0130=3E3Dh)
020A:2200  0B C0				or	ax,ax			; Zero ?
020A:2202  58					pop	ax
020A:2203  5B					pop	bx
020A:2204  75 02				jnz	loc_190			; Jump if not zero
020A:2206  F9					stc				; Set carry flag
020A:2207  C3					retn
020A:2208			loc_190:
020A:2208  F8					clc				; Clear carry flag
020A:2209  C3					retn
				sub_28		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_29		proc	near
020A:220A  53					push	bx
020A:220B  50					push	ax
020A:220C  B4 05				mov	ah,5
020A:220E  2E: FF 1E 0130			call	dword ptr cs:[130h]	; (020A:0130=3E3Dh)
020A:2213  0B C0				or	ax,ax			; Zero ?
020A:2215  74 03				jz	loc_191			; Jump if zero
020A:2217  58					pop	ax
020A:2218  5B					pop	bx
020A:2219  C3					retn
020A:221A			loc_191:
020A:221A  EB FE				jmp	short loc_191		; (221A)
				sub_29		endp
  
020A:221C  CD 21				int	21h			; DOS Services  ah=function BDh
020A:221E  FA					cli				; Disable interrupts
020A:221F  0E					push	cs
020A:2220  17					pop	ss
020A:2221  BC 0612				mov	sp,612h
020A:2224  FB					sti				; Enable interrupts
020A:2225  0E					push	cs
020A:2226  1F					pop	ds
020A:2227  9C					pushf				; Push flags
020A:2228  50					push	ax
020A:2229  2E: A0 0614				mov	al,byte ptr cs:[614h]	; (020A:0614=2Eh)
020A:222D  A8 80				test	al,80h
020A:222F  74 07				jz	loc_192			; Jump if zero
020A:2231  24 7F				and	al,7Fh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 58

020A:2233  2E: FF 1E 012C			call	dword ptr cs:[12Ch]	; (020A:012C=3A39h)
020A:2238			loc_192:
020A:2238  2E: 80 26 0614 7F			and	byte ptr cs:[614h],7Fh	; (020A:0614=2Eh)
020A:223E  58					pop	ax
020A:223F  9D					popf				; Pop flags
020A:2240  E9 FF5E				jmp	loc_187			; (21A1)
020A:2243  02 00				add	al,[bx+si]
020A:2245  00 01				add	[bx+di],al
020A:2247  09 02				or	[bp+si],ax
020A:2249  41					inc	cx
020A:224A  02 00				add	al,[bx+si]
020A:224C  00 02				add	[bp+si],al
020A:224E  10 02				adc	[bp+si],al
020A:2250  0009[00]				db	9 dup (0)
020A:2259  02 22				add	ah,[bp+si]
020A:225B  02 03				add	al,[bp+di]
020A:225D  30 02				xor	[bp+si],al
020A:225F  03 2E 0002				add	bp,word ptr ds:[2]	; (020A:0002=10h)
020A:2263  0010[00]				db	16 dup (0)
020A:2273  01 09				add	[bx+di],cx
020A:2275  02 02				add	al,[bp+si]
020A:2277  5A					pop	dx
020A:2278  02 01				add	al,[bx+di]
020A:227A  3C 02				cmp	al,2
020A:227C  43					inc	bx
020A:227D  02 7C 04				add	bh,[si+4]
020A:2280  000A[00]				db	10 dup (0)
020A:228A  00			data_267	db	0
020A:228B  0E					push	cs
020A:228C  04 7F				add	al,7Fh
020A:228E  01 0E 0004				add	word ptr ds:[4],cx	; (020A:0004=808h)
020A:2292  00 00				add	[bx+si],al
020A:2294  00 00				add	[bx+si],al
020A:2296  00 00				add	[bx+si],al
020A:2298  43					inc	bx
020A:2299  3A 5C 57				cmp	bl,[si+57h]
020A:229C  49					dec	cx
020A:229D  4E					dec	si
020A:229E  44					inc	sp
020A:229F  4F					dec	di
020A:22A0  57					push	di
020A:22A1  53					push	bx
020A:22A2  5C					pop	sp
020A:22A3  53					push	bx
020A:22A4  59					pop	cx
020A:22A5  53					push	bx
020A:22A6  54					push	sp
020A:22A7  45					inc	bp
020A:22A8  4D					dec	bp
020A:22A9  33 32				xor	si,[bp+si]
020A:22AB  5C					pop	sp
020A:22AC  43					inc	bx
020A:22AD  4D4F			data_268	dw	4D4Fh
020A:22AF  4D					dec	bp
020A:22B0  41					inc	cx
020A:22B1  444E			data_269	dw	444Eh
020A:22B3  432E			data_270	dw	432Eh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 59

020A:22B5  4F					dec	di
020A:22B6  4D					dec	bp
020A:22B7  00 00 00 00 00 00			db	0, 0, 0, 0, 0, 0
020A:22BD  0000			data_272	dw	0
020A:22BF  00 00				add	[bx+si],al
020A:22C1  00 00				add	[bx+si],al
020A:22C3  00 00				add	[bx+si],al
020A:22C5  00 00				add	[bx+si],al
020A:22C7  00 00				add	[bx+si],al
020A:22C9  00 00				add	[bx+si],al
020A:22CB  00 00				add	[bx+si],al
020A:22CD  00 00				add	[bx+si],al
020A:22CF  00 00				add	[bx+si],al
020A:22D1  00 00				add	[bx+si],al
020A:22D3  00 00				add	[bx+si],al
020A:22D5  00 00				add	[bx+si],al
020A:22D7  00 77 02				add	[bx+2],dh
020A:22DA  2C 01				sub	al,1
020A:22DC			loc_193:
020A:22DC  B4 95				mov	ah,95h
020A:22DE  01 00				add	[bx+si],ax
020A:22E0  00 03				add	[bp+di],al
020A:22E2  FF 9F 1EEE				call	dword ptr ds:[1EEEh][bx]	;*(020A:1EEE=0)
020A:22E6  01 00				add	[bx+si],ax
020A:22E8  03 00				add	ax,[bx+si]
020A:22EA  01 00				add	[bx+si],ax
020A:22EC  01 01				add	[bx+di],ax
020A:22EE  01 00				add	[bx+si],ax
020A:22F0  01 00				add	[bx+si],ax
020A:22F2  00 00				add	[bx+si],al
020A:22F4  FF					db	0FFh
020A:22F5  FF 00				inc	word ptr [bx+si]
020A:22F7  0009[00]				db	9 dup (0)
020A:2300  0000			data_274	dw	0
020A:2302  04 31				add	al,31h			; '1'
020A:2304  0B A7 0000				or	sp,[bx+0]
020A:2308  00 00				add	[bx+si],al
020A:230A  00 E7				add	bh,ah
020A:230C  0C A7				or	al,0A7h
020A:230E  0058[00]				db	88 dup (0)
020A:2366  01 00				add	[bx+si],ax
020A:2368  00 00				add	[bx+si],al
020A:236A  01 00				add	[bx+si],ax
020A:236C  0007[00]				db	7 dup (0)
020A:2373  1E					push	ds
020A:2374  06					push	es
020A:2375  0E					push	cs
020A:2376  1F					pop	ds
020A:2377  8B 16 22BD				mov	dx,data_272		; (020A:22BD=0)
020A:237B  A1 22B1				mov	ax,data_269		; (020A:22B1=444Eh)
020A:237E  8B 1E 22AD				mov	bx,data_268		; (020A:22AD=4D4Fh)
020A:2382  8B 0E 22B3				mov	cx,data_270		; (020A:22B3=432Eh)
020A:2386  50					push	ax
020A:2387  53					push	bx
020A:2388  51					push	cx
020A:2389  8C DB				mov	bx,ds
020A:238B  8E C3				mov	es,bx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 60

020A:238D  8B 1E 0593				mov	bx,word ptr ds:[593h]	; (020A:0593=3)
020A:2391  B4 4A				mov	ah,4Ah			; 'J'
020A:2393  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change mem allocation, bx=siz
020A:2395  80 3E 02B0 01			cmp	byte ptr ds:[2B0h],1	; (020A:02B0=1Dh)
020A:239A  75 33				jne	loc_194			; Jump if not equal
020A:239C  83 3E 0256 00			cmp	word ptr ds:[256h],0	; (020A:0256=0)
020A:23A1  74 2C				je	loc_194			; Jump if equal
020A:23A3  BB 0007				mov	bx,7
020A:23A6  B4 48				mov	ah,48h			; 'H'
020A:23A8  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:23AA  72 23				jc	loc_194			; Jump if carry Set
020A:23AC  8E C0				mov	es,ax
020A:23AE  33 FF				xor	di,di			; Zero register
020A:23B0  33 F6				xor	si,si			; Zero register
020A:23B2  1E					push	ds
020A:23B3  8E 1E 0256				mov	ds,word ptr ds:[256h]	; (020A:0256=0)
020A:23B7  B9 0021				mov	cx,21h
020A:23BA  83 C1 40				add	cx,40h
020A:23BD  FC					cld				; Clear direction
020A:23BE  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:23C0  1F					pop	ds
020A:23C1  8C C1				mov	cx,es
020A:23C3  8E 06 0256				mov	es,word ptr ds:[256h]	; (020A:0256=0)
020A:23C7  B4 49				mov	ah,49h			; 'I'
020A:23C9  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:23CB  89 0E 0256				mov	word ptr ds:[256h],cx	; (020A:0256=0)
020A:23CF			loc_194:
020A:23CF  59					pop	cx
020A:23D0  5B					pop	bx
020A:23D1  5D					pop	bp
020A:23D2  B4 48				mov	ah,48h			; 'H'
020A:23D4  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:23D6  72 41				jc	loc_195			; Jump if carry Set
020A:23D8  A3 0458				mov	word ptr ds:[458h],ax	; (020A:0458=0C40Eh)
020A:23DB  A3 002C				mov	word ptr ds:[2Ch],ax	; (020A:002C=3A39h)
020A:23DE  8E C0				mov	es,ax
020A:23E0  80 3E 02B0 01			cmp	byte ptr ds:[2B0h],1	; (020A:02B0=1Dh)
020A:23E5  75 34				jne	loc_196			; Jump if not equal
020A:23E7  53					push	bx
020A:23E8  BB 0000				mov	bx,0
020A:23EB  C4					db	0C4h
020A:23EC  C4 54 0F				les	dx,dword ptr [si+0Fh]	; Load 32 bit ptr
020A:23EF  8B C3				mov	ax,bx
020A:23F1  5B					pop	bx
020A:23F2  3D 0000				cmp	ax,0
020A:23F5  74 24				je	loc_196			; Jump if equal
020A:23F7  03 D8				add	bx,ax
020A:23F9  B4 49				mov	ah,49h			; 'I'
020A:23FB  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:23FD  B4 48				mov	ah,48h			; 'H'
020A:23FF  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 61

020A:2401  72 75				jc	loc_199			; Jump if carry Set
020A:2403  A3 0458				mov	word ptr ds:[458h],ax	; (020A:0458=0C40Eh)
020A:2406  A3 002C				mov	word ptr ds:[2Ch],ax	; (020A:002C=3A39h)
020A:2409  8E C0				mov	es,ax
020A:240B  89 1E 22AD				mov	data_268,bx		; (020A:22AD=4D4Fh)
020A:240F  53					push	bx
020A:2410  C4					db	0C4h
020A:2411  C4 54 0F				les	dx,dword ptr [si+0Fh]	; Load 32 bit ptr
020A:2414  58					pop	ax
020A:2415  3B D8				cmp	bx,ax
020A:2417  76 0D				jbe	loc_197			; Jump if below or =
020A:2419			loc_195:
020A:2419  EB 5D				jmp	short loc_199		; (2478)
020A:241B			loc_196:
020A:241B  1E					push	ds
020A:241C  8E DD				mov	ds,bp
020A:241E  33 F6				xor	si,si			; Zero register
020A:2420  8B FE				mov	di,si
020A:2422  FC					cld				; Clear direction
020A:2423  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:2425  1F					pop	ds
020A:2426			loc_197:
020A:2426  80 3E 228A 00			cmp	data_267,0		; (020A:228A=0)
020A:242B  75 06				jne	loc_198			; Jump if not equal
020A:242D  8E C5				mov	es,bp
020A:242F  B4 49				mov	ah,49h			; 'I'
020A:2431  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:2433			loc_198:
020A:2433  C6 06 029E 01			mov	byte ptr ds:[29Eh],1	; (020A:029E=0)
020A:2438  06					push	es
020A:2439  BE 2760				mov	si,2760h
020A:243C  BF 0000				mov	di,0
020A:243F  B9 A4AD				mov	cx,0A4ADh
020A:2442  BB FFFF				mov	bx,0FFFFh
020A:2445  B4 48				mov	ah,48h			; 'H'
020A:2447  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:2449  3B DA				cmp	bx,dx
020A:244B  72 2B				jb	loc_199			; Jump if below
020A:244D  B4 48				mov	ah,48h			; 'H'
020A:244F  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:2451  72 25				jc	loc_199			; Jump if carry Set
020A:2453  50					push	ax
020A:2454  03 C3				add	ax,bx
020A:2456  2B C2				sub	ax,dx
020A:2458  A3 029C				mov	word ptr ds:[29Ch],ax	; (020A:029C=0)
020A:245B  8E C0				mov	es,ax
020A:245D  58					pop	ax
020A:245E  03 F1				add	si,cx
020A:2460  4E					dec	si
020A:2461  03 F9				add	di,cx
020A:2463  4F					dec	di
020A:2464  FD					std				; Set direction flag
020A:2465  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:2467  FC					cld				; Clear direction
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 62

020A:2468  8E C0				mov	es,ax
020A:246A  B4 49				mov	ah,49h			; 'I'
020A:246C  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:246E  C6 06 0330 00			mov	byte ptr ds:[330h],0	; (020A:0330=61h)
020A:2473  07					pop	es
020A:2474  1F					pop	ds
020A:2475  E9 FD47				jmp	loc_188			; (21BF)
020A:2478			loc_199:
020A:2478  E9 1DC0				jmp	loc_554			; (423B)
020A:247B  0019[00]				db	25 dup (0)
020A:2494  33 03				xor	ax,[bp+di]
020A:2496  82 03 CC				add	byte ptr [bp+di],0CCh
020A:2499  04 80				add	al,80h
020A:249B  00 0E 5C04				add	data_537,cl		; (020A:5C04=7)
020A:249F  00 0E 6C04				add	data_542,cl		; (020A:6C04=0DDh)
020A:24A3  00 0E 9304				add	data_559,cl		; (020A:9304=0C6h)
020A:24A7  01 0E 0004				add	word ptr ds:[4],cx	; (020A:0004=808h)
020A:24AB  10 2F				adc	[bx],ch
020A:24AD  5C					pop	sp
020A:24AE  DC 01				esc	4,[bx+di]		; coprocessor escape
020A:24B0  0E					push	cs
020A:24B1  04 6B				add	al,6Bh			; 'k'
020A:24B3  01 0E 0004				add	word ptr ds:[4],cx	; (020A:0004=808h)
020A:24B7  00 C4				add	ah,al
020A:24B9  06					push	es
020A:24BA  00 00				add	[bx+si],al
020A:24BC  43 3A 5C 44 4F 43			db	'C:\DOCUME~1\LOADEE~1\0016~1\SR.E'
020A:24C2  55 4D 45 7E 31 5C
020A:24C8  4C 4F 41 44 45 45
020A:24CE  7E 31 5C 30 30 31
020A:24D4  36 7E 31 5C 53 52
020A:24DA  2E 45
020A:24DC  58 45				db	'XE'
020A:24DE  00EF[00]				db	239 dup (0)
020A:25CD  66					db	66h
020A:25CE  00 D9				add	cl,bl
020A:25D0  02 46 0B				add	al,[bp+0Bh]
020A:25D3  B5 00				mov	ch,0
020A:25D5  0042[00]				db	66 dup (0)
020A:2617  63					db	63h
020A:2618  0D 0094				or	ax,94h
020A:261B  00 00				add	[bx+si],al
020A:261D  00 E7				add	bh,ah
020A:261F  0C C5				or	al,0C5h
020A:2621  22 0C				and	cl,[si]
020A:2623  94					xchg	ax,sp
020A:2624  EA 0E22:EA22		;*		jmp	far ptr loc_2072	;*(0E22:EA22)
020A:2624  EA 22 EA 22 0E			db	0EAh, 22h,0EAh, 22h, 0Eh
020A:2629  07					pop	es
020A:262A  00 07				add	[bx],al
020A:262C  D9 02				esc	1,[bp+si]		; coprocessor escape
020A:262E  01 00				add	[bx+si],ax
020A:2630  D9 02				esc	1,[bp+si]		; coprocessor escape
020A:2632  47					inc	di
020A:2633  01 D9				add	cx,bx
  
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 63

020A:2635			locloop_201:
020A:2635  02 24				add	ah,[si]
020A:2637  25 95B4				and	ax,95B4h
020A:263A  00			data_282	db	0
020A:263B  3E			data_283	db	3Eh
020A:263C  3B 99 040E				cmp	bx,word ptr ds:[40Eh][bx+di]	; (020A:040E=9C4h)
020A:2640  00 00				add	[bx+si],al
020A:2642  00			data_287	db	0
020A:2643  01 00				add	[bx+si],ax
020A:2645  01 81 0E00				add	data_191[bx+di],ax	; (020A:0E00=5057h)
020A:2649  04 0E				add	al,0Eh
020A:264B  04 DE				add	al,0DEh
020A:264D  01 0E 4604				add	data_500,cx		; (020A:4604=8018h)
020A:2651  32 00				xor	al,[bx+si]
020A:2653  00 00				add	[bx+si],al
020A:2655  41					inc	cx
020A:2656  52					push	dx
020A:2657  49					dec	cx
020A:2658  46					inc	si
020A:2659  59					pop	cx
020A:265A  4E					dec	si
020A:265B  0C 41				or	al,41h			; 'A'
020A:265D  62					db	62h
020A:265E  6F					db	6Fh
020A:265F  72 74				jc	loc_213			; Jump if carry Set
020A:2661  20 28				and	[bx+si],ch
020A:2663  E1 E2		;*		loopz	locloop_203		;*Loop if zf=1, cx>0
  
020A:2663  E1 E2				db	0E1h,0E2h
020A:2665  AE					scasb				; Scan es:[di] for al
020A:2666  AF					scasw				; Scan es:[di] for ax
020A:2667  29 10				sub	[bx+si],dx
020A:2669  2C 20				sub	al,20h			; ' '
020A:266B			loc_204:
020A:266B  52					push	dx
020A:266C  65					db	65h
020A:266D  74 72				jz	loc_214			; Jump if zero
020A:266F  79 20				jns	loc_207			; Jump if not sign
020A:2671  28 AF A2AE				sub	data_588[bx],ch		; (020A:A2AE=44h)
020A:2675  E2 AE		;*		loop	locloop_200		;*Loop if cx > 0
  
020A:2675  E2 AE				db	0E2h,0AEh
020A:2677  E0 29				loopnz	locloop_209		; Loop if zf=0, cx>0
  
020A:2679  12 2C				adc	ch,[si]
020A:267B  20 49 67				and	[bx+di+67h],cl
020A:267E  6E					db	6Eh
020A:267F  6F					db	6Fh
020A:2680  6572 2820				dd	28206572h
020A:2684  AF					scasw				; Scan es:[di] for ax
020A:2685  E0 AE				loopnz	locloop_201		; Loop if zf=0, cx>0
  
020A:2687  AF					scasw				; Scan es:[di] for ax
020A:2688  E3 E1				jcxz	loc_204			; Jump if cx=0
020A:268A  AA					stosb				; Store al to es:[di]
020A:268B  29 0E 202C				sub	word ptr ds:[202Ch],cx	; (020A:202C=0)
020A:268F  46					inc	si
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 64

020A:2690  61					db	61h
020A:2691			loc_207:
020A:2691  69					db	69h
020A:2692  6C					db	6Ch
020A:2693  20 28				and	[bx+si],ch
020A:2695  E1 A1		;*		loopz	locloop_202		;*Loop if zf=1, cx>0
  
020A:2695  E1 A1				db	0E1h,0A1h
020A:2697  E0 AE		;*		loopnz	locloop_203		;*Loop if zf=0, cx>0
  
020A:2697  E0 AE				db	0E0h,0AEh
020A:2699  E1 29				loopz	locloop_212		; Loop if zf=1, cx>0
  
020A:269B  01 3F				add	[bx],di
020A:269D  07					pop	es
020A:269E  E7 E2				out	0E2h,ax			; port 0E2h
020A:26A0  A5					movsw				; Mov [si] to es:[di]
020A:26A1  AD					lodsw				; String [si] to ax
  
020A:26A2			locloop_209:
020A:26A2  A8 A5				test	al,0A5h
  
020A:26A4			locloop_211:
020A:26A4  00 07				add	[bx],al
020A:26A6  A7					cmpsw				; Cmp [si] to es:[di]
020A:26A7  A0 A8AF				mov	al,data_610		; (020A:A8AF=0)
020A:26AA  E1 EC		;*		loopz	locloop_208		;*Loop if zf=1, cx>0
  
020A:26AA  E1 EC				db	0E1h,0ECh
020A:26AC  00 0D				add	[di],cl
020A:26AE  20 25				and	[di],ah
020A:26B0  31 20				xor	[bx+si],sp
020A:26B2  A4					movsb				; Mov [si] to es:[di]
020A:26B3  A8 E1				test	al,0E1h
020A:26B5  AA					stosb				; Store al to es:[di]
020A:26B6  20 25				and	[di],ah
020A:26B8  32 0D				xor	cl,[di]
020A:26BA  0A 13				or	dl,[bp+di]
020A:26BC  20 25				and	[di],ah
020A:26BE  31 20				xor	[bx+si],sp
020A:26C0  E3 E1		;*		jcxz	loc_210			;*Jump if cx=0
020A:26C0  E3 E1				db	0E3h,0E1h
020A:26C2  E2 E0				loop	locloop_211		; Loop if cx > 0
  
  
020A:26C4			locloop_212:
020A:26C4  AE					scasb				; Scan es:[di] for al
020A:26C5  A9 E2E1				test	ax,0E2E1h
020A:26C8  A2 20AE				mov	byte ptr data_259,al	; (020A:20AE=20h)
020A:26CB  25 0D32				and	ax,0D32h
020A:26CE  0A 27				or	ah,[bx]
020A:26D0  82 E1 E2				and	cl,0E2h
020A:26D3  A0 ECA2				mov	al,byte ptr ds:[0ECA2h]	; (020A:ECA2=3Eh)
020A:26D6  E2 A5		;*		loop	locloop_205		;*Loop if cx > 0
  
020A:26D6  E2 A5				db	0E2h,0A5h
020A:26D8  20 E2				and	dl,ah
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 65

020A:26DA  AE					scasb				; Scan es:[di] for al
020A:26DB  AC					lodsb				; String [si] to al
020A:26DC  20 25				and	[di],ah
020A:26DE  31 2C				xor	[si],bp
020A:26E0  20 E1				and	cl,ah
020A:26E2  A5					movsw				; Mov [si] to es:[di]
020A:26E3  E0 A8		;*		loopnz	locloop_206		;*Loop if zf=0, cx>0
  
020A:26E3  E0 A8				db	0E0h,0A8h
020A:26E5  A9 EBAD				test	ax,0EBADh
020A:26E8  A9 AD20				test	ax,0AD20h
020A:26EB  AE					scasb				; Scan es:[di] for al
020A:26EC  AC					lodsb				; String [si] to al
020A:26ED  A5					movsw				; Mov [si] to es:[di]
020A:26EE  E0 20				loopnz	locloop_216		; Loop if zf=0, cx>0
  
020A:26F0  25 2D32				and	ax,2D32h
020A:26F3  25 0D33				and	ax,0D33h
020A:26F6  370A E188		data_289	dw	370Ah, 0E188h
020A:26FA  AEAF E7E0		data_290	dw	0AEAFh, 0E7E0h
020A:26FE  ADA5 20A0		data_291	dw	0ADA5h, 20A0h
020A:2702  A0E2 ABA1		data_292	dw	0A0E2h, 0ABA1h
020A:2706  E6A8 20A0		data_293	dw	0E6A8h, 20A0h
020A:270A  A0E0 ACA7		data_294	dw	0A0E0h, 0ACA7h
020A:270E  E9A5 ADA5		data_295	dw	0E9A5h, 0ADA5h
020A:2712  EFA8 E420		data_296	dw	0EFA8h, 0E420h
020A:2716  A9A0 AEAB		data_297	dw	0A9A0h, 0AEABh
020A:271A  20A2 4628		data_298	dw	20A2h, 4628h
020A:271E  5441 2029		data_299	dw	5441h, 2029h
020A:2722  A0AD A420		data_300	dw	0A0ADh, 0A420h
020A:2726  E1A8 A5AA		data_301	dw	0E1A8h, 0A5AAh
020A:272A  2520 0D31		data_302	dw	2520h, 0D31h
020A:272E  1A0A A58D		data_303	dw	1A0Ah, 0A58Dh
020A:2732  E0AF A2A0		data_304	dw	0E0AFh, 0A2A0h
020A:2736  ABA8 ADEC		data_305	dw	0ABA8h, 0ADECh
020A:273A  A9EB 4320		data_306	dw	0A9EBh, 4320h
020A:273E  4D4F 414D		data_307	dw	4D4Fh, 414Dh
020A:2742  444E 432E		data_308	dw	444Eh, 432Eh
020A:2746  4D4F 0A0D		data_309	dw	4D4Fh, 0A0Dh
020A:274A  8222 E2E1		data_310	dw	8222h, 0E2E1h
020A:274E  A2A0 E2EC		data_311	dw	0A2A0h, 0E2ECh
020A:2752  20A5 A8A4		data_312	dw	20A5h, 0A8A4h
020A:2756  AAE1 E120		data_313	dw	0AAE1h, 0E120h
020A:275A  2520 2031		data_314	dw	2520h, 2031h
020A:275E  20A2 A8A4		data_315	dw	20A2h, 0A8A4h
020A:2762  AAE1 A2AE		data_316	dw	0AAE1h, 0A2AEh
020A:2766  A4AE 2520		data_317	dw	0A4AEh, 2520h
020A:276A  0D32 1A0A		data_318	dw	0D32h, 1A0Ah
020A:276E  A08D ACA6		data_319	dw	0A08Dh, 0ACA6h
020A:2772  E2A8 20A5		data_320	dw	0E2A8h, 20A5h
020A:2776  EEAB E3A1		data_321	dw	0EEABh, 0E3A1h
020A:277A  20EE ABAA		data_322	dw	20EEh, 0ABAAh
020A:277E  A2A0 E8A8		data_323	dw	0A2A0h, 0E8A8h
020A:2782  2EE3 2E2E		data_324	dw	2EE3h, 2E2Eh
020A:2786  0A0D 0D39		data_325	dw	0A0Dh, 0D39h
020A:278A  8F0A A5E0		data_326	dw	8F0Ah, 0A5E0h
020A:278E  E0AA E2A0		data_327	dw	0E0AAh, 0E2A0h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 66

020A:2792  E2A8 20EC		data_328	dw	0E2A8h, 20ECh
020A:2796  EBA2 AEAF		data_329	dw	0EBA2h, 0AEAFh
020A:279A  ADAB ADA5		data_330	dw	0ADABh, 0ADA5h
020A:279E  A5A8 AF20		data_331	dw	0A5A8h, 0AF20h
020A:27A2  AAA0 E2A5		data_332	dw	0AAA0h, 0E2A5h
020A:27A6  AEAD AEA3		data_333	dw	0AEADh, 0AEA3h
020A:27AA  A720 A4A0		data_334	dw	0A720h, 0A4A0h
020A:27AE  ADA0 EFA8		data_335	dw	0ADA0h, 0EFA8h
020A:27B2  5B20 2859		data_336	dw	5B20h, 2859h
020A:27B6  A0A4 2F29		data_337	dw	0A0A4h, 2F29h
020A:27BA  4E					dec	si
020A:27BB  28 AD E2A5				sub	byte ptr ds:[0E2A5h][di],ch	; (020A:E2A5=0E9h)
020A:27BF  29 5D 3F				sub	[di+3Fh],bx
020A:27C2  19 8D 20A5				sbb	data_257[di],cx		; (020A:20A5=2020h)
020A:27C6  E3 A4		;*		jcxz	loc_217			;*Jump if cx=0
020A:27C6  E3 A4				db	0E3h,0A4h
020A:27C8  A0 E2A5				mov	al,byte ptr ds:[0E2A5h]	; (020A:E2A5=0E9h)
020A:27CB  E1 EF		;*		loopz	locloop_220		;*Loop if zf=1, cx>0
  
020A:27CB  E1 EF				db	0E1h,0EFh
020A:27CD  20 A2 AFEB				and	[bp+si-5015h],ah
020A:27D1  AE					scasb				; Scan es:[di] for al
  
020A:27D2			locloop_222:
020A:27D2  AB					stosw				; Store ax to es:[di]
020A:27D3  AD					lodsw				; String [si] to ax
020A:27D4  A8 E2				test	al,0E2h
020A:27D6  EC					in	al,dx			; port 0BF02h
020A:27D7  20 25				and	[di],ah
020A:27D9  31 0D				xor	[di],cx
  
020A:27DB			locloop_223:
020A:27DB  0A 14				or	dl,[si]
  
020A:27DD			locloop_224:
020A:27DD  8E					db	8Eh
020A:27DE  E8 A1A8				call	$-5E55h
020A:27E1  AA					stosb				; Store al to es:[di]
020A:27E2  A0 A220				mov	al,data_584		; (020A:A220=48h)
020A:27E5  20 45 58				and	[di+58h],al
  
020A:27E8			locloop_225:
020A:27E8  45					inc	bp
020A:27E9  2D A0E4				sub	ax,0A0E4h
020A:27EC  A9 A5AB				test	ax,0A5ABh
020A:27EF  0D 210A				or	ax,210Ah
020A:27F2  8F					db	8Fh
020A:27F3  E0 AE		;*		loopnz	locloop_218		;*Loop if zf=0, cx>0
  
020A:27F3  E0 AE				db	0E0h,0AEh
020A:27F5  A3 A0E0				mov	data_581,ax		; (020A:A0E0=8B2Eh)
020A:27F8  AC					lodsb				; String [si] to al
020A:27F9  AC					lodsb				; String [si] to al
020A:27FA  A0			data_338	db	0A0h
020A:27FB  AD20			data_339	dw	0AD20h
020A:27FD  A5					movsw				; Mov [si] to es:[di]
020A:27FE  20 E3				and	bl,ah
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 67

020A:2800  AC					lodsb				; String [si] to al
020A:2801  A5					movsw				; Mov [si] to es:[di]
020A:2802  E9 A5A0				jmp	$-5A5Dh
020A:2805  E2 E1				loop	locloop_225		; Loop if cx > 0
  
020A:2807  EF					out	dx,ax			; port 0BF06h
020A:2808			loc_226:
020A:2808  20 A2 AF20				and	[bp+si-50E0h],ah
020A:280C  A0 EFAC				mov	al,byte ptr ds:[0EFACh]	; (020A:EFAC=36h)
020A:280F  E2 A8		;*		loop	locloop_219		;*Loop if cx > 0
  
020A:280F  E2 A8				db	0E2h,0A8h
020A:2811  0D 230A				or	ax,230Ah
020A:2814  0D 8D0A				or	ax,8D0Ah
020A:2817  A5					movsw				; Mov [si] to es:[di]
020A:2818  E2 20				loop	locloop_231		; Loop if cx > 0
  
020A:281A  E1 A2		;*		loopz	locloop_221		;*Loop if zf=1, cx>0
  
020A:281A  E1 A2				db	0E1h,0A2h
020A:281C  AE					scasb				; Scan es:[di] for al
020A:281D  A1 A4AE				mov	ax,data_597		; (020A:A4AE=5153h)
020A:2820  AD					lodsw				; String [si] to ax
020A:2821  EB E5				jmp	short loc_226		; (2808)
020A:2823  20 A4 E1A5				and	byte ptr ds:[0E1A5h][si],ah	; (020A:E1A5=8)
020A:2827  AA					stosb				; Store al to es:[di]
020A:2828  E0 A8				loopnz	locloop_222		; Loop if zf=0, cx>0
  
020A:282A  AF					scasw				; Scan es:[di] for ax
020A:282B  E2 AE				loop	locloop_223		; Loop if cx > 0
  
020A:282D  E0 AE				loopnz	locloop_224		; Loop if zf=0, cx>0
  
  
020A:282F			locloop_229:
020A:282F  A2 E420				mov	byte ptr ds:[0E420h],al	; (020A:E420=6)
020A:2832  A0 ABA9				mov	al,data_617		; (020A:ABA9=5)
020A:2835  AE					scasb				; Scan es:[di] for al
020A:2836  A2 AD24				mov	data_622,al		; (020A:AD24=89h)
020A:2839  A5					movsw				; Mov [si] to es:[di]
  
020A:283A			locloop_231:
020A:283A  AF					scasw				; Scan es:[di] for ax
020A:283B  E0 A0				loopnz	locloop_224		; Loop if zf=0, cx>0
  
020A:283D  A2 ABA8				mov	data_616,al		; (020A:ABA8=74h)
020A:2840  EC					in	al,dx			; port 0BF06h
020A:2841  AD					lodsw				; String [si] to ax
020A:2842  A0 20EF				mov	al,data_262		; (020A:20EF=0A0h)
020A:2845  AA					stosb				; Store al to es:[di]
020A:2846  AE					scasb				; Scan es:[di] for al
  
020A:2847			locloop_232:
020A:2847  AC					lodsb				; String [si] to al
020A:2848  A0 A4AD				mov	al,data_596		; (020A:A4AD=1)
020A:284B  A0 A820				mov	al,data_604		; (020A:A820=0FFh)
020A:284E  AB					stosw				; Store ax to es:[di]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 68

020A:284F  A8 20				test	al,20h			; ' '
020A:2851  A8 AC				test	al,0ACh
020A:2853  EF					out	dx,ax			; port 0BF06h
020A:2854  20 E4				and	ah,ah
  
020A:2856			locloop_233:
020A:2856  A0 ABA9				mov	al,data_617		; (020A:ABA9=5)
020A:2859  A0 0A0D				mov	al,data_168		; (020A:0A0D=0)
020A:285C  0C 8D				or	al,8Dh
020A:285E  A5					movsw				; Mov [si] to es:[di]
020A:285F  E2 20				loop	locloop_236		; Loop if cx > 0
  
020A:2861  A4					movsb				; Mov [si] to es:[di]
020A:2862  AE					scasb				; Scan es:[di] for al
020A:2863  E1 E2				loopz	locloop_232		; Loop if zf=1, cx>0
  
020A:2865  E3 AF		;*		jcxz	loc_227			;*Jump if cx=0
020A:2865  E3 AF				db	0E3h,0AFh
020A:2867  A0 1D20				mov	al,data_243		; (020A:1D20=0)
020A:286A  0D 8E0A				or	ax,8E0Ah
020A:286D  E8 A1A8				call	$-5E55h
020A:2870  AA					stosb				; Store al to es:[di]
020A:2871  A0 AF20				mov	al,data_629		; (020A:AF20=6)
020A:2874  E0 A8		;*		loopnz	locloop_228		;*Loop if zf=0, cx>0
  
020A:2874  E0 A8				db	0E0h,0A8h
020A:2876  20 A2 A4EB				and	[bp+si-5B15h],ah
020A:287A  A5					movsw				; Mov [si] to es:[di]
020A:287B  AB					stosw				; Store ax to es:[di]
020A:287C  A5					movsw				; Mov [si] to es:[di]
  
020A:287D			locloop_234:
020A:287D  AD					lodsw				; String [si] to ax
  
020A:287E			locloop_235:
020A:287E  A8 A8				test	al,0A8h
020A:2880  20 AF ACA0				and	data_618[bx],ch		; (020A:ACA0=92h)
020A:2884  EF					out	dx,ax			; port 0BF06h
020A:2885  E2 A8				loop	locloop_229		; Loop if cx > 0
  
020A:2887  39 0D				cmp	[di],cx
020A:2889  0A 8D 20A5				or	cl,byte ptr data_257[di]	; (020A:20A5=20h)
020A:288D  E3 A4		;*		jcxz	loc_230			;*Jump if cx=0
020A:288D  E3 A4				db	0E3h,0A4h
020A:288F  A0 E2A5				mov	al,byte ptr ds:[0E2A5h]	; (020A:E2A5=0E9h)
  
020A:2892			locloop_238:
020A:2892  E1 EF		;*		loopz	locloop_237		;*Loop if zf=1, cx>0
  
020A:2892  E1 EF				db	0E1h,0EFh
020A:2894  20 A7 A3A0				and	data_589[bx],ah		; (020A:A3A0=0C2h)
020A:2898  E0 E3				loopnz	locloop_234		; Loop if zf=0, cx>0
  
020A:289A  A7					cmpsw				; Cmp [si] to es:[di]
020A:289B  A8 E2				test	al,0E2h
020A:289D  EC					in	al,dx			; port 0BF06h
020A:289E  20 43 4F				and	[bp+di+4Fh],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 69

020A:28A1  4D					dec	bp
020A:28A2  4D					dec	bp
  
020A:28A3			locloop_240:
020A:28A3  41					inc	cx
  
020A:28A4			locloop_241:
020A:28A4  4E					dec	si
020A:28A5  44					inc	sp
020A:28A6  2E					db	2Eh
020A:28A7  43					inc	bx
020A:28A8  4F					dec	di
020A:28A9  4D					dec	bp
020A:28AA  2C 20				sub	al,20h			; ' '
020A:28AC  E1 A8				loopz	locloop_233		; Loop if zf=1, cx>0
  
020A:28AE  E1 E2				loopz	locloop_238		; Loop if zf=1, cx>0
  
020A:28B0  A5					movsw				; Mov [si] to es:[di]
020A:28B1  AC					lodsb				; String [si] to al
020A:28B2  A0 AE20				mov	al,data_624		; (020A:AE20=75h)
  
020A:28B5			locloop_242:
020A:28B5  E1 E2		;*		loopz	locloop_239		;*Loop if zf=1, cx>0
  
020A:28B5  E1 E2				db	0E1h,0E2h
020A:28B7  A0 AEAD				mov	al,data_627		; (020A:AEAD=0Dh)
020A:28BA  A2 A5AB				mov	data_599,al		; (020A:A5AB=0C6h)
  
020A:28BD			locloop_243:
020A:28BD  AD					lodsw				; String [si] to ax
020A:28BE  A0 0A0D				mov	al,data_168		; (020A:0A0D=0)
020A:28C1  37					aaa				; Ascii adjust
020A:28C2  0D 8D0A				or	ax,8D0Ah
020A:28C5  A5					movsw				; Mov [si] to es:[di]
020A:28C6  20 E3				and	bl,ah
020A:28C8  A4					movsb				; Mov [si] to es:[di]
020A:28C9  A0 E2A5				mov	al,byte ptr ds:[0E2A5h]	; (020A:E2A5=0E9h)
020A:28CC  E1 EF				loopz	locloop_243		; Loop if zf=1, cx>0
  
  
020A:28CE			locloop_245:
020A:28CE  20 A7 AFA0				and	data_630[bx],ah		; (020A:AFA0=0F9h)
020A:28D2  E3 E1				jcxz	locloop_242		; Jump if cx=0
  
020A:28D4			locloop_246:
020A:28D4  E2 A8				loop	locloop_235		; Loop if cx > 0
  
020A:28D6  E2 EC		;*		loop	locloop_244		;*Loop if cx > 0
  
020A:28D6  E2 EC				db	0E2h,0ECh
020A:28D8  20 43 4F				and	[bp+di+4Fh],al
020A:28DB  4D					dec	bp
020A:28DC  4D					dec	bp
020A:28DD  41					inc	cx
020A:28DE  4E					dec	si
020A:28DF  44					inc	sp
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 70

020A:28E0  2E					db	2Eh
020A:28E1  43					inc	bx
  
020A:28E2			locloop_247:
020A:28E2  4F					dec	di
020A:28E3  4D					dec	bp
020A:28E4  2C 20				sub	al,20h			; ' '
020A:28E6  A7					cmpsw				; Cmp [si] to es:[di]
020A:28E7  A0 A5A2				mov	al,data_598		; (020A:A5A2=0C5h)
020A:28EA  E0 E8				loopnz	locloop_246		; Loop if zf=0, cx>0
  
  
020A:28EC			locloop_248:
020A:28EC  A5					movsw				; Mov [si] to es:[di]
020A:28ED  AD					lodsw				; String [si] to ax
020A:28EE  A8 A5				test	al,0A5h
020A:28F0  20 E0				and	al,ah
020A:28F2  A0 AEA1				mov	al,data_625		; (020A:AEA1=0BFh)
020A:28F5  E2 EB				loop	locloop_247		; Loop if cx > 0
  
020A:28F7			loc_249:
020A:28F7  0D 3B0A				or	ax,3B0Ah
020A:28FA  0D 8F0A				or	ax,8F0Ah
020A:28FD  E0 A5				loopnz	locloop_241		; Loop if zf=0, cx>0
  
020A:28FF  E0 A2				loopnz	locloop_240		; Loop if zf=0, cx>0
  
020A:2901  A0 20AD				mov	al,data_258		; (020A:20AD=20h)
020A:2904  AF					scasw				; Scan es:[di] for ax
020A:2905  E0 AE				loopnz	locloop_242		; Loop if zf=0, cx>0
  
020A:2907  E6 A5				out	0A5h,al			; port 0A5h
020A:2909  E1 E1				loopz	locloop_248		; Loop if zf=1, cx>0
  
020A:290B  20 A2 E0A5				and	[bp+si-1F5Bh],ah
020A:290F  E5 AD				in	ax,0ADh			; port 0ADh
020A:2911  A5					movsw				; Mov [si] to es:[di]
020A:2912  A3 20AE				mov	data_259,ax		; (020A:20AE=2020h)
020A:2915  E3 E0				jcxz	loc_249			; Jump if cx=0
020A:2917  AE					scasb				; Scan es:[di] for al
020A:2918  A2 EFAD				mov	byte ptr ds:[0EFADh],al	; (020A:EFAD=63h)
020A:291B  2C 20				sub	al,20h			; ' '
020A:291D  AF					scasw				; Scan es:[di] for ax
020A:291E  E0 AE				loopnz	locloop_245		; Loop if zf=0, cx>0
  
020A:2920  A4					movsb				; Mov [si] to es:[di]
020A:2921  AE					scasb				; Scan es:[di] for al
020A:2922  AB					stosw				; Store ax to es:[di]
020A:2923  A6					cmpsb				; Cmp [si] to es:[di]
020A:2924  A5					movsw				; Mov [si] to es:[di]
  
020A:2925			locloop_251:
020A:2925  AD					lodsw				; String [si] to ax
020A:2926  A8 A5				test	al,0A5h
020A:2928  20 AD A2A5				and	data_587[di],ch		; (020A:A2A5=5)
020A:292C  AE					scasb				; Scan es:[di] for al
020A:292D  A7					cmpsw				; Cmp [si] to es:[di]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 71

020A:292E  AC					lodsb				; String [si] to al
020A:292F  AE					scasb				; Scan es:[di] for al
020A:2930  A6					cmpsb				; Cmp [si] to es:[di]
020A:2931  AD					lodsw				; String [si] to ax
020A:2932  AE					scasb				; Scan es:[di] for al
020A:2933  0D 020A				or	ax,20Ah
020A:2936  0D 580A				or	ax,580Ah
020A:2939  0F					pop	cs			; Dangerous 8088 only
020A:293A  01 00				add	[bx+si],ax
020A:293C  87 0C				xchg	cx,[si]
020A:293E  01 00				add	[bx+si],ax
020A:2940  58					pop	ax
020A:2941			loc_252:
020A:2941  0F					pop	cs			; Dangerous 8088 only
020A:2942  01 00				add	[bx+si],ax
020A:2944  00 00				add	[bx+si],al
020A:2946  00 00				add	[bx+si],al
020A:2948  89 01				mov	[bx+di],ax
020A:294A  0E					push	cs
020A:294B  04 17				add	al,17h
020A:294D  8E					db	8Eh
020A:294E  E8 A1A8				call	$-5E55h
020A:2951  AA					stosb				; Store al to es:[di]
020A:2952  A0 A720				mov	al,data_602		; (020A:A720=8Bh)
  
020A:2955			locloop_255:
020A:2955  A0 A8E9				mov	al,byte ptr data_612	; (020A:A8E9=65h)
020A:2958  E2 EB		;*		loop	locloop_253		;*Loop if cx > 0
  
020A:2958  E2 EB				db	0E2h,0EBh
020A:295A  20 AE 20E2				and	[bp+20E2h],ch
020A:295E  A7					cmpsw				; Cmp [si] to es:[di]
020A:295F  A0 A8AF				mov	al,data_610		; (020A:A8AF=0)
  
020A:2962			locloop_257:
020A:2962  E1 A8		;*		loopz	locloop_250		;*Loop if zf=1, cx>0
  
020A:2962  E1 A8				db	0E1h,0A8h
020A:2964  17					pop	ss
020A:2965  8D A5 E0AF				lea	sp,[di-1F51h]		; Load effective addr
020A:2969  A0 A8A2				mov	al,data_605		; (020A:A8A2=5Bh)
  
020A:296C			locloop_258:
020A:296C  AB					stosw				; Store ax to es:[di]
020A:296D  EC					in	al,dx			; port 0BF06h
020A:296E			loc_259:
020A:296E  AD					lodsw				; String [si] to ax
020A:296F  AE					scasb				; Scan es:[di] for al
020A:2970  A5					movsw				; Mov [si] to es:[di]
020A:2971  20 E3				and	bl,ah
020A:2973  E1 E2		;*		loopz	locloop_256		;*Loop if zf=1, cx>0
  
020A:2973  E1 E2				db	0E1h,0E2h
020A:2975  E0 AE				loopnz	locloop_251		; Loop if zf=0, cx>0
  
020A:2977  A9 E2E1				test	ax,0E2E1h
020A:297A  A2 0EAE				mov	byte ptr ds:[0EAEh],al	; (020A:0EAE=1)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 72

020A:297D  8D A5 20E2				lea	sp,[di+20E2h]		; Load effective addr
020A:2981  A3 E2AE				mov	word ptr ds:[0E2AEh],ax	; (020A:E2AE=8B0Ch)
020A:2984  AE					scasb				; Scan es:[di] for al
020A:2985  A2 AEAD				mov	data_627,al		; (020A:AEAD=0Dh)
020A:2988  E1 E2				loopz	locloop_258		; Loop if zf=1, cx>0
  
020A:298A  A8 20				test	al,20h			; ' '
020A:298C  8D A5 E0AF				lea	sp,[di-1F51h]		; Load effective addr
020A:2990  A0 A8A2				mov	al,data_605		; (020A:A8A2=5Bh)
020A:2993  AB					stosw				; Store ax to es:[di]
020A:2994  EC					in	al,dx			; port 0BF06h
020A:2995  AD					lodsw				; String [si] to ax
020A:2996  EB A9				jmp	short loc_252		; (2941)
020A:2998  20 A7 AFA0				and	data_630[bx],ah		; (020A:AFA0=0F9h)
  
020A:299C			locloop_263:
020A:299C  E0 AE		;*		loopnz	locloop_254		;*Loop if zf=0, cx>0
  
020A:299C  E0 AE				db	0E0h,0AEh
020A:299E  E1 20				loopz	locloop_267		; Loop if zf=1, cx>0
  
020A:29A0  AA					stosb				; Store al to es:[di]
020A:29A1			loc_264:
020A:29A1  20 E3				and	bl,ah
020A:29A3  E1 E2		;*		loopz	locloop_261		;*Loop if zf=1, cx>0
  
020A:29A3  E1 E2				db	0E1h,0E2h
020A:29A5  E0 AE				loopnz	locloop_255		; Loop if zf=0, cx>0
  
020A:29A7  A9 E2E1				test	ax,0E2E1h
020A:29AA  A2 0FE3				mov	data_207,al		; (020A:0FE3=33h)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_30		proc	near
020A:29AD  8E					db	8Eh
020A:29AE  E8 A1A8				call	$-5E55h
020A:29B1  AA					stosb				; Store al to es:[di]
020A:29B2  A0 A220				mov	al,data_584		; (020A:A220=48h)
020A:29B5  20 A4 ADA0				and	data_623[si],ah		; (020A:ADA0=0E2h)
020A:29B9  AD					lodsw				; String [si] to ax
020A:29BA  EB E5				jmp	short loc_264		; (29A1)
				sub_30		endp
  
020A:29BC  2B 8D AFA5				sub	cx,data_631[di]		; (020A:AFA5=45F6h)
  
020A:29C0			locloop_267:
020A:29C0  E0 A0				loopnz	locloop_257		; Loop if zf=0, cx>0
  
020A:29C2  A2 ABA8				mov	data_616,al		; (020A:ABA8=74h)
020A:29C5  EC					in	al,dx			; port 8DB9h
020A:29C6  AD					lodsw				; String [si] to ax
020A:29C7  EB A5				jmp	short loc_259		; (296E)
020A:29C9  20 A0 A3E0				and	data_591[bx+si],ah	; (020A:A3E0=14h)
020A:29CD  E3 AC		;*		jcxz	locloop_260		;*Jump if cx=0
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 73

020A:29CD  E3 AC				db	0E3h,0ACh
  
020A:29CF			locloop_270:
020A:29CF  A5					movsw				; Mov [si] to es:[di]
020A:29D0  AD					lodsw				; String [si] to ax
  
020A:29D1			locloop_271:
020A:29D1  E2 EB		;*		loop	locloop_266		;*Loop if cx > 0
  
020A:29D1  E2 EB				db	0E2h,0EBh
020A:29D3  20 A7 AFA0				and	data_630[bx],ah		; (020A:AFA0=0F9h)
020A:29D7  E0 AE		;*		loopnz	locloop_261		;*Loop if zf=0, cx>0
  
020A:29D7  E0 AE				db	0E0h,0AEh
020A:29D9  E1 A0		;*		loopz	locloop_260		;*Loop if zf=1, cx>0
  
020A:29D9  E1 A0				db	0E1h,0A0h
020A:29DB  20 AA E320				and	[bp+si-1CE0h],ch
020A:29DF  E1 E2		;*		loopz	locloop_268		;*Loop if zf=1, cx>0
  
020A:29DF  E1 E2				db	0E1h,0E2h
020A:29E1  E0 AE		;*		loopnz	locloop_262		;*Loop if zf=0, cx>0
  
020A:29E1  E0 AE				db	0E0h,0AEh
020A:29E3  A9 E2E1				test	ax,0E2E1h
020A:29E6  A2 0DE3				mov	data_190,al		; (020A:0DE3=0EBh)
020A:29E9  8E					db	8Eh
020A:29EA  E8 A1A8				call	$-5E55h
020A:29ED  AA					stosb				; Store al to es:[di]
020A:29EE  A0 AF20				mov	al,data_629		; (020A:AF20=6)
020A:29F1  AE					scasb				; Scan es:[di] for al
020A:29F2  A8 E1				test	al,0E1h
020A:29F4  AA					stosb				; Store al to es:[di]
020A:29F5  A0 8D19				mov	al,data_554		; (020A:8D19=0FBh)
020A:29F8  A5					movsw				; Mov [si] to es:[di]
020A:29F9  AF					scasw				; Scan es:[di] for ax
020A:29FA  E0 A0				loopnz	locloop_263		; Loop if zf=0, cx>0
  
  
020A:29FC			locloop_272:
020A:29FC  A2 ABA8				mov	data_616,al		; (020A:ABA8=74h)
020A:29FF  EC					in	al,dx			; port 8DB9h
020A:2A00  AD					lodsw				; String [si] to ax
020A:2A01  EB A9		;*		jmp	short loc_265		;*(29AC)
020A:2A01  EB A9				db	0EBh,0A9h
020A:2A03  20 E2				and	dl,ah
020A:2A05  A8 AF				test	al,0AFh
020A:2A07  20 AD E1AE				and	byte ptr ds:[0E1AEh][di],ch	; (020A:E1AE=26h)
020A:2A0B  A8 E2				test	al,0E2h
020A:2A0D  A5					movsw				; Mov [si] to es:[di]
020A:2A0E  AB					stosw				; Store ax to es:[di]
020A:2A0F  EF					out	dx,ax			; port 8D00h
020A:2A10  10 91 AAA5				adc	data_615[bx+di],dl	; (020A:AAA5=0Ch)
020A:2A14  E2 AE		;*		loop	locloop_269		;*Loop if cx > 0
  
020A:2A14  E2 AE				db	0E2h,0AEh
020A:2A16  E0 20				loopnz	locloop_275		; Loop if zf=0, cx>0
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 74

  
020A:2A18  AD					lodsw				; String [si] to ax
020A:2A19  A5					movsw				; Mov [si] to es:[di]
020A:2A1A  20 AD A9A0				and	data_613[di],ch		; (020A:A9A0=44h)
020A:2A1E  A4			data_341	db	0A4h
020A:2A1F  A5			data_342	db	0A5h
020A:2A20  AD					lodsw				; String [si] to ax
020A:2A21  15 2082				adc	ax,2082h
020A:2A24  E0AF			data_344	dw	0E0AFh
020A:2A26  A8			data_345	db	0A8h
020A:2A27  AD					lodsw				; String [si] to ax
020A:2A28  E2 A5				loop	locloop_270		; Loop if cx > 0
  
020A:2A2A  E0 A5				loopnz	locloop_271		; Loop if zf=0, cx>0
  
020A:2A2C  20 AD E2A5				and	byte ptr ds:[0E2A5h][di],ch	; (020A:E2A5=0E9h)
020A:2A30  20 A1 ACE3				and	data_620[bx+di],ah	; (020A:ACE3=2Fh)
020A:2A34  A0 A8A3				mov	al,data_606		; (020A:A8A3=58h)
020A:2A37  11 8E A8E8				adc	[bp-5718h],cx
020A:2A3B  A1 A0AA				mov	ax,data_580		; (020A:A0AA=7410h)
020A:2A3E  AF20			data_350	dw	0AF20h
020A:2A40  A8E0			data_351	dw	0A8E0h
020A:2A42  20 A7 AFA0				and	data_630[bx],ah		; (020A:AFA0=0F9h)
020A:2A46  A8 E1				test	al,0E1h
020A:2A48  A8 11				test	al,11h
020A:2A4A  E88E			data_352	dw	0E88Eh
020A:2A4C  A1A8			data_353	dw	0A1A8h
  
020A:2A4E			locloop_277:
020A:2A4E  AA					stosb				; Store al to es:[di]
020A:2A4F  A0 AF20				mov	al,data_629		; (020A:AF20=6)
020A:2A52  E0 A8				loopnz	locloop_272		; Loop if zf=0, cx>0
  
020A:2A54  20 E7				and	bh,ah
020A:2A56  E2 A5		;*		loop	locloop_273		;*Loop if cx > 0
  
020A:2A56  E2 A5				db	0E2h,0A5h
020A:2A58  AD					lodsw				; String [si] to ax
020A:2A59  A8 A8				test	al,0A8h
020A:2A5B  12 8E E9A1				adc	cl,[bp-165Fh]
020A:2A5F  A8 A9				test	al,0A9h
020A:2A61  20 E1				and	cl,ah
020A:2A63  AEA1			data_354	dw	0AEA1h
020A:2A65  20A9			data_355	dw	20A9h
020A:2A67  A8E1			data_356	dw	0A8E1h
  
020A:2A69			locloop_279:
020A:2A69  E2E1			data_357	dw	0E2E1h
020A:2A6B  ACA5			data_358	dw	0ACA5h
020A:2A6D  24EB			data_359	dw	24EBh
020A:2A6F  8D A0 E3E0				lea	sp,[bx+si-1C20h]	; Load effective addr
020A:2A73  E8 ADA5				call	$-5258h
020A:2A76  A8 A5				test	al,0A5h
020A:2A78  20			data_362	db	20h
020A:2A79			loc_281:
020A:2A79  E0			data_363	db	0E0h
020A:2A7A  A5					movsw				; Mov [si] to es:[di]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 75

  
020A:2A7B			locloop_282:
020A:2A7B  A6					cmpsb				; Cmp [si] to es:[di]
020A:2A7C  A8 AC				test	al,0ACh
020A:2A7E  A0 E120				mov	al,byte ptr ds:[0E120h]	; (020A:E120=3)
020A:2A81  AE					scasb				; Scan es:[di] for al
020A:2A82  ACA2			data_364	dw	0ACA2h
020A:2A84  A5					movsw				; Mov [si] to es:[di]
020A:2A85  E1 E2				loopz	locloop_279		; Loop if zf=1, cx>0
  
020A:2A87  AD					lodsw				; String [si] to ax
020A:2A88  AE					scasb				; Scan es:[di] for al
020A:2A89  A3 20AE				mov	data_259,ax		; (020A:20AE=2020h)
020A:2A8C  A4					movsb				; Mov [si] to es:[di]
020A:2A8D  AE					scasb				; Scan es:[di] for al
020A:2A8E  E1 E2		;*		loopz	locloop_280		;*Loop if zf=1, cx>0
  
020A:2A8E  E1 E2				db	0E1h,0E2h
020A:2A90  E3 AF		;*		jcxz	loc_276			;*Jump if cx=0
020A:2A90  E3 AF				db	0E3h,0AFh
020A:2A92  A0 8D14				mov	al,data_553		; (020A:8D14=0A8h)
020A:2A95  A0 E3E0				mov	al,byte ptr ds:[0E3E0h]	; (020A:E3E0=16h)
020A:2A98  E8 ADA5				call	$-5258h
020A:2A9B  A8 A5				test	al,0A5h
020A:2A9D  20 A1 AEAB				and	byte ptr data_626[bx+di],ah	; (020A:AEAB=2)
020A:2AA1  AA					stosb				; Store al to es:[di]
020A:2AA2  A8 E0				test	al,0E0h
020A:2AA4  AE					scasb				; Scan es:[di] for al
020A:2AA5  A2 A8AA				mov	data_608,al		; (020A:A8AA=0)
020A:2AA8  18 8D AFA5				sbb	byte ptr data_631[di],cl	; (020A:AFA5=0F6h)
020A:2AAC  E0 A0				loopnz	locloop_277		; Loop if zf=0, cx>0
  
020A:2AAE  A2 ABA8				mov	data_616,al		; (020A:ABA8=74h)
020A:2AB1  EC					in	al,dx			; port 8D00h
  
020A:2AB2			locloop_288:
020A:2AB2  AD					lodsw				; String [si] to ax
020A:2AB3  A0 20EF				mov	al,data_262		; (020A:20EF=0A0h)
  
020A:2AB6			locloop_289:
020A:2AB6  E1 AC		;*		loopz	locloop_278		;*Loop if zf=1, cx>0
  
020A:2AB6  E1 AC				db	0E1h,0ACh
020A:2AB8  A5					movsw				; Mov [si] to es:[di]
020A:2AB9  AD					lodsw				; String [si] to ax
020A:2ABA  A0 A420				mov	al,data_592		; (020A:A420=8Bh)
020A:2ABD  A8 E1				test	al,0E1h
020A:2ABF  AA					stosb				; Store al to es:[di]
020A:2AC0  A0 8D27				mov	al,data_555		; (020A:8D27=45h)
020A:2AC3  A5					movsw				; Mov [si] to es:[di]
020A:2AC4  A4					movsb				; Mov [si] to es:[di]
020A:2AC5  AE					scasb				; Scan es:[di] for al
020A:2AC6  E1 E2		;*		loopz	locloop_285		;*Loop if zf=1, cx>0
  
020A:2AC6  E1 E2				db	0E1h,0E2h
020A:2AC8  E3 AF				jcxz	loc_281			; Jump if cx=0
020A:2ACA  A5					movsw				; Mov [si] to es:[di]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 76

020A:2ACB  AD					lodsw				; String [si] to ax
020A:2ACC  20 46 43				and	[bp+43h],al
020A:2ACF  42					inc	dx
020A:2AD0  20 28				and	[bx+si],ch
020A:2AD2  A1 AEAB				mov	ax,data_626		; (020A:AEAB=7502h)
020A:2AD5  AA					stosb				; Store al to es:[di]
020A:2AD6  20 E3				and	bl,ah
  
020A:2AD8			locloop_291:
020A:2AD8  AF					scasw				; Scan es:[di] for ax
020A:2AD9  E0 A0				loopnz	locloop_282		; Loop if zf=0, cx>0
  
020A:2ADB  A2 A5AB				mov	data_599,al		; (020A:A5AB=0C6h)
020A:2ADE  AD					lodsw				; String [si] to ax
020A:2ADF  A8 EF				test	al,0EFh
020A:2AE1  20 E4				and	ah,ah
020A:2AE3  A0 ABA9				mov	al,data_617		; (020A:ABA9=5)
020A:2AE6  AE					scasb				; Scan es:[di] for al
020A:2AE7  AC					lodsb				; String [si] to al
020A:2AE8  29 19				sub	[bx+di],bx
020A:2AEA  90					nop
020A:2AEB  A5					movsw				; Mov [si] to es:[di]
020A:2AEC  E1 E3		;*		loopz	locloop_290		;*Loop if zf=1, cx>0
  
020A:2AEC  E1 E3				db	0E1h,0E3h
020A:2AEE  E0 E1		;*		loopnz	locloop_290		;*Loop if zf=0, cx>0
  
020A:2AEE  E0 E1				db	0E0h,0E1h
020A:2AF0  EB 20				jmp	short loc_296		; (2B12)
020A:2AF2  E1 A8		;*		loopz	locloop_284		;*Loop if zf=1, cx>0
  
020A:2AF2  E1 A8				db	0E1h,0A8h
020A:2AF4  E1 E2				loopz	locloop_291		; Loop if zf=1, cx>0
  
020A:2AF6  A5					movsw				; Mov [si] to es:[di]
020A:2AF7  AC					lodsb				; String [si] to al
020A:2AF8  EB 20				jmp	short loc_297		; (2B1A)
020A:2AFA  A8 E1				test	al,0E1h
020A:2AFC  E7 A5				out	0A5h,ax			; port 0A5h
  
020A:2AFE			locloop_294:
020A:2AFE  E0 AF		;*		loopnz	locloop_287		;*Loop if zf=0, cx>0
  
020A:2AFE  E0 AF				db	0E0h,0AFh
020A:2B00  A0 EBAD				mov	al,byte ptr ds:[0EBADh]	; (020A:EBAD=0)
020A:2B03  8D1E			data_368	dw	8D1Eh			; Data table (indexed access)
020A:2B05  A5					movsw				; Mov [si] to es:[di]
020A:2B06  E1 AE				loopz	locloop_289		; Loop if zf=1, cx>0
  
020A:2B08  AE					scasb				; Scan es:[di] for al
020A:2B09  E2 A2		;*		loop	locloop_286		;*Loop if cx > 0
  
020A:2B09  E2 A2				db	0E2h,0A2h
  
020A:2B0B			locloop_295:
020A:2B0B  A5					movsw				; Mov [si] to es:[di]
020A:2B0C  E2 E1		;*		loop	locloop_292		;*Loop if cx > 0
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 77

  
020A:2B0C  E2 E1				db	0E2h,0E1h
020A:2B0E  E2 A2				loop	locloop_288		; Loop if cx > 0
  
020A:2B10  A8 A5				test	al,0A5h
020A:2B12			loc_296:
020A:2B12  20 AA A4AE				and	[bp+si-5B52h],ch
020A:2B16  AE					scasb				; Scan es:[di] for al
020A:2B17  A2 E5EB				mov	byte ptr ds:[0E5EBh],al	; (020A:E5EB=0A3h)
020A:2B1A			loc_297:
020A:2B1A  20 E1				and	cl,ah
020A:2B1C  E2 E0				loop	locloop_294		; Loop if cx > 0
  
020A:2B1E			loc_298:
020A:2B1E  A0 A8AD				mov	al,data_609		; (020A:A8AD=0)
020A:2B21  E6 1D				out	1Dh,al			; port 1Dh
020A:2B23  8D A5 AEA4				lea	sp,[di-515Ch]		; Load effective addr
020A:2B27  E1 E2				loopz	locloop_295		; Loop if zf=1, cx>0
  
  
020A:2B29			locloop_300:
020A:2B29  A0 AEE2				mov	al,data_628		; (020A:AEE2=0B9h)
020A:2B2C  E7 AD				out	0ADh,ax			; port 0ADh
020A:2B2E  AE					scasb				; Scan es:[di] for al
020A:2B2F  20 A2 A5A2				and	[bp+si-5A5Eh],ah
020A:2B33  A4					movsb				; Mov [si] to es:[di]
020A:2B34  A5					movsw				; Mov [si] to es:[di]
020A:2B35  AD					lodsw				; String [si] to ax
020A:2B36  AD					lodsw				; String [si] to ax
020A:2B37  EB E5				jmp	short loc_298		; (2B1E)
020A:2B39  20 A4 ADA0				and	data_623[si],ah		; (020A:ADA0=0E2h)
020A:2B3D  AD					lodsw				; String [si] to ax
020A:2B3E  EB E5		;*		jmp	short loc_299		;*(2B25)
020A:2B3E  EB E5				db	0EBh,0E5h
020A:2B40  1B 8D A4A5				sbb	cx,data_595[di]		; (020A:A4A5=802Eh)
020A:2B44  AE					scasb				; Scan es:[di] for al
020A:2B45  E1 E2				loopz	locloop_300		; Loop if zf=1, cx>0
  
020A:2B47  A0 AEE2				mov	al,data_628		; (020A:AEE2=0B9h)
020A:2B4A  E7 AD				out	0ADh,ax			; port 0ADh
020A:2B4C  AE					scasb				; Scan es:[di] for al
020A:2B4D  20 AC E1A5				and	byte ptr ds:[0E1A5h][si],ch	; (020A:E1A5=8)
020A:2B51  E2 A0		;*		loop	locloop_293		;*Loop if cx > 0
  
020A:2B51  E2 A0				db	0E2h,0A0h
020A:2B53  20 AD 20A0				and	data_256[di],ch		; (020A:20A0=20h)
020A:2B57  A4					movsb				; Mov [si] to es:[di]
020A:2B58  A8 E1				test	al,0E1h
020A:2B5A  AA					stosb				; Store al to es:[di]
020A:2B5B  A5					movsw				; Mov [si] to es:[di]
020A:2B5C  0C 09				or	al,9
020A:2B5E  24 09				and	al,9
020A:2B60  3C 09				cmp	al,9
020A:2B62  4B					dec	bx
020A:2B63  09 6C 09				or	[si+9],bp
020A:2B66  7C 09				jl	loc_301			; Jump if <
020A:2B68  A8 09				test	al,9
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 78

020A:2B6A  B6 09				mov	dh,9
020A:2B6C  D0 09				ror	byte ptr [bx+di],1	; Rotate
020A:2B6E  E1 09				loopz	locloop_302		; Loop if zf=1, cx>0
  
020A:2B70  F7					db	0F7h
020A:2B71			loc_301:
020A:2B71  09 09				or	[bx+di],cx
020A:2B73  0A 1B				or	bl,[bp+di]
020A:2B75  0A 2E 530A				or	ch,data_531		; (020A:530A=26h)
  
020A:2B79			locloop_302:
020A:2B79  0A 68 0A				or	ch,[bx+si+0Ah]
020A:2B7C  81 0A 0AA9				or	word ptr [bp+si],0AA9h
020A:2B80  C3					retn
020A:2B81  0A E2				or	ah,dl
020A:2B83  0A 00				or	al,[bx+si]
020A:2B85  0B 18				or	bx,[bx+si]
020A:2B87  91					xchg	ax,cx
020A:2B88  AB					stosw				; Store ax to es:[di]
020A:2B89  A8 E8				test	al,0E8h
020A:2B8B  AA					stosb				; Store al to es:[di]
020A:2B8C  AE					scasb				; Scan es:[di] for al
020A:2B8D  AC					lodsb				; String [si] to al
020A:2B8E  20 AC 004D				and	[si+4Dh],ch
020A:2B92  00 07				add	[bx],al
020A:2B94  00 AF E0A0				add	byte ptr ds:[0E0A0h][bx],ch	; (020A:E0A0=0C7h)
020A:2B98  A0 A5AC				mov	al,data_600		; (020A:A5AC=46h)
020A:2B9B  E2 E0		;*		loop	locloop_303		;*Loop if cx > 0
  
020A:2B9B  E2 E0				db	0E2h,0E0h
020A:2B9D  AE					scasb				; Scan es:[di] for al
020A:2B9E  A2 0021				mov	byte ptr data_80+3,al	; (020A:0021=0A3h)
020A:2BA1  01 00				add	[bx+si],ax
  
020A:2BA3			locloop_304:
020A:2BA3  00 00				add	[bx+si],al
020A:2BA5  00 00				add	[bx+si],al
020A:2BA7  00 C4				add	ah,al
020A:2BA9  0C 00				or	al,0
020A:2BAB  00 FF				add	bh,bh
020A:2BAD  FF FF FF FF FF			db	0FFh,0FFh,0FFh,0FFh,0FFh
020A:2BB2  FF			data_370	db	0FFh
020A:2BB3  FF					db	0FFh
020A:2BB4  FF					db	0FFh
020A:2BB5  FF					db	0FFh
020A:2BB6  FF					db	0FFh
020A:2BB7  FF					db	0FFh
020A:2BB8  FF					db	0FFh
020A:2BB9  FF					db	0FFh
020A:2BBA  FF					db	0FFh
020A:2BBB  FF					db	0FFh
020A:2BBC  FF					db	0FFh
020A:2BBD  FF					db	0FFh
020A:2BBE  FF					db	0FFh
020A:2BBF  FF 43 3A				inc	word ptr [bp+di+3Ah]
020A:2BC2  5C					pop	sp
020A:2BC3  57					push	di
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 79

020A:2BC4  49					dec	cx
020A:2BC5  4E					dec	si
020A:2BC6  44					inc	sp
020A:2BC7  4F					dec	di
020A:2BC8  57					push	di
020A:2BC9  53					push	bx
020A:2BCA  5C					pop	sp
020A:2BCB  54					push	sp
020A:2BCC  45					inc	bp
020A:2BCD  4D					dec	bp
020A:2BCE  50					push	ax
020A:2BCF  5C					pop	sp
020A:2BD0  73 63				jnc	loc_309			; Jump if carry=0
020A:2BD2  73 36				jnc	loc_308			; Jump if carry=0
020A:2BD4  2E					db	2Eh
020A:2BD5  74 6D				jz	loc_311			; Jump if zero
020A:2BD7  70 00				jo	loc_305			; Jump if overflow=1
020A:2BD9			loc_305:
020A:2BD9  001A[00]				db	26 dup (0)
020A:2BF3  00			data_372	db	0
020A:2BF4  00 00				add	[bx+si],al
020A:2BF6  00			data_374	db	0
020A:2BF7  00 00				add	[bx+si],al
020A:2BF9  00 00				add	[bx+si],al
020A:2BFB  00 00				add	[bx+si],al
020A:2BFD  00 00				add	[bx+si],al
020A:2BFF  00 00				add	[bx+si],al
020A:2C01  E0 A0				loopnz	locloop_304		; Loop if zf=0, cx>0
  
020A:2C03  AC					lodsb				; String [si] to al
020A:2C04  A5					movsw				; Mov [si] to es:[di]
020A:2C05  E2 E0		;*		loop	locloop_306		;*Loop if cx > 0
  
020A:2C05  E2 E0				db	0E2h,0E0h
020A:2C07  A0 A220				mov	al,data_584		; (020A:A220=48h)
020A:2C0A			loc_308:
020A:2C0A  EB E5		;*		jmp	short loc_307		;*(2BF1)
020A:2C0A  EB E5				db	0EBh,0E5h
020A:2C0C  AE					scasb				; Scan es:[di] for al
020A:2C0D  A4					movsb				; Mov [si] to es:[di]
020A:2C0E  A8 E2				test	al,0E2h
020A:2C10  4D					dec	bp
020A:2C11  0E					push	cs
020A:2C12  04 42				add	al,42h			; 'B'
020A:2C14  00 E0				add	al,ah
020A:2C16  A5					movsw				; Mov [si] to es:[di]
020A:2C17  A4					movsb				; Mov [si] to es:[di]
020A:2C18  A5					movsw				; Mov [si] to es:[di]
020A:2C19  AB					stosw				; Store ax to es:[di]
020A:2C1A  EB 20				jmp	short loc_310		; (2C3C)
020A:2C1C  A4					movsb				; Mov [si] to es:[di]
020A:2C1D  AE					scasb				; Scan es:[di] for al
020A:2C1E  AF					scasw				; Scan es:[di] for ax
020A:2C1F  E3 43				jcxz	loc_312			; Jump if cx=0
020A:2C21  4F					dec	di
020A:2C22  4D					dec	bp
020A:2C23  53					push	bx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 80

020A:2C24  50					push	ax
020A:2C25  45					inc	bp
020A:2C26  43					inc	bx
020A:2C27  3D 3A43				cmp	ax,3A43h
020A:2C2A  5C					pop	sp
020A:2C2B  57					push	di
020A:2C2C  49					dec	cx
020A:2C2D  4E					dec	si
020A:2C2E  44					inc	sp
020A:2C2F  4F					dec	di
020A:2C30  57					push	di
020A:2C31  53					push	bx
020A:2C32  5C					pop	sp
020A:2C33  53					push	bx
020A:2C34  59					pop	cx
020A:2C35			loc_309:
020A:2C35  53					push	bx
020A:2C36  54					push	sp
020A:2C37  45					inc	bp
020A:2C38  4D					dec	bp
020A:2C39  33 32				xor	si,[bp+si]
020A:2C3B  5C					pop	sp
020A:2C3C			loc_310:
020A:2C3C  4F43			data_375	dw	4F43h
020A:2C3E  4D			data_376	db	4Dh
020A:2C3F  4D			data_377	db	4Dh
020A:2C40  41 4E 44 2E 43 4F	data_378	db	'AND.COM', 0
020A:2C46  4D 00
020A:2C48  41					inc	cx
020A:2C49  4C					dec	sp
020A:2C4A  4C					dec	sp
020A:2C4B  55					push	bp
020A:2C4C  53					push	bx
020A:2C4D  45					inc	bp
020A:2C4E  52					push	dx
020A:2C4F  53					push	bx
020A:2C50  50					push	ax
020A:2C51  52					push	dx
020A:2C52  4F					dec	di
020A:2C53  46					inc	si
020A:2C54  49					dec	cx
020A:2C55  4C					dec	sp
020A:2C56  45					inc	bp
020A:2C57  3D 3A43				cmp	ax,3A43h
020A:2C5A  5C					pop	sp
020A:2C5B  44					inc	sp
020A:2C5C  4F					dec	di
020A:2C5D  43					inc	bx
020A:2C5E  55					push	bp
020A:2C5F  4D					dec	bp
020A:2C60  45					inc	bp
020A:2C61  7E 31				jle	loc_313			; Jump if < or =
020A:2C63  5C					pop	sp
020A:2C64			loc_312:
020A:2C64  41 4C 4C 55 53 45			db	'ALLUSE~1', 0
020A:2C6A  7E 31 00
020A:2C6D  41 50 50 44 41 54			db	'APPDATA=C:\DOCUME~1\LOADEE~1\APP'
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 81

020A:2C73  41 3D 43 3A 5C 44
020A:2C79  4F 43 55 4D 45 7E
020A:2C7F  31 5C 4C 4F 41 44
020A:2C85  45 45 7E 31 5C 41
020A:2C8B  50 50
020A:2C8D  4C 49 43 7E 31 00			db	'LIC~1', 0
020A:2C93  43					db	'C'
020A:2C94			loc_313:
020A:2C94  4C 49 45 4E 54 4E	data_380	db	'LIENTNAME=Console', 0
020A:2C9A  41 4D 45 3D 43 6F
020A:2CA0  6E 73 6F 6C 65 00
020A:2CA6  43 4F 4D 4D 4F 4E			db	'COMMONPROGRAMFILES=C:\PROGRA~1\C'
020A:2CAC  50 52 4F 47 52 41
020A:2CB2  4D 46 49 4C 45 53
020A:2CB8  3D 43 3A 5C 50 52
020A:2CBE  4F 47 52 41 7E 31
020A:2CC4  5C 43
020A:2CC6  4F 4D 4D 4F 4E 7E			db	'OMMON~1', 0
020A:2CCC  31 00
020A:2CCE  43 4F 4D 50 55 54			db	'COMPUTERNAME=LOADEADD', 0
020A:2CD4  45 52 4E 41 4D 45
020A:2CDA  3D 4C 4F 41 44 45
020A:2CE0  41 44 44 00
020A:2CE4  46 50 5F 4E 4F 5F			db	'FP_NO_HOST_CHECK=NO', 0
020A:2CEA  48 4F 53 54 5F 43
020A:2CF0  48 45 43 4B 3D 4E
020A:2CF6  4F 00
020A:2CF8  48 4F 4D 45 44 52			db	'HOMEDRIVE=C:', 0
020A:2CFE  49 56 45 3D 43 3A
020A:2D04  00
020A:2D05  48 4F 4D 45 50 41			db	'HOMEPATH=\Documents and Settings'
020A:2D0B  54 48 3D 5C 44 6F
020A:2D11  63 75 6D 65 6E 74
020A:2D17  73 20 61 6E 64 20
020A:2D1D  53 65 74 74 69 6E
020A:2D23  67 73
020A:2D25  5C 4C 6F 61 44 65			db	'\LoaDeeadd', 0
020A:2D2B  65 61 64 64 00
020A:2D30  4C 4F 47 4F 4E 53			db	'LOGONSERVER=\\LOADEADD', 0
020A:2D36  45 52 56 45 52 3D
020A:2D3C  5C 5C 4C 4F 41 44
020A:2D42  45 41 44 44 00
020A:2D47  4E 55 4D 42 45 52			db	'NUMBER_OF_PROCESSO'
020A:2D4D  5F 4F 46 5F 50 52
020A:2D53  4F 43 45 53 53 4F
020A:2D59  5352			data_382	dw	5352h
020A:2D5B  3D 0034				cmp	ax,34h
020A:2D5E  4F					dec	di
020A:2D5F  53					push	bx
020A:2D60  3D 6957				cmp	ax,6957h
020A:2D63  6E					db	6Eh
020A:2D64  64					db	64h
020A:2D65  6F					db	6Fh
020A:2D66  77 73				ja	$+75h			; Jump if above
020A:2D68  5F					pop	di
020A:2D69  4E					dec	si
020A:2D6A  54					push	sp
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 82

020A:2D6B  00 50 41				add	[bx+si+41h],dl
020A:2D6E  54					push	sp
020A:2D6F  48					dec	ax
020A:2D70  3D 3A43				cmp	ax,3A43h
020A:2D73  5C					pop	sp
020A:2D74  57					push	di
020A:2D75  49					dec	cx
020A:2D76  4E					dec	si
020A:2D77  44					inc	sp
020A:2D78  4F					dec	di
020A:2D79  57					push	di
020A:2D7A  53					push	bx
020A:2D7B  5C					pop	sp
020A:2D7C  73 79				jnc	$+7Bh			; Jump if carry=0
020A:2D7E  73 74				jnc	$+76h			; Jump if carry=0
020A:2D80  65					db	65h
020A:2D81  6D					db	6Dh
020A:2D82  3233			data_383	dw	3233h
020A:2D84  433B			data_384	dw	433Bh
020A:2D86  5C3A			data_385	dw	5C3Ah
020A:2D88  4957			data_386	dw	4957h
020A:2D8A  444E			data_387	dw	444Eh
020A:2D8C  4F					dec	di
020A:2D8D  57			data_388	db	57h
020A:2D8E  53					push	bx
020A:2D8F  3B			data_389	db	3Bh
020A:2D90  43			data_390	db	43h
020A:2D91  5C3A			data_391	dw	5C3Ah
020A:2D93  57					push	di
020A:2D94  49					dec	cx
020A:2D95  4E					dec	si
020A:2D96  44					inc	sp
020A:2D97  4F					dec	di
020A:2D98  57					push	di
020A:2D99  53					push	bx
020A:2D9A  5C					pop	sp
020A:2D9B  53					push	bx
020A:2D9C  79 73				jns	$+75h			; Jump if not sign
020A:2D9E  74 65				jz	$+67h			; Jump if zero
020A:2DA0  6D					db	6Dh
020A:2DA1  33 32				xor	si,[bp+si]
020A:2DA3  5C					pop	sp
020A:2DA4  57					push	di
020A:2DA5  62					db	62h
020A:2DA6  65					db	65h
020A:2DA7  6D					db	6Dh
020A:2DA8  00 50 41				add	[bx+si+41h],dl
020A:2DAB  54					push	sp
020A:2DAC  48					dec	ax
020A:2DAD  45					inc	bp
020A:2DAE  58					pop	ax
020A:2DAF  54					push	sp
020A:2DB0  3D 432E				cmp	ax,432Eh
020A:2DB3  4F					dec	di
020A:2DB4  4D					dec	bp
020A:2DB5  3B 2E 5845				cmp	bp,word ptr ds:[5845h]	; (020A:5845=0E8BFh)
020A:2DB9  45					inc	bp
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 83

020A:2DBA  2E3B			data_392	dw	2E3Bh
020A:2DBC  42 41 54 3B 2E 43	data_393	db	'BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF'
020A:2DC2  4D 44 3B 2E 56 42
020A:2DC8  53 3B 2E 56 42 45
020A:2DCE  3B 2E 4A 53 3B 2E
020A:2DD4  4A 53 45 3B 2E 57
020A:2DDA  53 46
020A:2DDC  3B 2E 57 53 48 00			db	';.WSH', 0
020A:2DE2  50					push	ax
020A:2DE3  52					push	dx
020A:2DE4  4F					dec	di
020A:2DE5  43					inc	bx
020A:2DE6  45					inc	bp
020A:2DE7  53					push	bx
020A:2DE8  53					push	bx
020A:2DE9  4F					dec	di
020A:2DEA  52					push	dx
020A:2DEB  5F					pop	di
020A:2DEC  41					inc	cx
020A:2DED  52					push	dx
020A:2DEE  43					inc	bx
020A:2DEF  48					dec	ax
020A:2DF0  49					dec	cx
020A:2DF1  54					push	sp
020A:2DF2  45					inc	bp
020A:2DF3  43					inc	bx
020A:2DF4  54					push	sp
020A:2DF5  55					push	bp
020A:2DF6  52					push	dx
020A:2DF7  45					inc	bp
020A:2DF8  3D 3878				cmp	ax,3878h
020A:2DFB  36: 00 50 52				add	ss:[bx+si+52h],dl
020A:2DFF  4F					dec	di
020A:2E00  43					inc	bx
020A:2E01  45					inc	bp
020A:2E02  53					push	bx
020A:2E03  53					push	bx
020A:2E04  4F					dec	di
020A:2E05  52					push	dx
020A:2E06  5F					pop	di
020A:2E07  49					dec	cx
020A:2E08  44					inc	sp
020A:2E09  45					inc	bp
020A:2E0A  4E					dec	si
020A:2E0B  54					push	sp
020A:2E0C  49					dec	cx
020A:2E0D  46					inc	si
020A:2E0E  49					dec	cx
020A:2E0F  45					inc	bp
020A:2E10  52					push	dx
020A:2E11  3D 3878				cmp	ax,3878h
020A:2E14  36					db	36h
020A:2E15  20 46 61				and	[bp+61h],al
020A:2E18  6D					db	6Dh
020A:2E19  69					db	69h
020A:2E1A  6C					db	6Ch
020A:2E1B  79 20				jns	$+22h			; Jump if not sign
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 84

020A:2E1D  36: 20 4D 6F				and	ss:[di+6Fh],cl
020A:2E21  64					db	64h
020A:2E22  65					db	65h
020A:2E23  6C					db	6Ch
020A:2E24  20 31				and	[bx+di],dh
020A:2E26  34 30				xor	al,30h			; '0'
020A:2E28  20 53 74				and	[bp+di+74h],dl
020A:2E2B  65					db	65h
020A:2E2C  70 70				jo	$+72h			; Jump if overflow=1
020A:2E2E  69					db	69h
020A:2E2F  6E					db	6Eh
020A:2E30  67					db	67h
020A:2E31  20 31				and	[bx+di],dh
020A:2E33  2C 20				sub	al,20h			; ' '
020A:2E35  47					inc	di
020A:2E36  65					db	65h
020A:2E37  6E					db	6Eh
020A:2E38  75 69				jnz	$+6Bh			; Jump if not zero
020A:2E3A  6E					db	6Eh
020A:2E3B  65					db	65h
020A:2E3C  49					dec	cx
020A:2E3D  6E					db	6Eh
020A:2E3E  74 65				jz	$+67h			; Jump if zero
020A:2E40  6C					db	6Ch
020A:2E41  00 50 52				add	[bx+si+52h],dl
020A:2E44  4F					dec	di
020A:2E45  43					inc	bx
020A:2E46  45					inc	bp
020A:2E47  53					push	bx
020A:2E48  53					push	bx
020A:2E49  4F					dec	di
020A:2E4A  52					push	dx
020A:2E4B  5F					pop	di
020A:2E4C  4C					dec	sp
020A:2E4D  45					inc	bp
020A:2E4E  56					push	si
020A:2E4F  45					inc	bp
020A:2E50  4C					dec	sp
020A:2E51  3D 0036				cmp	ax,36h
020A:2E54  50					push	ax
020A:2E55  52					push	dx
020A:2E56  4F					dec	di
020A:2E57  43					inc	bx
020A:2E58  45					inc	bp
020A:2E59  53					push	bx
020A:2E5A  53					push	bx
020A:2E5B  4F					dec	di
020A:2E5C  52					push	dx
020A:2E5D  5F					pop	di
020A:2E5E  52					push	dx
020A:2E5F  45					inc	bp
020A:2E60  56					push	si
020A:2E61  49					dec	cx
020A:2E62  53					push	bx
020A:2E63  49					dec	cx
020A:2E64  4F					dec	di
020A:2E65  4E					dec	si
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 85

020A:2E66  3D 6338				cmp	ax,6338h
020A:2E69  30 31				xor	[bx+di],dh
020A:2E6B  00 50 52				add	[bx+si+52h],dl
020A:2E6E  4F					dec	di
020A:2E6F  47					inc	di
020A:2E70  52					push	dx
020A:2E71  41					inc	cx
020A:2E72  4D					dec	bp
020A:2E73  46					inc	si
020A:2E74  49					dec	cx
020A:2E75  4C					dec	sp
020A:2E76  45					inc	bp
020A:2E77  53					push	bx
020A:2E78  3D 3A43				cmp	ax,3A43h
020A:2E7B  5C					pop	sp
020A:2E7C  50					push	ax
020A:2E7D  52					push	dx
020A:2E7E  4F			data_394	db	4Fh
020A:2E7F  47					inc	di
020A:2E80  52					push	dx
020A:2E81  41					inc	cx
020A:2E82  7E 31				jle	$+33h			; Jump if < or =
020A:2E84  00 50 52				add	[bx+si+52h],dl
020A:2E87  4F					dec	di
020A:2E88  4D					dec	bp
020A:2E89  50					push	ax
020A:2E8A  54					push	sp
020A:2E8B  3D 5024				cmp	ax,5024h
020A:2E8E  24 47				and	al,47h			; 'G'
020A:2E90  00 53 45				add	[bp+di+45h],dl
020A:2E93  53					push	bx
020A:2E94  53					push	bx
020A:2E95  49					dec	cx
020A:2E96  4F					dec	di
020A:2E97  4E					dec	si
020A:2E98  4E					dec	si
020A:2E99  41					inc	cx
020A:2E9A  4D					dec	bp
020A:2E9B  45					inc	bp
020A:2E9C  3D 6F43				cmp	ax,6F43h
020A:2E9F  6E					db	6Eh
020A:2EA0  73 6F				jnc	$+71h			; Jump if carry=0
020A:2EA2  6C					db	6Ch
020A:2EA3  65					db	65h
020A:2EA4  00 53 59				add	[bp+di+59h],dl
020A:2EA7  53					push	bx
020A:2EA8  54					push	sp
020A:2EA9  45					inc	bp
020A:2EAA  4D					dec	bp
020A:2EAB  44					inc	sp
020A:2EAC  52					push	dx
020A:2EAD  49					dec	cx
020A:2EAE  56					push	si
020A:2EAF  45					inc	bp
020A:2EB0  3D 3A43				cmp	ax,3A43h
020A:2EB3  5300			data_397	dw	5300h
020A:2EB5  5359			data_398	dw	5359h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 86

020A:2EB7  54			data_399	db	54h
020A:2EB8  45			data_400	db	45h
020A:2EB9  4D					dec	bp
020A:2EBA  52			data_401	db	52h
020A:2EBB  4F					dec	di
020A:2EBC  4F			data_402	db	4Fh
020A:2EBD  54			data_403	db	54h
020A:2EBE  3D 3A43				cmp	ax,3A43h
020A:2EC1  5C					pop	sp
020A:2EC2  57					push	di
020A:2EC3  49					dec	cx
020A:2EC4  444E			data_405	dw	444Eh
020A:2EC6  574F			data_406	dw	574Fh
020A:2EC8  53					push	bx
020A:2EC9  00 54 45				add	[si+45h],dl
020A:2ECC  4D					dec	bp
020A:2ECD  50					push	ax
020A:2ECE  3D 3A43				cmp	ax,3A43h
020A:2ED1  5C					pop	sp
020A:2ED2  57					push	di
020A:2ED3  49					dec	cx
020A:2ED4  444E			data_408	dw	444Eh
020A:2ED6  4F					dec	di
020A:2ED7  57					push	di
020A:2ED8  5C53			data_409	dw	5C53h
020A:2EDA  54					push	sp
020A:2EDB  45					inc	bp
020A:2EDC  4D					dec	bp
020A:2EDD  50					push	ax
020A:2EDE  00 54 4D				add	[si+4Dh],dl
020A:2EE1  50					push	ax
020A:2EE2  3D 3A43				cmp	ax,3A43h
020A:2EE5  5C					pop	sp
020A:2EE6  57					push	di
020A:2EE7  49					dec	cx
020A:2EE8  444E			data_412	dw	444Eh
020A:2EEA  4F					dec	di
020A:2EEB  57					push	di
020A:2EEC  53					push	bx
020A:2EED  5C					pop	sp
020A:2EEE  54					push	sp
020A:2EEF  45					inc	bp
020A:2EF0  4D					dec	bp
020A:2EF1  50					push	ax
020A:2EF2  5500			data_413	dw	5500h
020A:2EF4  4553			data_414	dw	4553h
020A:2EF6  52					push	dx
020A:2EF7  44					inc	sp
020A:2EF8  4F					dec	di
020A:2EF9  4D					dec	bp
020A:2EFA  41					inc	cx
020A:2EFB  49					dec	cx
020A:2EFC  4E					dec	si
020A:2EFD  3D 4F4C				cmp	ax,4F4Ch
020A:2F00  41					inc	cx
020A:2F01  44					inc	sp
020A:2F02  45					inc	bp
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 87

020A:2F03  41					inc	cx
020A:2F04  44					inc	sp
020A:2F05  44					inc	sp
020A:2F06  00 55 53				add	[di+53h],dl
020A:2F09  45					inc	bp
020A:2F0A  52					push	dx
020A:2F0B  4E					dec	si
020A:2F0C  41					inc	cx
020A:2F0D  4D					dec	bp
020A:2F0E  45					inc	bp
020A:2F0F  3D 6F4C				cmp	ax,6F4Ch
020A:2F12  61					db	61h
020A:2F13  44					inc	sp
020A:2F14  65					db	65h
020A:2F15  65					db	65h
020A:2F16  61					db	61h
020A:2F17  64					db	64h
020A:2F18  64					db	64h
020A:2F19  00 55 53				add	[di+53h],dl
020A:2F1C  45					inc	bp
020A:2F1D  52					push	dx
020A:2F1E  50					push	ax
020A:2F1F  52					push	dx
020A:2F20  4F					dec	di
020A:2F21			loc_315:
020A:2F21  46					inc	si
020A:2F22  49					dec	cx
020A:2F23  4C					dec	sp
020A:2F24  45					inc	bp
020A:2F25  3D 3A43				cmp	ax,3A43h
020A:2F28  5C					pop	sp
020A:2F29  44					inc	sp
020A:2F2A  4F					dec	di
020A:2F2B  43					inc	bx
020A:2F2C  55					push	bp
  
020A:2F2D			locloop_316:
020A:2F2D  4D					dec	bp
020A:2F2E  45					inc	bp
020A:2F2F  7E 31				jle	$+33h			; Jump if < or =
020A:2F31  5C					pop	sp
020A:2F32  4C					dec	sp
020A:2F33  4F					dec	di
020A:2F34  41					inc	cx
020A:2F35  44					inc	sp
020A:2F36  45					inc	bp
020A:2F37  45					inc	bp
020A:2F38  7E 31				jle	$+33h			; Jump if < or =
020A:2F3A  00 42 4C				add	[bp+si+4Ch],al
020A:2F3D  41					inc	cx
020A:2F3E  53					push	bx
020A:2F3F  54					push	sp
020A:2F40  45					inc	bp
020A:2F41  52					push	dx
020A:2F42  3D 3241				cmp	ax,3241h
020A:2F45  32 30				xor	dh,[bx+si]
020A:2F47  20 49 35				and	[bx+di+35h],cl
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 88

020A:2F4A  20 44 31				and	[si+31h],al
020A:2F4D  20 50 33				and	[bx+si+33h],dl
020A:2F50  33 30				xor	si,[bx+si]
020A:2F52  20 54 33				and	[si+33h],dl
020A:2F55  00 00				add	[bx+si],al
  
020A:2F57			locloop_317:
020A:2F57  AD					lodsw				; String [si] to ax
020A:2F58  A5					movsw				; Mov [si] to es:[di]
  
020A:2F59			locloop_318:
020A:2F59  20 AF A4AE				and	byte ptr data_597[bx],ch	; (020A:A4AE=53h)
020A:2F5D  A4					movsb				; Mov [si] to es:[di]
020A:2F5E  A5					movsw				; Mov [si] to es:[di]
020A:2F5F  E0 A6		;*		loopnz	locloop_314		;*Loop if zf=0, cx>0
  
020A:2F5F  E0 A6				db	0E0h,0A6h
020A:2F61  A8 A2				test	al,0A2h
020A:2F63  A0 E2A5				mov	al,byte ptr ds:[0E2A5h]	; (020A:E2A5=0E9h)
020A:2F66  E1 EF				loopz	locloop_317		; Loop if zf=1, cx>0
  
020A:2F68  20 E1				and	cl,ah
020A:2F6A  A5					movsw				; Mov [si] to es:[di]
020A:2F6B  E2 EC				loop	locloop_318		; Loop if cx > 0
  
020A:2F6D  EE					out	dx,al			; port 0, DMA-1 bas&add ch 0
020A:2F6E  29 92 A5E0				sub	[bp+si-5A20h],dx
020A:2F72  A1 A5E3				mov	ax,data_601		; (020A:A5E3=8B90h)
020A:2F75  AC					lodsb				; String [si] to al
020A:2F76  EB A9				jmp	short loc_315		; (2F21)
020A:2F78  20 AA ACAE				and	[bp+si-5352h],ch
020A:2F7C  AF					scasw				; Scan es:[di] for ax
020A:2F7D  AE					scasb				; Scan es:[di] for al
020A:2F7E  AD					lodsw				; String [si] to ax
020A:2F7F  A5					movsw				; Mov [si] to es:[di]
020A:2F80  AD					lodsw				; String [si] to ax
020A:2F81  E2 20				loop	locloop_321		; Loop if cx > 0
  
020A:2F83  E1 A8				loopz	locloop_316		; Loop if zf=1, cx>0
  
020A:2F85  E1 E2		;*		loopz	locloop_319		;*Loop if zf=1, cx>0
  
020A:2F85  E1 E2				db	0E1h,0E2h
020A:2F87  A5					movsw				; Mov [si] to es:[di]
020A:2F88  AC					lodsb				; String [si] to al
020A:2F89  EB 20				jmp	short loc_322		; (2FAB)
020A:2F8B  AD					lodsw				; String [si] to ax
020A:2F8C  A5					movsw				; Mov [si] to es:[di]
020A:2F8D  20 E3				and	bl,ah
020A:2F8F  E1 E2		;*		loopz	locloop_320		;*Loop if zf=1, cx>0
  
020A:2F8F  E1 E2				db	0E1h,0E2h
020A:2F91  A0 AEAD				mov	al,data_627		; (020A:AEAD=0Dh)
020A:2F94  A2 A5AB				mov	data_599,al		; (020A:A5AB=0C6h)
020A:2F97  AD					lodsw				; String [si] to ax
020A:2F98  9D					popf				; Pop flags
020A:2F99  0C B2				or	al,0B2h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 89

020A:2F9B  0C C1				or	al,0C1h
020A:2F9D  0C D0				or	al,0D0h
020A:2F9F  0C ED				or	al,0EDh
020A:2FA1  0C FA				or	al,0FAh
  
020A:2FA3			locloop_321:
020A:2FA3  0C 12				or	al,12h
020A:2FA5  0D 0D35				or	ax,0D35h
020A:2FA8  49					dec	cx
020A:2FA9  0D 0D69				or	ax,0D69h
020A:2FAC  91					xchg	ax,cx
020A:2FAD  0D 0DA5				or	ax,0DA5h
020A:2FB0  C3					retn
020A:2FB1  0D 0000				or	ax,0
020A:2FB4  D7					xlat				; al=[al+[bx]] table
020A:2FB5  0D 0DEE				or	ax,0DEEh
020A:2FB8  0E					push	cs
020A:2FB9  0E					push	cs
020A:2FBA  20 0E 090C				and	byte ptr ds:[90Ch],cl	; (020A:090C=0Eh)
020A:2FBE  24 09				and	al,9
020A:2FC0  3C 09				cmp	al,9
020A:2FC2  4B					dec	bx
020A:2FC3  09 6C 09				or	[si+9],bp
020A:2FC6  7C 09				jl	loc_323			; Jump if <
020A:2FC8  A8 09				test	al,9
020A:2FCA  B6 09				mov	dh,9
020A:2FCC  D0 09				ror	byte ptr [bx+di],1	; Rotate
020A:2FCE  E1 09				loopz	locloop_324		; Loop if zf=1, cx>0
  
020A:2FD0  F7					db	0F7h
020A:2FD1			loc_323:
020A:2FD1  09 09				or	[bx+di],cx
020A:2FD3  0A 1B				or	bl,[bp+di]
020A:2FD5  0A 2E 530A				or	ch,data_531		; (020A:530A=26h)
  
020A:2FD9			locloop_324:
020A:2FD9  0A 68 0A				or	ch,[bx+si+0Ah]
020A:2FDC  81 0A 0AA9				or	word ptr [bp+si],0AA9h
020A:2FE0  C3					retn
020A:2FE1  0A E2				or	ah,dl
020A:2FE3  0A 00				or	al,[bx+si]
020A:2FE5  0B 00				or	ax,[bx+si]
020A:2FE7  004F[00]				db	79 dup (0)
020A:3036  32 0E 0000				xor	cl,byte ptr ds:[0]	; (020A:0000=28h)
020A:303A  42					inc	dx
020A:303B  0E					push	cs
020A:303C  66					db	66h
020A:303D  0E					push	cs
020A:303E  8F					db	8Fh
020A:303F  0E					push	cs
020A:3040  4D					dec	bp
020A:3041  C4 06 0036				les	ax,dword ptr data_92+1	; (020A:0036=8) Load 32 bit ptr
020A:3045  0E					push	cs
020A:3046  F9			data_416	db	0F9h
020A:3047  0E					push	cs
020A:3048  0E					push	cs
020A:3049  0F					pop	cs			; Dangerous 8088 only
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 90

020A:304A  2E					db	2Eh
020A:304B  0F					pop	cs			; Dangerous 8088 only
020A:304C  00 00				add	[bx+si],al
020A:304E  00 00				add	[bx+si],al
020A:3050  43 4F 4D 53 50 45			db	'COMSPEC=C:\WINDOWS\SYSTEM32\COMM'
020A:3056  43 3D 43 3A 5C 57
020A:305C  49 4E 44 4F 57 53
020A:3062  5C 53 59 53 54 45
020A:3068  4D 33 32 5C 43 4F
020A:306E  4D 4D
020A:3070  41 4E 44 2E 43 4F			db	'AND.COM', 0
020A:3076  4D 00
020A:3078  41 4C 4C 55 53 45			db	'ALLUSERSPROFILE=C:\DOCUME~1\ALLU'
020A:307E  52 53 50 52 4F 46
020A:3084  49 4C 45 3D 43 3A
020A:308A  5C 44 4F 43 55 4D
020A:3090  45 7E 31 5C 41 4C
020A:3096  4C 55
020A:3098  53 45 7E 31 00			db	'SE~1', 0
020A:309D  41 50 50 44 41 54			db	'APPDATA=C:\DOCUME~1\LOADEE~1\APP'
020A:30A3  41 3D 43 3A 5C 44
020A:30A9  4F 43 55 4D 45 7E
020A:30AF  31 5C 4C 4F 41 44
020A:30B5  45 45 7E 31 5C 41
020A:30BB  50 50
020A:30BD  4C 49 43 7E 31 00			db	'LIC~1', 0
020A:30C3  43 4C 49 45 4E 54			db	'CLIENTNAME=Console', 0
020A:30C9  4E 41 4D 45 3D 43
020A:30CF  6F 6E 73 6F 6C 65
020A:30D5  00
020A:30D6  43 4F 4D 4D 4F 4E			db	'COMMONPROGRAMFILES=C:\PROGRA~1\C'
020A:30DC  50 52 4F 47 52 41
020A:30E2  4D 46 49 4C 45 53
020A:30E8  3D 43 3A 5C 50 52
020A:30EE  4F 47 52 41 7E 31
020A:30F4  5C 43
020A:30F6  4F 4D 4D 4F 4E 7E			db	'OMMON~1', 0
020A:30FC  31 00
020A:30FE  43 4F 4D 50 55 54			db	'COMPUTERNAME=LOADEADD', 0
020A:3104  45 52 4E 41 4D 45
020A:310A  3D 4C 4F 41 44 45
020A:3110  41 44 44 00
020A:3114  46 50 5F 4E 4F 5F			db	'FP_NO_HOST_CHECK=NO', 0
020A:311A  48 4F 53 54 5F 43
020A:3120  48 45 43 4B 3D 4E
020A:3126  4F 00
020A:3128  48 4F 4D 45 44 52			db	'HOMEDRIVE=C:', 0
020A:312E  49 56 45 3D 43 3A
020A:3134  00
020A:3135  48 4F 4D 45 50 41			db	'HOMEPATH=\Documents and Settings'
020A:313B  54 48 3D 5C 44 6F
020A:3141  63 75 6D 65 6E 74
020A:3147  73 20 61 6E 64 20
020A:314D  53 65 74 74 69 6E
020A:3153  67 73
020A:3155  5C 4C 6F 61 44 65			db	'\LoaDeeadd', 0
020A:315B  65 61 64 64 00
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 91

020A:3160  4C 4F 47 4F 4E 53			db	'LOGONSERVER=\\LOADEADD', 0
020A:3166  45 52 56 45 52 3D
020A:316C  5C 5C 4C 4F 41 44
020A:3172  45 41 44 44 00
020A:3177  4E 55 4D 42 45 52			db	'NUMBER_'
020A:317D  5F
020A:317E  464F			data_418	dw	464Fh
020A:3180  5F					pop	di
020A:3181  50					push	ax
020A:3182  52					push	dx
020A:3183  4F					dec	di
020A:3184  43					inc	bx
020A:3185  45					inc	bp
020A:3186  53					push	bx
020A:3187  53					push	bx
020A:3188  4F					dec	di
020A:3189  52					push	dx
020A:318A  53					push	bx
020A:318B  3D 0034				cmp	ax,34h
020A:318E  4F					dec	di
020A:318F  53					push	bx
020A:3190  3D 6957				cmp	ax,6957h
020A:3193  6E					db	6Eh
020A:3194  64					db	64h
020A:3195  6F					db	6Fh
020A:3196  77 73				ja	$+75h			; Jump if above
020A:3198  5F					pop	di
020A:3199  4E					dec	si
020A:319A  54					push	sp
020A:319B  00 50 41				add	[bx+si+41h],dl
020A:319E  54					push	sp
020A:319F  48					dec	ax
020A:31A0  3D 3A43				cmp	ax,3A43h
020A:31A3  5C					pop	sp
020A:31A4  57					push	di
020A:31A5  49					dec	cx
020A:31A6  4E					dec	si
020A:31A7  44					inc	sp
020A:31A8  4F					dec	di
020A:31A9  57					push	di
020A:31AA  53					push	bx
020A:31AB  5C					pop	sp
020A:31AC  73 79				jnc	$+7Bh			; Jump if carry=0
020A:31AE  73 74				jnc	$+76h			; Jump if carry=0
020A:31B0  65					db	65h
020A:31B1  6D					db	6Dh
020A:31B2  33 32				xor	si,[bp+si]
020A:31B4  3B 43 3A				cmp	ax,[bp+di+3Ah]
020A:31B7  5C					pop	sp
020A:31B8  57					push	di
020A:31B9  49					dec	cx
020A:31BA  4E					dec	si
020A:31BB  44					inc	sp
020A:31BC  4F					dec	di
020A:31BD  57					push	di
020A:31BE  53					push	bx
020A:31BF  3B 43 3A				cmp	ax,[bp+di+3Ah]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 92

020A:31C2  5C					pop	sp
020A:31C3  57					push	di
020A:31C4  49					dec	cx
020A:31C5  4E					dec	si
020A:31C6  44					inc	sp
020A:31C7  4F					dec	di
020A:31C8  57					push	di
020A:31C9  53					push	bx
020A:31CA  5C					pop	sp
020A:31CB  53					push	bx
020A:31CC  79 73				jns	$+75h			; Jump if not sign
020A:31CE  74 65				jz	$+67h			; Jump if zero
020A:31D0  6D					db	6Dh
020A:31D1  33 32				xor	si,[bp+si]
020A:31D3  5C					pop	sp
020A:31D4  57					push	di
020A:31D5  62					db	62h
020A:31D6  65					db	65h
020A:31D7  6D					db	6Dh
020A:31D8  00 50 41				add	[bx+si+41h],dl
020A:31DB  54					push	sp
020A:31DC  48					dec	ax
020A:31DD  45					inc	bp
020A:31DE  58					pop	ax
020A:31DF  54					push	sp
020A:31E0  3D 432E				cmp	ax,432Eh
020A:31E3  4F					dec	di
020A:31E4  4D					dec	bp
020A:31E5  3B 2E 5845				cmp	bp,word ptr ds:[5845h]	; (020A:5845=0E8BFh)
020A:31E9  45					inc	bp
020A:31EA  3B 2E 4142				cmp	bp,word ptr ds:[4142h]	; (020A:4142=40B8h)
020A:31EE  54					push	sp
020A:31EF  3B 2E 4D43				cmp	bp,word ptr ds:[4D43h]	; (020A:4D43=0D6E8h)
020A:31F3  44					inc	sp
020A:31F4  3B 2E 4256				cmp	bp,word ptr ds:[4256h]	; (020A:4256=7584h)
020A:31F8  53					push	bx
020A:31F9  3B 2E 4256				cmp	bp,word ptr ds:[4256h]	; (020A:4256=7584h)
020A:31FD  45					inc	bp
020A:31FE  3B 2E 534A				cmp	bp,word ptr ds:[534Ah]	; (020A:534A=9BE8h)
020A:3202  3B 2E 534A				cmp	bp,word ptr ds:[534Ah]	; (020A:534A=9BE8h)
020A:3206  45					inc	bp
020A:3207  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020A:5357=5AE8h)
020A:320B  46					inc	si
020A:320C  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020A:5357=5AE8h)
020A:3210  48					dec	ax
020A:3211  00 50 52				add	[bx+si+52h],dl
020A:3214  4F					dec	di
020A:3215  43					inc	bx
020A:3216  45					inc	bp
020A:3217  53					push	bx
020A:3218  53					push	bx
020A:3219  4F					dec	di
020A:321A  52					push	dx
020A:321B  5F					pop	di
020A:321C  41					inc	cx
020A:321D  52					push	dx
020A:321E  43					inc	bx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 93

020A:321F  48					dec	ax
020A:3220  49					dec	cx
020A:3221  54					push	sp
020A:3222  45					inc	bp
020A:3223  43					inc	bx
020A:3224  54					push	sp
020A:3225  55					push	bp
020A:3226  52					push	dx
020A:3227  45					inc	bp
020A:3228  3D 3878				cmp	ax,3878h
020A:322B  36: 00 50 52				add	ss:[bx+si+52h],dl
020A:322F  4F					dec	di
020A:3230  43					inc	bx
020A:3231  45					inc	bp
020A:3232  53					push	bx
020A:3233  53					push	bx
020A:3234  4F					dec	di
020A:3235  52					push	dx
020A:3236  5F					pop	di
020A:3237  49					dec	cx
020A:3238  44					inc	sp
020A:3239  45					inc	bp
020A:323A  4E					dec	si
020A:323B  54					push	sp
020A:323C  49					dec	cx
020A:323D  46					inc	si
020A:323E  49					dec	cx
020A:323F  45					inc	bp
020A:3240  52					push	dx
020A:3241  3D 3878				cmp	ax,3878h
020A:3244  36					db	36h
020A:3245  20 46 61				and	[bp+61h],al
020A:3248  6D					db	6Dh
020A:3249  69					db	69h
020A:324A  6C					db	6Ch
020A:324B  79 20				jns	$+22h			; Jump if not sign
020A:324D  36: 20 4D 6F				and	ss:[di+6Fh],cl
020A:3251  64					db	64h
020A:3252  65					db	65h
020A:3253  6C					db	6Ch
020A:3254  20 31				and	[bx+di],dh
020A:3256  34 30				xor	al,30h			; '0'
020A:3258  20 53 74				and	[bp+di+74h],dl
020A:325B  65					db	65h
020A:325C  70 70				jo	$+72h			; Jump if overflow=1
020A:325E  69					db	69h
020A:325F  6E					db	6Eh
020A:3260  67					db	67h
020A:3261  20 31				and	[bx+di],dh
020A:3263  2C 20				sub	al,20h			; ' '
020A:3265  47					inc	di
020A:3266  65					db	65h
020A:3267  6E					db	6Eh
020A:3268  75 69				jnz	$+6Bh			; Jump if not zero
020A:326A  6E					db	6Eh
020A:326B  65					db	65h
020A:326C  49					dec	cx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 94

020A:326D  6E					db	6Eh
020A:326E  74 65				jz	$+67h			; Jump if zero
020A:3270  6C					db	6Ch
020A:3271  00 50 52				add	[bx+si+52h],dl
020A:3274  4F					dec	di
020A:3275  43					inc	bx
020A:3276  45					inc	bp
020A:3277  53					push	bx
020A:3278  53					push	bx
020A:3279  4F					dec	di
020A:327A  52					push	dx
020A:327B  5F					pop	di
020A:327C  4C					dec	sp
020A:327D  45					inc	bp
020A:327E  56					push	si
020A:327F  45					inc	bp
020A:3280  4C					dec	sp
020A:3281  3D 0036				cmp	ax,36h
020A:3284  50					push	ax
020A:3285  52					push	dx
020A:3286  4F					dec	di
020A:3287  43					inc	bx
020A:3288  45					inc	bp
020A:3289  53					push	bx
020A:328A  53					push	bx
020A:328B  4F					dec	di
020A:328C  52					push	dx
020A:328D  5F					pop	di
020A:328E  52					push	dx
020A:328F  45					inc	bp
020A:3290  56					push	si
020A:3291  49					dec	cx
020A:3292  53					push	bx
020A:3293  49					dec	cx
020A:3294  4F					dec	di
020A:3295  4E					dec	si
020A:3296  3D 6338				cmp	ax,6338h
020A:3299  30 31				xor	[bx+di],dh
020A:329B  00 50 52				add	[bx+si+52h],dl
020A:329E  4F					dec	di
020A:329F  47					inc	di
020A:32A0  52					push	dx
020A:32A1  41					inc	cx
020A:32A2  4D					dec	bp
020A:32A3  46					inc	si
020A:32A4  49					dec	cx
020A:32A5  4C					dec	sp
020A:32A6  45					inc	bp
020A:32A7  53					push	bx
020A:32A8  3D 3A43				cmp	ax,3A43h
020A:32AB  5C					pop	sp
020A:32AC  50					push	ax
020A:32AD  52					push	dx
020A:32AE  4F					dec	di
020A:32AF  47					inc	di
020A:32B0  52					push	dx
020A:32B1  41					inc	cx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 95

020A:32B2  7E 31				jle	$+33h			; Jump if < or =
020A:32B4  00 50 52				add	[bx+si+52h],dl
020A:32B7  4F					dec	di
020A:32B8  4D					dec	bp
020A:32B9  50					push	ax
020A:32BA  54					push	sp
020A:32BB  3D 5024				cmp	ax,5024h
020A:32BE  24 47				and	al,47h			; 'G'
020A:32C0  00 53 45				add	[bp+di+45h],dl
020A:32C3  53					push	bx
020A:32C4  53					push	bx
020A:32C5  49					dec	cx
020A:32C6  4F					dec	di
020A:32C7  4E					dec	si
020A:32C8  4E					dec	si
020A:32C9  41					inc	cx
020A:32CA  4D					dec	bp
020A:32CB  45					inc	bp
020A:32CC  3D 6F43				cmp	ax,6F43h
020A:32CF  6E					db	6Eh
020A:32D0  73 6F				jnc	$+71h			; Jump if carry=0
020A:32D2  6C					db	6Ch
020A:32D3  65					db	65h
020A:32D4  00 53 59				add	[bp+di+59h],dl
020A:32D7  53					push	bx
020A:32D8  54					push	sp
020A:32D9  45					inc	bp
020A:32DA  4D					dec	bp
020A:32DB  44					inc	sp
020A:32DC  52					push	dx
020A:32DD  49					dec	cx
020A:32DE  56					push	si
020A:32DF  45					inc	bp
020A:32E0  3D 3A43				cmp	ax,3A43h
020A:32E3  00 53 59				add	[bp+di+59h],dl
020A:32E6  53					push	bx
020A:32E7  54					push	sp
020A:32E8  45					inc	bp
020A:32E9  4D					dec	bp
020A:32EA  52					push	dx
020A:32EB  4F					dec	di
020A:32EC  4F					dec	di
020A:32ED  54					push	sp
020A:32EE  3D 3A43				cmp	ax,3A43h
020A:32F1  5C					pop	sp
020A:32F2  57					push	di
020A:32F3  49					dec	cx
020A:32F4  4E					dec	si
020A:32F5  44					inc	sp
020A:32F6  4F					dec	di
020A:32F7  57					push	di
020A:32F8  53					push	bx
020A:32F9  00 54 45				add	[si+45h],dl
020A:32FC  4D					dec	bp
020A:32FD  50					push	ax
020A:32FE  3D 3A43				cmp	ax,3A43h
020A:3301  5C					pop	sp
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 96

020A:3302  57					push	di
020A:3303  49					dec	cx
020A:3304  4E					dec	si
020A:3305  44					inc	sp
020A:3306  4F					dec	di
020A:3307  57					push	di
020A:3308  53					push	bx
020A:3309  5C					pop	sp
020A:330A  54					push	sp
020A:330B  45					inc	bp
020A:330C  4D					dec	bp
020A:330D  50					push	ax
020A:330E  00 54 4D				add	[si+4Dh],dl
020A:3311  50					push	ax
020A:3312  3D 3A43				cmp	ax,3A43h
020A:3315  5C					pop	sp
020A:3316  57					push	di
020A:3317  49					dec	cx
020A:3318  4E					dec	si
020A:3319  44					inc	sp
020A:331A  4F					dec	di
020A:331B  57					push	di
020A:331C  53					push	bx
020A:331D  5C					pop	sp
020A:331E  54					push	sp
020A:331F  45					inc	bp
020A:3320  4D					dec	bp
020A:3321  50					push	ax
020A:3322  00 55 53				add	[di+53h],dl
020A:3325  45					inc	bp
020A:3326  52					push	dx
020A:3327  44					inc	sp
020A:3328  4F					dec	di
020A:3329  4D					dec	bp
020A:332A  41					inc	cx
020A:332B  49					dec	cx
020A:332C  4E					dec	si
020A:332D  3D 4F4C				cmp	ax,4F4Ch
020A:3330  41					inc	cx
020A:3331  44					inc	sp
020A:3332  45					inc	bp
020A:3333  41					inc	cx
020A:3334  44					inc	sp
020A:3335  44					inc	sp
020A:3336  00 55 53				add	[di+53h],dl
020A:3339  45					inc	bp
020A:333A  52					push	dx
020A:333B  4E					dec	si
020A:333C  41					inc	cx
020A:333D  4D					dec	bp
020A:333E  45					inc	bp
020A:333F  3D 6F4C				cmp	ax,6F4Ch
020A:3342  61					db	61h
020A:3343  44					inc	sp
020A:3344  65					db	65h
020A:3345  65					db	65h
020A:3346  61					db	61h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 97

020A:3347  64					db	64h
020A:3348  64					db	64h
020A:3349  00 55 53				add	[di+53h],dl
020A:334C  45					inc	bp
020A:334D  52					push	dx
020A:334E  50					push	ax
020A:334F  52					push	dx
020A:3350  4F					dec	di
020A:3351  46					inc	si
020A:3352  49					dec	cx
020A:3353  4C					dec	sp
020A:3354  45					inc	bp
020A:3355  3D 3A43				cmp	ax,3A43h
020A:3358  5C					pop	sp
020A:3359  44					inc	sp
020A:335A  4F					dec	di
020A:335B  43					inc	bx
020A:335C  55					push	bp
020A:335D  4D					dec	bp
020A:335E  45					inc	bp
020A:335F  7E 31				jle	$+33h			; Jump if < or =
020A:3361  5C					pop	sp
020A:3362  4C					dec	sp
020A:3363  4F					dec	di
020A:3364  41					inc	cx
020A:3365  44					inc	sp
020A:3366  45					inc	bp
020A:3367  45					inc	bp
020A:3368  7E 31				jle	$+33h			; Jump if < or =
020A:336A  00 42 4C				add	[bp+si+4Ch],al
020A:336D  41					inc	cx
020A:336E  53					push	bx
020A:336F  54					push	sp
020A:3370  45					inc	bp
020A:3371  52					push	dx
020A:3372  3D 3241				cmp	ax,3241h
020A:3375  32 30				xor	dh,[bx+si]
020A:3377  20 49 35				and	[bx+di+35h],cl
020A:337A  20 44 31				and	[si+31h],al
020A:337D  20 50 33				and	[bx+si+33h],dl
020A:3380  33 30				xor	si,[bx+si]
020A:3382  20 54 33				and	[si+33h],dl
020A:3385  00 00				add	[bx+si],al
020A:3387  01 00				add	[bx+si],ax
020A:3389  43 3A 5C 44 4F 43			db	'C:\DOCUME~1\LOADEE~1\0016~1\SR.E'
020A:338F  55 4D 45 7E 31 5C
020A:3395  4C 4F 41 44 45 45
020A:339B  7E 31 5C 30 30 31
020A:33A1  36 7E 31 5C 53 52
020A:33A7  2E 45
020A:33A9  58 45 00				db	'XE', 0
020A:33AC  53 50				db	'SP'
020A:33AE  B4 51				mov	ah,51h			; 'Q'
020A:33B0  4D					dec	bp
020A:33B1  46					inc	si
020A:33B2  05 017D				add	ax,17Dh
020A:33B5  8E DB				mov	ds,bx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 98

020A:33B7  C5 4B 42				lds	cx,dword ptr [bp+di+42h]	; Load 32 bit ptr
020A:33BA  31 36 5800				xor	word ptr ds:[5800h],si	; (0008:5800=3A01h)
020A:33BE  5B					pop	bx
020A:33BF  1F					pop	ds
020A:33C0  CD 20				int	20h			; Program Terminate
020A:33C2  C3					retn
020A:33C3  06					push	es
020A:33C4  00 9A FEF0				add	[bp+si-110h],bl
020A:33C8  1D 25F0				sbb	ax,25F0h
020A:33CB  06					push	es
020A:33CC  B4 95				mov	ah,95h
020A:33CE  4B					dec	bx
020A:33CF  01 0E 5604				add	data_533,cx		; (020A:5604=41EAh)
020A:33D3  01 0E 0E04				add	data_193,cx		; (020A:0E04=0DFE8h)
020A:33D7  04 01				add	al,1
020A:33D9  0013[FF]				db	19 dup (0FFh)
020A:33EC  0F					pop	cs			; Dangerous 8088 only
020A:33ED  05 FFE6				add	ax,0FFE6h
020A:33F0  46					inc	si
020A:33F1  05 0014				add	ax,14h
020A:33F4  18 00				sbb	[bx+si],al
020A:33F6  46					inc	si
020A:33F7  05 FFFF				add	ax,0FFFFh
020A:33FA  FF					db	0FFh
020A:33FB  FF 00				inc	word ptr [bx+si]
020A:33FD  00 00				add	[bx+si],al
020A:33FF  00 05				add	[di],al
020A:3401  000F[00]				db	15 dup (0)
020A:3410  CD 21				int	21h			; DOS Services  ah=function 95h
020A:3412  CB					retf				; Return far
020A:3413  0009[00]				db	9 dup (0)
020A:341C  8B 05				mov	ax,[di]
020A:341E  0A 02				or	al,[bp+si]
020A:3420  0E					push	cs
020A:3421  0C 0A				or	al,0Ah
020A:3423  02 14				add	dl,[si]
020A:3425  0C 0A				or	al,0Ah
020A:3427  02 00				add	al,[bx+si]
020A:3429  00 00				add	[bx+si],al
020A:342B  00 AD 0A06				add	data_166[di],ch		; (020A:0A06=74h)
020A:342F  02 AD 0A06				add	ch,data_166[di]		; (020A:0A06=74h)
020A:3433  02 53 FF				add	dl,[bp+di-1]
020A:3436  00 F0				add	al,dh
020A:3438  0008[00]				db	8 dup (0)
020A:3440  28 20 72 75 2C 38			db	'( ru,866,C:\WINDOWS\system32\KEY'
020A:3446  36 36 2C 43 3A 5C
020A:344C  57 49 4E 44 4F 57
020A:3452  53 5C 73 79 73 74
020A:3458  65 6D 33 32 5C 4B
020A:345E  45 59
020A:3460  42 4F 41 52 44 2E			db	'BOARD.SYS', 0Dh
020A:3466  53 59 53 0D
020A:346A  0056[00]				db	86 dup (0)
020A:34C0  E9 2210				jmp	loc_778			; (56D3)
020A:34C3  000E[00]				db	14 dup (0)
020A:34D1  02 00				add	al,[bx+si]
020A:34D3  00 10				add	[bx+si],dl
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 99

020A:34D5  80 00 00				add	byte ptr [bx+si],0
020A:34D8  00 00				add	[bx+si],al
020A:34DA  80 17 00				adc	byte ptr [bx],0
020A:34DD  18 00				sbb	[bx+si],al
020A:34DF  97					xchg	ax,di
020A:34E0  00 96 0000				add	[bp+0],dl
020A:34E4  00 29				add	[bx+di],ch
020A:34E6  29 01				sub	[bx+di],ax
020A:34E8  00 5A 02				add	[bp+si+2],bl
020A:34EB  56					push	si
020A:34EC  04 98				add	al,98h
020A:34EE  02 C9				add	cl,cl
020A:34F0  02 DE				add	bl,dh
020A:34F2  02 B2 8903				add	dh,[bp+si-76FDh]
020A:34F6  04 17				add	al,17h
020A:34F8  02 EC				add	ch,ah
020A:34FA  01 1E 0C04				add	word ptr ds:[0C04h],bx	; (020A:0C04=9726h)
020A:34FE  04 D4				add	al,0D4h
020A:3500  03 F0				add	si,ax
020A:3502  03 E9				add	bp,cx
020A:3504  01 E9				add	cx,bp
020A:3506  01 E9				add	cx,bp
020A:3508  01 2E 06F6				add	word ptr ds:[6F6h],bp	; (020A:06F6=75C0h)
020A:350C  D5					db	0D5h
020A:350D  0E					push	cs
020A:350E  01 75 02				add	[di+2],si
020A:3511  F8					clc				; Clear carry flag
020A:3512  C3					retn
020A:3513  1E					push	ds
020A:3514  06					push	es
020A:3515  50					push	ax
020A:3516  53					push	bx
020A:3517  0E					push	cs
020A:3518  1F					pop	ds
020A:3519  BB 0040				mov	bx,40h
020A:351C  8E C3				mov	es,bx
020A:351E  80 3E 06EF FF			cmp	byte ptr ds:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3523  74 03				je	loc_325			; Jump if equal
020A:3525  E9 00EC				jmp	loc_340			; (3614)
020A:3528			loc_325:
020A:3528  26: F6 06 0017 03			test	byte ptr es:[17h],3	; (0040:0017=0)
020A:352E  75 07				jnz	loc_326			; Jump if not zero
020A:3530  80 26 0115 7F			and	byte ptr data_117+1,7Fh	; (020A:0115=0Ch)
020A:3535  EB 05				jmp	short loc_327		; (353C)
020A:3537			loc_326:
020A:3537  80 0E 0115 80			or	byte ptr data_117+1,80h	; (020A:0115=0Ch)
020A:353C			loc_327:
020A:353C  26: F6 06 0017 04			test	byte ptr es:[17h],4	; (0040:0017=0)
020A:3542  75 0F				jnz	loc_328			; Jump if not zero
020A:3544  26: F6 06 0096 04			test	byte ptr es:[96h],4	; (0040:0096=10h)
020A:354A  75 07				jnz	loc_328			; Jump if not zero
020A:354C  80 26 0115 BF			and	byte ptr data_117+1,0BFh	; (020A:0115=0Ch)
020A:3551  EB 05				jmp	short loc_329		; (3558)
020A:3553			loc_328:
020A:3553  80 0E 0115 40			or	byte ptr data_117+1,40h	; (020A:0115=0Ch) '@'
020A:3558			loc_329:
020A:3558  26: F6 06 0017 08			test	byte ptr es:[17h],8	; (0040:0017=0)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 100

020A:355E  75 0F				jnz	loc_330			; Jump if not zero
020A:3560  26: F6 06 0096 08			test	byte ptr es:[96h],8	; (0040:0096=10h)
020A:3566  75 07				jnz	loc_330			; Jump if not zero
020A:3568  80 26 0115 DF			and	byte ptr data_117+1,0DFh	; (020A:0115=0Ch)
020A:356D  EB 05				jmp	short loc_331		; (3574)
020A:356F			loc_330:
020A:356F  80 0E 0115 20			or	byte ptr data_117+1,20h	; (020A:0115=0Ch) ' '
020A:3574			loc_331:
020A:3574  B9 0004				mov	cx,4
020A:3577  33 F6				xor	si,si			; Zero register
020A:3579  33 FF				xor	di,di			; Zero register
  
020A:357B			locloop_332:
020A:357B  8B 9C 011B				mov	bx,word ptr data_121+3[si]	; (020A:011B=5DA5h)
020A:357F  26: 8A 07				mov	al,es:[bx]
020A:3582  88 85 0111				mov	byte ptr data_115+1[di],al	; (020A:0111=1Fh)
020A:3586  47					inc	di
020A:3587  46					inc	si
020A:3588  46					inc	si
020A:3589  E2 F0				loop	locloop_332		; Loop if cx > 0
  
020A:358B  C6 06 011A 00			mov	byte ptr data_121+2,0	; (020A:011A=83h)
020A:3590  8B 36 0EE7				mov	si,data_202		; (020A:0EE7=36E8h)
020A:3594  8D 74 04				lea	si,[si+4]		; Load effective addr
020A:3597			loc_333:
020A:3597  32 FF				xor	bh,bh			; Zero register
020A:3599  8A 1C				mov	bl,[si]
020A:359B  D0 EB				shr	bl,1			; Shift w/zeros fill
020A:359D  D0 EB				shr	bl,1			; Shift w/zeros fill
020A:359F  D0 EB				shr	bl,1			; Shift w/zeros fill
020A:35A1  D0 EB				shr	bl,1			; Shift w/zeros fill
020A:35A3  D0 E3				shl	bl,1			; Shift w/zeros fill
020A:35A5  FF A7 0129				jmp	word ptr data_131+1[bx]	;*(020A:0129=714h)
020A:35A9  E9 030C				jmp	loc_386			; (38B8)
020A:35AC  A0 0125				mov	al,byte ptr data_127+1	; (020A:0125=2)
020A:35AF  3A 06 0126				cmp	al,byte ptr data_127+2	; (020A:0126=3)
020A:35B3  75 19				jne	loc_335			; Jump if not equal
020A:35B5  8B 44 01				mov	ax,[si+1]
020A:35B8  85 06 0ED1				test	ax,data_196		; (020A:0ED1=2474h)
020A:35BC  75 07				jnz	loc_334			; Jump if not zero
020A:35BE  C6 06 0127 01			mov	byte ptr data_127+3,1	; (020A:0127=4)
020A:35C3  EB 09				jmp	short loc_335		; (35CE)
020A:35C5			loc_334:
020A:35C5  FE 06 0126				inc	byte ptr data_127+2	; (020A:0126=3)
020A:35C9  C6 06 0127 00			mov	byte ptr data_127+3,0	; (020A:0127=4)
020A:35CE			loc_335:
020A:35CE  FE 06 0125				inc	byte ptr data_127+1	; (020A:0125=2)
020A:35D2  46					inc	si
020A:35D3  46					inc	si
020A:35D4  46					inc	si
020A:35D5  EB C0				jmp	short loc_333		; (3597)
020A:35D7  A0 0125				mov	al,byte ptr data_127+1	; (020A:0125=2)
020A:35DA  3A 06 0126				cmp	al,byte ptr data_127+2	; (020A:0126=3)
020A:35DE  75 16				jne	loc_336			; Jump if not equal
020A:35E0  8B 3E 0EE1				mov	di,word ptr ds:[0EE1h]	; (020A:0EE1=0FC00h)
020A:35E4  8A 44 01				mov	al,[si+1]
020A:35E7  E8 0010				call	sub_33			; (35FA)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 101

020A:35EA  72 0A				jc	loc_336			; Jump if carry Set
020A:35EC  8B 3E 0EE9				mov	di,data_203		; (020A:0EE9=0E01h)
020A:35F0  8A 44 01				mov	al,[si+1]
020A:35F3  E8 0004				call	sub_33			; (35FA)
020A:35F6			loc_336:
020A:35F6  46					inc	si
020A:35F7  46					inc	si
020A:35F8  EB 9D				jmp	short loc_333		; (3597)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_33		proc	near
020A:35FA  F8					clc				; Clear carry flag
020A:35FB  8D 7D 04				lea	di,[di+4]		; Load effective addr
020A:35FE			loc_337:
020A:35FE  83 3D 00				cmp	word ptr [di],0
020A:3601  74 10				je	loc_339			; Jump if equal
020A:3603  3A 45 02				cmp	al,[di+2]
020A:3606  74 04				je	loc_338			; Jump if equal
020A:3608  03 3D				add	di,[di]
020A:360A  EB F2				jmp	short loc_337		; (35FE)
020A:360C			loc_338:
020A:360C  8B 45 05				mov	ax,[di+5]
020A:360F  E8 0A57				call	sub_37			; (4069)
020A:3612  F9					stc				; Set carry flag
020A:3613			loc_339:
020A:3613  C3					retn
				sub_33		endp
  
020A:3614			loc_340:
020A:3614  F8					clc				; Clear carry flag
020A:3615  5B					pop	bx
020A:3616  58					pop	ax
020A:3617  07					pop	es
020A:3618  1F					pop	ds
020A:3619  C3					retn
020A:361A  A0 0125				mov	al,byte ptr data_127+1	; (020A:0125=2)
020A:361D  3A 06 0126				cmp	al,byte ptr data_127+2	; (020A:0126=3)
020A:3621  75 2C				jne	loc_344			; Jump if not equal
020A:3623  8A 1C				mov	bl,[si]
020A:3625  80 E3 07				and	bl,7
020A:3628  32 FF				xor	bh,bh			; Zero register
020A:362A  8A 87 0111				mov	al,byte ptr data_115+1[bx]	; (020A:0111=1Fh)
020A:362E  F6 04 08				test	byte ptr [si],8
020A:3631  75 07				jnz	loc_341			; Jump if not zero
020A:3633  84 44 01				test	al,[si+1]
020A:3636  75 0E				jnz	loc_343			; Jump if not zero
020A:3638  74 05				jz	loc_342			; Jump if zero
020A:363A			loc_341:
020A:363A  84 44 01				test	al,[si+1]
020A:363D  74 07				jz	loc_343			; Jump if zero
020A:363F			loc_342:
020A:363F  C6 06 0127 01			mov	byte ptr data_127+3,1	; (020A:0127=4)
020A:3644  EB 09				jmp	short loc_344		; (364F)
020A:3646			loc_343:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 102

020A:3646  FE 06 0126				inc	byte ptr data_127+2	; (020A:0126=3)
020A:364A  C6 06 0127 00			mov	byte ptr data_127+3,0	; (020A:0127=4)
020A:364F			loc_344:
020A:364F  FE 06 0125				inc	byte ptr data_127+1	; (020A:0125=2)
020A:3653  46					inc	si
020A:3654  46					inc	si
020A:3655  E9 FF3F				jmp	loc_333			; (3597)
020A:3658  A0 0126				mov	al,byte ptr data_127+2	; (020A:0126=3)
020A:365B  3A 06 0125				cmp	al,byte ptr data_127+1	; (020A:0125=2)
020A:365F  75 06				jne	loc_345			; Jump if not equal
020A:3661  FE 0E 0126				dec	byte ptr data_127+2	; (020A:0126=3)
020A:3665  EB 1E				jmp	short loc_347		; (3685)
020A:3667			loc_345:
020A:3667  80 3E 0127 01			cmp	byte ptr data_127+3,1	; (020A:0127=4)
020A:366C  75 17				jne	loc_347			; Jump if not equal
020A:366E  FE 0E 0125				dec	byte ptr data_127+1	; (020A:0125=2)
020A:3672  3A 06 0125				cmp	al,byte ptr data_127+1	; (020A:0125=2)
020A:3676  75 09				jne	loc_346			; Jump if not equal
020A:3678  FE 06 0126				inc	byte ptr data_127+2	; (020A:0126=3)
020A:367C  C6 06 0127 00			mov	byte ptr data_127+3,0	; (020A:0127=4)
020A:3681			loc_346:
020A:3681  FE 06 0125				inc	byte ptr data_127+1	; (020A:0125=2)
020A:3685			loc_347:
020A:3685  46					inc	si
020A:3686  E9 FF0E				jmp	loc_333			; (3597)
020A:3689  A0 0126				mov	al,byte ptr data_127+2	; (020A:0126=3)
020A:368C  3A 06 0125				cmp	al,byte ptr data_127+1	; (020A:0125=2)
020A:3690  75 04				jne	loc_348			; Jump if not equal
020A:3692  FE 0E 0126				dec	byte ptr data_127+2	; (020A:0126=3)
020A:3696			loc_348:
020A:3696  FE 0E 0125				dec	byte ptr data_127+1	; (020A:0125=2)
020A:369A  46					inc	si
020A:369B  E9 FEF9				jmp	loc_333			; (3597)
020A:369E  A0 0126				mov	al,byte ptr data_127+2	; (020A:0126=3)
020A:36A1  3A 06 0125				cmp	al,byte ptr data_127+1	; (020A:0125=2)
020A:36A5  75 27				jne	loc_350			; Jump if not equal
020A:36A7  8B 3E 0EE1				mov	di,word ptr ds:[0EE1h]	; (020A:0EE1=0FC00h)
020A:36AB  8A 44 01				mov	al,[si+1]
020A:36AE  E8 0022				call	sub_34			; (36D3)
020A:36B1  72 0C				jc	loc_349			; Jump if carry Set
020A:36B3  8B 3E 0EE9				mov	di,data_203		; (020A:0EE9=0E01h)
020A:36B7  8A 44 01				mov	al,[si+1]
020A:36BA  E8 0016				call	sub_34			; (36D3)
020A:36BD  73 0F				jnc	loc_350			; Jump if carry=0
020A:36BF			loc_349:
020A:36BF  80 0E 0115 08			or	byte ptr data_117+1,8	; (020A:0115=0Ch)
020A:36C4  F6 06 011A 80			test	byte ptr data_121+2,80h	; (020A:011A=83h)
020A:36C9  74 03				jz	loc_350			; Jump if zero
020A:36CB  E9 01EC				jmp	loc_387			; (38BA)
020A:36CE			loc_350:
020A:36CE  46					inc	si
020A:36CF  46					inc	si
020A:36D0  E9 FEC4				jmp	loc_333			; (3597)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 103

  
				sub_34		proc	near
020A:36D3  F8					clc				; Clear carry flag
020A:36D4  8D 7D 04				lea	di,[di+4]		; Load effective addr
020A:36D7			loc_351:
020A:36D7  83 3D 00				cmp	word ptr [di],0
020A:36DA  74 1C				je	loc_354			; Jump if equal
020A:36DC  3A 45 02				cmp	al,[di+2]
020A:36DF  74 04				je	loc_352			; Jump if equal
020A:36E1  03 3D				add	di,[di]
020A:36E3  EB F2				jmp	short loc_351		; (36D7)
020A:36E5			loc_352:
020A:36E5  80 26 0115 F7			and	byte ptr data_117+1,0F7h	; (020A:0115=0Ch)
020A:36EA  56					push	si
020A:36EB  8D 75 07				lea	si,[di+7]		; Load effective addr
020A:36EE  89 36 0123				mov	word ptr data_125+3,si	; (020A:0123=100h)
020A:36F2  A0 06EB				mov	al,byte ptr ds:[6EBh]	; (020A:06EB=0D2h)
020A:36F5  EB 02				jmp	short loc_355		; (36F9)
020A:36F7			loc_353:
020A:36F7  5E					pop	si
020A:36F8			loc_354:
020A:36F8  C3					retn
020A:36F9			loc_355:
020A:36F9  8B 36 0123				mov	si,word ptr data_125+3	; (020A:0123=100h)
020A:36FD  83 3C 00				cmp	word ptr [si],0
020A:3700  75 02				jne	loc_356			; Jump if not equal
020A:3702  EB F3				jmp	short loc_353		; (36F7)
020A:3704			loc_356:
020A:3704  8A 54 02				mov	dl,[si+2]
020A:3707  8B 1C				mov	bx,[si]
020A:3709  03 DE				add	bx,si
020A:370B  89 1E 0123				mov	word ptr data_125+3,bx	; (020A:0123=100h)
020A:370F  F6 C2 40				test	dl,40h			; '@'
020A:3712  74 2C				jz	loc_359			; Jump if zero
020A:3714  32 ED				xor	ch,ch			; Zero register
020A:3716  8A 4C 03				mov	cl,[si+3]
020A:3719  BB 0003				mov	bx,3
020A:371C  F6 C2 A0				test	dl,0A0h
020A:371F  74 03				jz	locloop_357		; Jump if zero
020A:3721  BB 0002				mov	bx,2
  
020A:3724			locloop_357:
020A:3724  E3 D3				jcxz	loc_355			; Jump if cx=0
020A:3726  3A 44 04				cmp	al,[si+4]
020A:3729  74 06				je	loc_358			; Jump if equal
020A:372B  03 F3				add	si,bx
020A:372D  E2 F5				loop	locloop_357		; Loop if cx > 0
  
020A:372F  EB C8				jmp	short loc_355		; (36F9)
020A:3731			loc_358:
020A:3731  8A E0				mov	ah,al
020A:3733  8A 44 05				mov	al,[si+5]
020A:3736  F6 C2 A0				test	dl,0A0h
020A:3739  75 2A				jnz	loc_361			; Jump if not zero
020A:373B  8A 64 06				mov	ah,[si+6]
020A:373E  EB 25				jmp	short loc_361		; (3765)
020A:3740			loc_359:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 104

020A:3740  3A 44 03				cmp	al,[si+3]
020A:3743  72 B4				jb	loc_355			; Jump if below
020A:3745  3A 44 04				cmp	al,[si+4]
020A:3748  77 AF				ja	loc_355			; Jump if above
020A:374A  2A 44 03				sub	al,[si+3]
020A:374D  F6 C2 A0				test	dl,0A0h
020A:3750  74 0A				jz	loc_360			; Jump if zero
020A:3752  8D 5C 05				lea	bx,[si+5]		; Load effective addr
020A:3755  D7					xlat				; al=[al+[bx]] table
020A:3756  8A 26 06EB				mov	ah,byte ptr ds:[6EBh]	; (020A:06EB=0D2h)
020A:375A  EB 09				jmp	short loc_361		; (3765)
020A:375C			loc_360:
020A:375C  B3 02				mov	bl,2
020A:375E  F6 E3				mul	bl			; ax = reg * al
020A:3760  8B D8				mov	bx,ax
020A:3762  8B 40 05				mov	ax,[bx+si+5]
020A:3765			loc_361:
020A:3765  F6 C2 20				test	dl,20h			; ' '
020A:3768  74 02				jz	loc_362			; Jump if zero
020A:376A  32 E4				xor	ah,ah			; Zero register
020A:376C			loc_362:
020A:376C  E8 08FA				call	sub_37			; (4069)
020A:376F  F9					stc				; Set carry flag
020A:3770  EB 85				jmp	short loc_353		; (36F7)
				sub_34		endp
  
020A:3772  A0 0126				mov	al,byte ptr data_127+2	; (020A:0126=3)
020A:3775  3A 06 0125				cmp	al,byte ptr data_127+1	; (020A:0125=2)
020A:3779  75 14				jne	loc_364			; Jump if not equal
020A:377B  8A 44 01				mov	al,[si+1]
020A:377E  F6 04 08				test	byte ptr [si],8
020A:3781  75 06				jnz	loc_363			; Jump if not zero
020A:3783  08 06 011A				or	byte ptr data_121+2,al	; (020A:011A=83h)
020A:3787  EB 06				jmp	short loc_364		; (378F)
020A:3789			loc_363:
020A:3789  F6 D0				not	al
020A:378B  20 06 011A				and	byte ptr data_121+2,al	; (020A:011A=83h)
020A:378F			loc_364:
020A:378F  46					inc	si
020A:3790  46					inc	si
020A:3791  E9 FE03				jmp	loc_333			; (3597)
020A:3794  A0 0125				mov	al,byte ptr data_127+1	; (020A:0125=2)
020A:3797  3A 06 0126				cmp	al,byte ptr data_127+2	; (020A:0126=3)
020A:379B  75 0F				jne	loc_365			; Jump if not equal
020A:379D  C6 06 0116 00			mov	byte ptr data_117+2,0	; (020A:0116=0)
020A:37A2  06C6			data_428	dw	6C6h
020A:37A4  0117			data_429	dw	117h
020A:37A6  C600			data_430	dw	0C600h
020A:37A8  EE06			data_431	dw	0EE06h
020A:37AA  06					push	es
020A:37AB  00 46 E9				add	[bp-17h],al
020A:37AE  E7 FD				out	0FDh,ax			; port 0FDh
020A:37B0  A0 0125				mov	al,byte ptr data_127+1	; (020A:0125=2)
020A:37B3  3A 06 0126				cmp	al,byte ptr data_127+2	; (020A:0126=3)
020A:37B7  75 0F				jne	loc_366			; Jump if not equal
020A:37B9  C6 06 0116 01			mov	byte ptr data_117+2,1	; (020A:0116=0)
020A:37BE  C6 06 0117 00			mov	byte ptr data_117+3,0	; (020A:0117=0)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 105

020A:37C3  C6 06 06EE 01			mov	byte ptr ds:[6EEh],1	; (020A:06EE=2)
020A:37C8			loc_366:
020A:37C8  46					inc	si
020A:37C9  E9 FDCB				jmp	loc_333			; (3597)
020A:37CC  A0 0125				mov	al,byte ptr data_127+1	; (020A:0125=2)
020A:37CF  3A 06 0126				cmp	al,byte ptr data_127+2	; (020A:0126=3)
020A:37D3  75 05				jne	loc_367			; Jump if not equal
020A:37D5  C6 06 06EA 01			mov	byte ptr ds:[6EAh],1	; (020A:06EA=32h)
020A:37DA			loc_367:
020A:37DA  46					inc	si
020A:37DB  E9 FDB9				jmp	loc_333			; (3597)
020A:37DE  A0 0125				mov	al,byte ptr data_127+1	; (020A:0125=2)
020A:37E1  3A 06 0126				cmp	al,byte ptr data_127+2	; (020A:0126=3)
020A:37E5  75 29				jne	loc_371			; Jump if not equal
020A:37E7  8A 1C				mov	bl,[si]
020A:37E9  80 E3 0F				and	bl,0Fh
020A:37EC  0A DB				or	bl,bl			; Zero ?
020A:37EE  74 13				jz	loc_370			; Jump if zero
020A:37F0  80 FB 01				cmp	bl,1
020A:37F3  75 03				jne	loc_368			; Jump if not equal
020A:37F5  E9 00C2				jmp	loc_387			; (38BA)
020A:37F8			loc_368:
020A:37F8  80 FB 02				cmp	bl,2
020A:37FB  75 03				jne	loc_369			; Jump if not equal
020A:37FD  E9 FE14				jmp	loc_340			; (3614)
020A:3800			loc_369:
020A:3800  E9 00B5				jmp	loc_386			; (38B8)
020A:3803			loc_370:
020A:3803  03 74 01				add	si,[si+1]
020A:3806  C6 06 0126 00			mov	byte ptr data_127+2,0	; (020A:0126=3)
020A:380B  C6 06 0125 00			mov	byte ptr data_127+1,0	; (020A:0125=2)
020A:3810			loc_371:
020A:3810  83 C6 03				add	si,3
020A:3813  E9 FD81				jmp	loc_333			; (3597)
020A:3816  A0 0125				mov	al,byte ptr data_127+1	; (020A:0125=2)
020A:3819  3A 06 0126				cmp	al,byte ptr data_127+2	; (020A:0126=3)
020A:381D  75 25				jne	loc_374			; Jump if not equal
020A:381F  8A 1C				mov	bl,[si]
020A:3821  80 E3 07				and	bl,7
020A:3824  32 FF				xor	bh,bh			; Zero register
020A:3826  8A 87 0111				mov	al,byte ptr data_115+1[bx]	; (020A:0111=1Fh)
020A:382A  F6 04 08				test	byte ptr [si],8
020A:382D  75 07				jnz	loc_372			; Jump if not zero
020A:382F  84 44 01				test	al,[si+1]
020A:3832  75 10				jnz	loc_374			; Jump if not zero
020A:3834  74 05				jz	loc_373			; Jump if zero
020A:3836			loc_372:
020A:3836  84 44 01				test	al,[si+1]
020A:3839  74 09				jz	loc_374			; Jump if zero
020A:383B			loc_373:
020A:383B  C6 06 0127 01			mov	byte ptr data_127+3,1	; (020A:0127=4)
020A:3840  FE 0E 0126				dec	byte ptr data_127+2	; (020A:0126=3)
020A:3844			loc_374:
020A:3844  46					inc	si
020A:3845			loc_375:
020A:3845  46					inc	si
020A:3846  E9 FD4E				jmp	loc_333			; (3597)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 106

020A:3849  A0 0125				mov	al,byte ptr data_127+1	; (020A:0125=2)
020A:384C  3A 06 0126				cmp	al,byte ptr data_127+2	; (020A:0126=3)
020A:3850  75 61				jne	loc_385			; Jump if not equal
020A:3852  8B 3E 0EE9				mov	di,data_203		; (020A:0EE9=0E01h)
020A:3856  8A 44 01				mov	al,[si+1]
020A:3859			loc_377:
020A:3859  8D 7D 04				lea	di,[di+4]		; Load effective addr
020A:385C			loc_378:
020A:385C  83 3D 00				cmp	word ptr [di],0
020A:385F  74 52				je	loc_385			; Jump if equal
020A:3861  3A 45 02				cmp	al,[di+2]
020A:3864  74 04				je	loc_379			; Jump if equal
020A:3866  03 3D				add	di,[di]
020A:3868  EB F2				jmp	short loc_378		; (385C)
020A:386A			loc_379:
020A:386A  80 26 0115 F7			and	byte ptr data_117+1,0F7h	; (020A:0115=0Ch)
020A:386F			loc_380:
020A:386F  56					push	si
020A:3870  8D 75 07				lea	si,[di+7]		; Load effective addr
020A:3873  A0 06EB				mov	al,byte ptr ds:[6EBh]	; (020A:06EB=0D2h)
020A:3876  8B 0C				mov	cx,[si]
020A:3878  E3 38				jcxz	loc_384			; Jump if cx=0
020A:387A  46					inc	si
020A:387B  46					inc	si
  
020A:387C			locloop_381:
020A:387C  3A 04				cmp	al,[si]
020A:387E  74 07				je	loc_382			; Jump if equal
020A:3880  83 C6 03				add	si,3
020A:3883  E2 F7				loop	locloop_381		; Loop if cx > 0
  
020A:3885  EB 2B				jmp	short loc_384		; (38B2)
020A:3887			loc_382:
020A:3887  C6 06 0116 00			mov	byte ptr data_117+2,0	; (020A:0116=0)
020A:388C  C6 06 0117 00			mov	byte ptr data_117+3,0	; (020A:0117=0)
020A:3891  8A 5C 01				mov	bl,[si+1]
020A:3894  32 FF				xor	bh,bh			; Zero register
020A:3896  8A 44 02				mov	al,[si+2]
020A:3899  08 87 0111				or	byte ptr data_115+1[bx],al	; (020A:0111=1Fh)
020A:389D  80 0E 0115 08			or	byte ptr data_117+1,8	; (020A:0115=0Ch)
020A:38A2  A0 0116				mov	al,byte ptr data_117+2	; (020A:0116=0)
020A:38A5  A2 06EE				mov	byte ptr ds:[6EEh],al	; (020A:06EE=2)
020A:38A8  F6 06 011A 80			test	byte ptr data_121+2,80h	; (020A:011A=83h)
020A:38AD  74 03				jz	loc_384			; Jump if zero
020A:38AF  5E					pop	si
020A:38B0  EB 08				jmp	short loc_387		; (38BA)
020A:38B2			loc_384:
020A:38B2  5E					pop	si
020A:38B3			loc_385:
020A:38B3  46					inc	si
020A:38B4  46					inc	si
020A:38B5  E9 FCDF				jmp	loc_333			; (3597)
020A:38B8			loc_386:
020A:38B8  00EB			data_437	dw	0EBh
020A:38BA			loc_387:
020A:38BA  C6			data_438	db	0C6h
020A:38BB  06			data_439	db	6
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 107

020A:38BC  28 01				sub	[bx+di],al
020A:38BE  00 F9				add	cl,bh
020A:38C0  5B					pop	bx
020A:38C1  58					pop	ax
020A:38C2  07					pop	es
020A:38C3  1F					pop	ds
020A:38C4  C3					retn
020A:38C5  000B[00]				db	11 dup (0)
020A:38D0			loc_388:
020A:38D0  52					push	dx
020A:38D1  3A 45 46				cmp	al,[di+46h]
020A:38D4  38 1D				cmp	[di],bl
020A:38D6  2A 36 4080				sub	dh,data_459		; (020A:4080=0)
020A:38DA  20 10				and	[bx+si],dl
020A:38DC  08 04				or	[si],al
020A:38DE  02 01				add	al,[bx+di]
020A:38E0  52					push	dx
020A:38E1  4F					dec	di
020A:38E2			loc_390:
020A:38E2  50					push	ax
020A:38E3  51					push	cx
020A:38E4  4B					dec	bx
020A:38E5  4C					dec	sp
020A:38E6  4D					dec	bp
020A:38E7			loc_391:
020A:38E7  47					inc	di
020A:38E8  48					dec	ax
020A:38E9  49					dec	cx
020A:38EA  10 11				adc	[bx+di],dl
020A:38EC  12 13				adc	dl,[bp+di]
020A:38EE  14 15				adc	al,15h
020A:38F0  16					push	ss
020A:38F1  17					pop	ss
020A:38F2  18 19				sbb	[bx+di],bl
020A:38F4  1E					push	ds
020A:38F5  1F					pop	ds
020A:38F6  20 21				and	[bx+di],ah
020A:38F8  22 23				and	ah,[bp+di]
020A:38FA  24 25				and	al,25h			; '%'
020A:38FC  2C26			data_441	dw	2C26h
020A:38FE			loc_393:
020A:38FE  2E2D			data_442	dw	2E2Dh
020A:3900  302F			data_443	dw	302Fh
020A:3902  31			data_444	db	31h
020A:3903  32 FF				xor	bh,bh			; Zero register
020A:3905  FF					db	0FFh
020A:3906			loc_394:
020A:3906  FF					db	0FFh
020A:3907  FF 8B FF8C				dec	word ptr [bp+di-74h]
020A:390B  EB DA				jmp	short loc_391		; (38E7)
020A:390D  DB DC				esc	3,ah			; coprocessor escape
020A:390F  FF					db	0FFh
020A:3910  FF					db	0FFh
020A:3911			loc_396:
020A:3911  FF					db	0FFh
020A:3912  FF					db	0FFh
020A:3913  FF					db	0FFh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 108

020A:3914			loc_397:
020A:3914  DD DE				esc	5,dh			; coprocessor escape
020A:3916  DF E2				esc	7,dl			; coprocessor escape
020A:3918  E3 E4				jcxz	loc_393			; Jump if cx=0
020A:391A  E5 E6				in	ax,0E6h			; port 0E6h
020A:391C  E7 FF				out	0FFh,ax			; port 0FFh
020A:391E  F3/ 0008[FF]				db	8 dup (0FFh)
020A:3927  FD					std				; Set direction flag
020A:3928  0008[FF]				db	8 dup (0FFh)
020A:3930  1B FF				sbb	di,di
020A:3932  00 FF				add	bh,bh
020A:3934  FF					db	0FFh
020A:3935  FF 1E FFFF				call	dword ptr ds:[0FFFFh]	; (020A:FFFF)
020A:3939  FF					db	0FFh
020A:393A  FF 1F				call	dword ptr [bx]		;*
020A:393C  FF					db	0FFh
020A:393D  7F 94		;*		jg	loc_389			;*Jump if >
020A:393D  7F 94				db	 7Fh, 94h
020A:393F  11 17				adc	[bx],dx
020A:3941  05 1412				add	ax,1412h
020A:3944  19 15				sbb	[di],dx
020A:3946  09 0F				or	[bx],cx
020A:3948  10 1B				adc	[bp+di],bl
020A:394A  1D FF0A				sbb	ax,0FF0Ah
020A:394D  1301			data_449	dw	1301h
020A:394F  04			data_450	db	4
020A:3950  06					push	es
020A:3951  07					pop	es
020A:3952  08 0A				or	[bp+si],cl
020A:3954  0B 0C				or	cx,[si]
020A:3956  FF					db	0FFh
020A:3957  FF					db	0FFh
020A:3958  FF					db	0FFh
020A:3959  FF 1C				call	dword ptr [si]		;*
020A:395B  1A 18				sbb	bl,[bx+si]
020A:395D  03 16 0E02				add	dx,data_192		; (020A:0E02=5153h)
020A:3961  0D FFFF				or	ax,0FFFFh
020A:3964  FF					db	0FFh
020A:3965  FF 96 20FF				call	word ptr [bp+20FFh]
020A:3969  FF 5E 5F				call	dword ptr [bp+5Fh]
020A:396C  60					db	60h
020A:396D  61					db	61h
020A:396E  62					db	62h
020A:396F  63					db	63h
020A:3970  64					db	64h
020A:3971  65					db	65h
020A:3972  66					db	66h
020A:3973  67					db	67h
020A:3974  FF					db	0FFh
020A:3975  FF 77 8D				push	word ptr [bx-73h]
020A:3978  84 8E 8F73				test	cl,[bp-708Dh]
020A:397C  74 90		;*		jz	loc_395			;*Jump if zero
020A:397C  74 90				db	 74h, 90h
020A:397E  75 91				jnz	loc_396			; Jump if not zero
020A:3980  76 92				jbe	loc_397			; Jump if below or =
020A:3982  93					xchg	ax,bx
020A:3983  FF					db	0FFh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 109

020A:3984  FF					db	0FFh
020A:3985  FF 89 FF8A				dec	word ptr ds:[0FF8Ah][bx+di]	; (020A:FF8A=5A48h)
020A:3989  EA FFD0:CFCE		;*		jmp	far ptr loc_2079	;*(FFD0:CFCE)
020A:3989  EA CE CF D0 FF			db	0EAh,0CEh,0CFh,0D0h,0FFh
020A:398E  FF					db	0FFh
020A:398F  FF					db	0FFh
020A:3990  FF					db	0FFh
020A:3991  FF D1				call	cx			;*
020A:3993  D2 D3				rcl	bl,cl			; Rotate thru carry
020A:3995  D4					db	0D4h
020A:3996  D5					db	0D5h
020A:3997  D6					db	0D6h
020A:3998  D7					xlat				; al=[al+[bx]] table
020A:3999  D8 D9				esc	0,cl			; coprocessor escape
020A:399B  FF F2				push	dx
020A:399D  0008[FF]				db	8 dup (0FFh)
020A:39A5			loc_400:
020A:39A5  FC					cld				; Clear direction
020A:39A6  0008[FF]				db	8 dup (0FFh)
020A:39AE  1B 31				sbb	si,[bx+di]
020A:39B0  32 33				xor	dh,[bp+di]
020A:39B2  34 35				xor	al,35h			; '5'
020A:39B4  36					db	36h
020A:39B5  37					aaa				; Ascii adjust
020A:39B6  38 39				cmp	[bx+di],bh
020A:39B8  30 2D				xor	[di],ch
020A:39BA  3D 0908				cmp	ax,908h
020A:39BD  71 77				jno	loc_408			; Jump if not overflw
020A:39BF  65					db	65h
020A:39C0  72 74				jc	loc_408			; Jump if carry Set
020A:39C2  79 75				jns	loc_409			; Jump if not sign
020A:39C4  69					db	69h
020A:39C5  6F					db	6Fh
020A:39C6  70 5B				jo	loc_406			; Jump if overflow=1
020A:39C8  5D					pop	bp
020A:39C9  0D 61FF				or	ax,61FFh
020A:39CC  73 64				jnc	loc_407			; Jump if carry=0
020A:39CE  66					db	66h
020A:39CF  67					db	67h
020A:39D0  68					db	68h
020A:39D1  6A					db	6Ah
020A:39D2  6B					db	6Bh
020A:39D3  6C					db	6Ch
020A:39D4  3B 27				cmp	sp,[bx]
020A:39D6  60					db	60h
020A:39D7  FF 5C 7A		;*		call	dword ptr [si+7Ah]	;*3 entries
020A:39D7  FF 5C 7A				db	0FFh, 5Ch, 7Ah
020A:39DA  78 63				js	loc_410			; Jump if sign=1
020A:39DC  76 62				jbe	loc_411			; Jump if below or =
020A:39DE  6E					db	6Eh
020A:39DF  6D					db	6Dh
020A:39E0  2C 2E				sub	al,2Eh			; '.'
020A:39E2  2F					das				; Decimal adjust
020A:39E3			loc_402:
020A:39E3  FF 2A				jmp	dword ptr [bp+si]
020A:39E5  FF 20				jmp	word ptr [bx+si]
020A:39E7  5C					pop	sp
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 110

020A:39E8  3B 3C				cmp	di,[si]
020A:39EA  3D 3F3E				cmp	ax,3F3Eh
020A:39ED  40					inc	ax
020A:39EE  41					inc	cx
020A:39EF  42					inc	dx
020A:39F0  43					inc	bx
020A:39F1  44					inc	sp
020A:39F2  FF					db	0FFh
020A:39F3  FF 47 48				inc	word ptr [bx+48h]
020A:39F6  49					dec	cx
020A:39F7  FF 4B FF				dec	word ptr [bp+di-1]
020A:39FA  4D					dec	bp
020A:39FB  FF 4F 50				dec	word ptr [bx+50h]
020A:39FE  51					push	cx
020A:39FF  52					push	dx
020A:3A00  53					push	bx
020A:3A01  FF					db	0FFh
020A:3A02  FF 5C 85				call	dword ptr [si-7Bh]
020A:3A05  86 FF				xchg	bh,bh
020A:3A07  E8 B7B6				call	$-4847h
020A:3A0A			loc_405:
020A:3A0A  B8 FFFF				mov	ax,0FFFFh
020A:3A0D  FF					db	0FFh
020A:3A0E  FF					db	0FFh
020A:3A0F  FF					db	0FFh
020A:3A10  B9 BBBA				mov	cx,0BBBAh
020A:3A13  BC BEBD				mov	sp,0BEBDh
020A:3A16  BF C1C0				mov	di,0C1C0h
020A:3A19  FF F0				push	ax
020A:3A1B  0008[FF]				db	8 dup (0FFh)
020A:3A23			loc_406:
020A:3A23  FB					sti				; Enable interrupts
020A:3A24  0008[FF]				db	8 dup (0FFh)
020A:3A2C  1B 21				sbb	sp,[bx+di]
020A:3A2E  40					inc	ax
020A:3A2F  23 24				and	sp,[si]
020A:3A31  25 265E				and	ax,265Eh
020A:3A34  2A 28				sub	ch,[bx+si]
020A:3A36			loc_408:
020A:3A36  29 5F 2B				sub	[bx+2Bh],bx
020A:3A39			loc_409:
020A:3A39  08 00				or	[bx+si],al
020A:3A3B  51					push	cx
020A:3A3C  57					push	di
020A:3A3D  45					inc	bp
020A:3A3E  52					push	dx
020A:3A3F			loc_410:
020A:3A3F  54					push	sp
020A:3A40			loc_411:
020A:3A40  59					pop	cx
020A:3A41  55					push	bp
020A:3A42  49					dec	cx
020A:3A43  4F					dec	di
020A:3A44  50					push	ax
020A:3A45  7B 7D				jnp	loc_416			; Jump if not parity
020A:3A47  0D 41FF				or	ax,41FFh
020A:3A4A  53					push	bx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 111

020A:3A4B  44					inc	sp
020A:3A4C  46					inc	si
020A:3A4D  47					inc	di
020A:3A4E  48					dec	ax
020A:3A4F  4A					dec	dx
020A:3A50  4B					dec	bx
020A:3A51  4C					dec	sp
020A:3A52  3A 22				cmp	ah,[bp+si]
020A:3A54  7E FF				jle	loc_412			; Jump if < or =
020A:3A56  7C 5A				jl	loc_414			; Jump if <
020A:3A58  58					pop	ax
020A:3A59  43					inc	bx
020A:3A5A  56					push	si
020A:3A5B  42					inc	dx
020A:3A5C  4E					dec	si
020A:3A5D  4D					dec	bp
020A:3A5E  3C 3E				cmp	al,3Eh			; '>'
020A:3A60  3F					aas				; Ascii adjust
020A:3A61  FF 2A				jmp	dword ptr [bp+si]
020A:3A63  FF 20				jmp	word ptr [bx+si]
020A:3A65  7C 54				jl	loc_415			; Jump if <
020A:3A67  55					push	bp
020A:3A68  56					push	si
020A:3A69  57					push	di
020A:3A6A  58					pop	ax
020A:3A6B  59					pop	cx
020A:3A6C  5A					pop	dx
020A:3A6D  5B					pop	bx
020A:3A6E  5C					pop	sp
020A:3A6F  5D					pop	bp
020A:3A70  FF					db	0FFh
020A:3A71  FF 37				push	word ptr [bx]
020A:3A73  38 39				cmp	[bx+di],bh
020A:3A75  2D 3534				sub	ax,3534h
020A:3A78  36: 2B 31				sub	si,ss:[bx+di]
020A:3A7B  32 33				xor	dh,[bp+di]
020A:3A7D  30 2E FFFF				xor	byte ptr ds:[0FFFFh],ch	; (020A:FFFF=14h)
020A:3A81  7C 87				jl	loc_405			; Jump if <
020A:3A83  88 FF				mov	bh,bh
020A:3A85  E9 C3C2				jmp	$-3C3Bh
020A:3A88  C4					db	0C4h
020A:3A89  FF					db	0FFh
020A:3A8A  FF					db	0FFh
020A:3A8B  FF					db	0FFh
020A:3A8C  FF					db	0FFh
020A:3A8D  FF C5				inc	bp
020A:3A8F  C6 C7 C8				mov	bh,0C8h
020A:3A92  C9					db	0C9h
020A:3A93  CA CCCB				retf	0CCCBh			; Return far
020A:3A96  CD FF				int	0FFh
020A:3A98  F1					db	0F1h
020A:3A99  0008[FF]				db	8 dup (0FFh)
020A:3AA1  FB					sti				; Enable interrupts
020A:3AA2  0008[FF]				db	8 dup (0FFh)
020A:3AAA  00 AA 02EB				add	[bp+si+2EBh],ch
020A:3AAE  00 FF				add	bh,bh
020A:3AB0			loc_413:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 112

020A:3AB0  55					push	bp
020A:3AB1  50					push	ax
020A:3AB2			loc_414:
020A:3AB2  53					push	bx
020A:3AB3  51					push	cx
020A:3AB4  52					push	dx
020A:3AB5  56					push	si
020A:3AB6  57					push	di
020A:3AB7  1E					push	ds
020A:3AB8  06					push	es
020A:3AB9  FC					cld				; Clear direction
020A:3ABA  BB 0040				mov	bx,40h
020A:3ABD  8E DB				mov	ds,bx
020A:3ABF  2E: 8B 2E 0ED3			mov	bp,cs:data_197		; (020A:0ED3=10E8h)
020A:3AC4			loc_416:
020A:3AC4  B4 01				mov	ah,1
020A:3AC6  C4					db	0C4h
020A:3AC7  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3AC9  90					nop
020A:3ACA  90					nop
020A:3ACB  E4 60				in	al,60h			; port 60h, keybd scan or sw1
020A:3ACD  B4 4F				mov	ah,4Fh			; 'O'
020A:3ACF  F9					stc				; Set carry flag
020A:3AD0  CD 15				int	15h			; General services, ah=func 4Fh
										;  change keyboard scan code
020A:3AD2  72 03				jc	loc_417			; Jump if carry Set
020A:3AD4  E9 028B				jmp	loc_460			; (3D62)
020A:3AD7			loc_417:
020A:3AD7  3C FE				cmp	al,0FEh
020A:3AD9  74 0C				je	loc_418			; Jump if equal
020A:3ADB  3C FA				cmp	al,0FAh
020A:3ADD  75 10				jne	loc_419			; Jump if not equal
020A:3ADF  80 0E 0097 10			or	byte ptr ds:[97h],10h	; (0040:0097=0)
020A:3AE4  E9 027B				jmp	loc_460			; (3D62)
020A:3AE7			loc_418:
020A:3AE7  80 0E 0097 20			or	byte ptr ds:[97h],20h	; (0040:0097=0) ' '
020A:3AEC  E9 0273				jmp	loc_460			; (3D62)
020A:3AEF			loc_419:
020A:3AEF  50					push	ax
020A:3AF0  E8 05FF				call	sub_41			; (40F2)
020A:3AF3  8A 1E 0097				mov	bl,byte ptr ds:[97h]	; (0040:0097=0)
020A:3AF7  32 D8				xor	bl,al
020A:3AF9  80 E3 07				and	bl,7
020A:3AFC  74 03				jz	loc_420			; Jump if zero
020A:3AFE  E8 05CE				call	sub_40			; (40CF)
020A:3B01			loc_420:
020A:3B01  58					pop	ax
020A:3B02  8A E0				mov	ah,al
020A:3B04  2E: A2 06EB				mov	byte ptr cs:[6EBh],al	; (020A:06EB=0D2h)
020A:3B08  3C FF				cmp	al,0FFh
020A:3B0A  75 09				jne	loc_421			; Jump if not equal
020A:3B0C  2E: C6 06 06EA 01			mov	byte ptr cs:[6EAh],1	; (020A:06EA=32h)
020A:3B12  E9 024D				jmp	loc_460			; (3D62)
020A:3B15			loc_421:
020A:3B15  0E					push	cs
020A:3B16  07					pop	es
020A:3B17  8A 3E 0096				mov	bh,byte ptr ds:[96h]	; (0040:0096=10h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 113

020A:3B1B  F6 C7 C0				test	bh,0C0h
020A:3B1E  74 40				jz	loc_426			; Jump if zero
020A:3B20  79 10				jns	loc_423			; Jump if not sign
020A:3B22  3C AB				cmp	al,0ABh
020A:3B24  75 05				jne	loc_422			; Jump if not equal
020A:3B26  80 0E 0096 40			or	byte ptr ds:[96h],40h	; (0040:0096=10h) '@'
020A:3B2B			loc_422:
020A:3B2B  80 26 0096 7F			and	byte ptr ds:[96h],7Fh	; (0040:0096=10h)
020A:3B30  EB 2B				jmp	short loc_425		; (3B5D)
020A:3B32			loc_423:
020A:3B32  80 26 0096 BF			and	byte ptr ds:[96h],0BFh	; (0040:0096=10h)
020A:3B37  80 0E 0096 10			or	byte ptr ds:[96h],10h	; (0040:0096=10h)
020A:3B3C  3C 41				cmp	al,41h			; 'A'
020A:3B3E  74 10				je	loc_424			; Jump if equal
020A:3B40  3C 83				cmp	al,83h
020A:3B42  74 0C				je	loc_424			; Jump if equal
020A:3B44  3C 86				cmp	al,86h
020A:3B46  74 08				je	loc_424			; Jump if equal
020A:3B48  3C 90				cmp	al,90h
020A:3B4A  74 04				je	loc_424			; Jump if equal
020A:3B4C  3C 92				cmp	al,92h
020A:3B4E  75 0D				jne	loc_425			; Jump if not equal
020A:3B50			loc_424:
020A:3B50  F6 C7 20				test	bh,20h			; ' '
020A:3B53  74 08				jz	loc_425			; Jump if zero
020A:3B55  80 0E 0017 20			or	byte ptr ds:[17h],20h	; (0040:0017=0) ' '
020A:3B5A  E8 0572				call	sub_40			; (40CF)
020A:3B5D			loc_425:
020A:3B5D  E9 0202				jmp	loc_460			; (3D62)
020A:3B60			loc_426:
020A:3B60  3C E0				cmp	al,0E0h
020A:3B62  75 07				jne	loc_427			; Jump if not equal
020A:3B64  80 0E 0096 12			or	byte ptr ds:[96h],12h	; (0040:0096=10h)
020A:3B69  EB 09				jmp	short loc_428		; (3B74)
020A:3B6B			loc_427:
020A:3B6B  3C E1				cmp	al,0E1h
020A:3B6D  75 08				jne	loc_429			; Jump if not equal
020A:3B6F  80 0E 0096 11			or	byte ptr ds:[96h],11h	; (0040:0096=10h)
020A:3B74			loc_428:
020A:3B74  E9 01F0				jmp	loc_461			; (3D67)
020A:3B77			loc_429:
020A:3B77  24 7F				and	al,7Fh
020A:3B79  F6 C7 02				test	bh,2
020A:3B7C  74 0C				jz	loc_430			; Jump if zero
020A:3B7E  B9 0002				mov	cx,2
020A:3B81  BF 0516				mov	di,516h
020A:3B84  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3B86  75 5B				jnz	loc_434			; Jump if not zero
020A:3B88  EB 44				jmp	short loc_432		; (3BCE)
020A:3B8A			loc_430:
020A:3B8A  F6 C7 01				test	bh,1
020A:3B8D  74 1D				jz	loc_431			; Jump if zero
020A:3B8F  B9 0004				mov	cx,4
020A:3B92  BF 0514				mov	di,514h
020A:3B95  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3B97  74 DB				jz	loc_428			; Jump if zero
020A:3B99  3C 45				cmp	al,45h			; 'E'
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 114

020A:3B9B  75 31				jne	loc_432			; Jump if not equal
020A:3B9D  F6 C4 80				test	ah,80h
020A:3BA0  75 2C				jnz	loc_432			; Jump if not zero
020A:3BA2  F6 06 0018 08			test	byte ptr ds:[18h],8	; (0040:0018=0)
020A:3BA7  75 25				jnz	loc_432			; Jump if not zero
020A:3BA9  E9 0351				jmp	loc_488			; (3EFD)
020A:3BAC			loc_431:
020A:3BAC  3C 54				cmp	al,54h			; 'T'
020A:3BAE  75 33				jne	loc_434			; Jump if not equal
020A:3BB0  F6 C4 80				test	ah,80h
020A:3BB3  75 1C				jnz	loc_433			; Jump if not zero
020A:3BB5  F6 06 0018 04			test	byte ptr ds:[18h],4	; (0040:0018=0)
020A:3BBA  75 12				jnz	loc_432			; Jump if not zero
020A:3BBC  80 0E 0018 04			or	byte ptr ds:[18h],4	; (0040:0018=0)
020A:3BC1  B4 03				mov	ah,3
020A:3BC3  C4					db	0C4h
020A:3BC4  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3BC6  B8 8500				mov	ax,8500h
020A:3BC9  CD 15				int	15h			; General services, ah=func 85h
										;  get system request key state
020A:3BCB  E9 01B4				jmp	loc_462			; (3D82)
020A:3BCE			loc_432:
020A:3BCE  E9 0191				jmp	loc_460			; (3D62)
020A:3BD1			loc_433:
020A:3BD1  80 26 0018 FB			and	byte ptr ds:[18h],0FBh	; (0040:0018=0)
020A:3BD6  B4 03				mov	ah,3
020A:3BD8  C4					db	0C4h
020A:3BD9  C4			data_457	db	0C4h
020A:3BDA  09 B8 8501				or	word ptr ds:[8501h][bx+si],di	; (0040:8501=63Eh)
020A:3BDE  CD 15				int	15h			; General services, ah=func 03h
										;  cassette write cx bytes-es:bx
020A:3BE0  E9 019F				jmp	loc_462			; (3D82)
020A:3BE3			loc_434:
020A:3BE3  8A 1E 0017				mov	bl,byte ptr ds:[17h]	; (0040:0017=0)
020A:3BE7  BF 0510				mov	di,510h
020A:3BEA  B9 0008				mov	cx,8
020A:3BED  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3BEF  8A C4				mov	al,ah
020A:3BF1  74 03				jz	loc_435			; Jump if zero
020A:3BF3  E9 0158				jmp	loc_459			; (3D4E)
020A:3BF6			loc_435:
020A:3BF6  81 EF 0511				sub	di,511h
020A:3BFA  2E: 8A A5 0518			mov	ah,byte ptr cs:[518h][di]	; (020A:0518=0F6h)
020A:3BFF  B1 02				mov	cl,2
020A:3C01  A8 80				test	al,80h
020A:3C03  74 03				jz	loc_436			; Jump if zero
020A:3C05  E9 00EA				jmp	loc_453			; (3CF2)
020A:3C08			loc_436:
020A:3C08  80 FC 10				cmp	ah,10h
020A:3C0B  73 6F				jae	loc_443			; Jump if above or =
020A:3C0D  2E: 80 3E 06EF FF			cmp	byte ptr cs:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3C13  75 04				jne	loc_437			; Jump if not equal
020A:3C15  3C 38				cmp	al,38h			; '8'
020A:3C17  75 00				jne	loc_437			; Jump if not equal
020A:3C19			loc_437:
020A:3C19  08 26 0017				or	byte ptr ds:[17h],ah	; (0040:0017=0)
020A:3C1D  F6 C4 0C				test	ah,0Ch
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 115

020A:3C20  74 13				jz	loc_439			; Jump if zero
020A:3C22  F6 C7 02				test	bh,2
020A:3C25  74 06				jz	loc_438			; Jump if zero
020A:3C27  08 26 0096				or	byte ptr ds:[96h],ah	; (0040:0096=10h)
020A:3C2B  EB 2C				jmp	short loc_441		; (3C59)
020A:3C2D			loc_438:
020A:3C2D  D2 EC				shr	ah,cl			; Shift w/zeros fill
020A:3C2F  08 26 0018				or	byte ptr ds:[18h],ah	; (0040:0018=0)
020A:3C33  EB 24				jmp	short loc_441		; (3C59)
020A:3C35			loc_439:
020A:3C35  2E: F7 06 0EEB 8000			test	cs:data_204,8000h	; (020A:0EEB=16FFh)
020A:3C3C  74 1B				jz	loc_441			; Jump if zero
020A:3C3E  2E: 80 3E 06EF FF			cmp	byte ptr cs:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3C44  75 13				jne	loc_441			; Jump if not equal
020A:3C46  F7 C5 0200				test	bp,200h
020A:3C4A  75 05				jnz	loc_440			; Jump if not zero
020A:3C4C  F6 C7 10				test	bh,10h
020A:3C4F  74 08				jz	loc_441			; Jump if zero
020A:3C51			loc_440:
020A:3C51  80 26 0017 BF			and	byte ptr ds:[17h],0BFh	; (0040:0017=0)
020A:3C56  E8 0476				call	sub_40			; (40CF)
020A:3C59			loc_441:
020A:3C59  2E: 80 3E 06EF FF			cmp	byte ptr cs:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3C5F  75 18				jne	loc_442			; Jump if not equal
020A:3C61  2E: F7 06 0EEB 2000			test	cs:data_204,2000h	; (020A:0EEB=16FFh)
020A:3C68  74 0F				jz	loc_442			; Jump if zero
020A:3C6A  2E: 80 0E 0115 04			or	byte ptr cs:data_117+1,4	; (020A:0115=0Ch)
020A:3C70  E8 F896		;*		call	sub_32			;*(3509)
020A:3C70  E8 96 F8				db	0E8h, 96h,0F8h
020A:3C73  2E: 80 26 0115 FB			and	byte ptr cs:data_117+1,0FBh	; (020A:0115=0Ch)
020A:3C79			loc_442:
020A:3C79  E9 00E6				jmp	loc_460			; (3D62)
020A:3C7C			loc_443:
020A:3C7C  F6 C3 04				test	bl,4
020A:3C7F  74 03				jz	loc_444			; Jump if zero
020A:3C81  E9 00CA				jmp	loc_459			; (3D4E)
020A:3C84			loc_444:
020A:3C84  3C 52				cmp	al,52h			; 'R'
020A:3C86  75 21				jne	loc_448			; Jump if not equal
020A:3C88  F6 C3 08				test	bl,8
020A:3C8B  74 03				jz	loc_445			; Jump if zero
020A:3C8D  E9 00BE				jmp	loc_459			; (3D4E)
020A:3C90			loc_445:
020A:3C90  F6 C7 02				test	bh,2
020A:3C93  75 14				jnz	loc_448			; Jump if not zero
020A:3C95  F6 C3 20				test	bl,20h			; ' '
020A:3C98  75 0A				jnz	loc_447			; Jump if not zero
020A:3C9A  F6 C3 03				test	bl,3
020A:3C9D  74 0A				jz	loc_448			; Jump if zero
020A:3C9F			loc_446:
020A:3C9F  8A E0				mov	ah,al
020A:3CA1  E9 00AA				jmp	loc_459			; (3D4E)
020A:3CA4			loc_447:
020A:3CA4  F6 C3 03				test	bl,3
020A:3CA7  74 F6				jz	loc_446			; Jump if zero
020A:3CA9			loc_448:
020A:3CA9  84 26 0018				test	ah,byte ptr ds:[18h]	; (0040:0018=0)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 116

020A:3CAD  74 03				jz	loc_449			; Jump if zero
020A:3CAF  E9 00B0				jmp	loc_460			; (3D62)
020A:3CB2			loc_449:
020A:3CB2  08 26 0018				or	byte ptr ds:[18h],ah	; (0040:0018=0)
020A:3CB6  30 26 0017				xor	byte ptr ds:[17h],ah	; (0040:0017=0)
020A:3CBA  2E: F7 06 0EEB 8000			test	cs:data_204,8000h	; (020A:0EEB=16FFh)
020A:3CC1  74 1C				jz	loc_451			; Jump if zero
020A:3CC3  F7 C5 0200				test	bp,200h
020A:3CC7  75 05				jnz	loc_450			; Jump if not zero
020A:3CC9  F6 C7 10				test	bh,10h
020A:3CCC  74 11				jz	loc_451			; Jump if zero
020A:3CCE			loc_450:
020A:3CCE  2E: 80 3E 06EF FF			cmp	byte ptr cs:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3CD4  75 09				jne	loc_451			; Jump if not equal
020A:3CD6  F6 C4 40				test	ah,40h			; '@'
020A:3CD9  74 04				jz	loc_451			; Jump if zero
020A:3CDB  08 26 0017				or	byte ptr ds:[17h],ah	; (0040:0017=0)
020A:3CDF			loc_451:
020A:3CDF  F6 C4 70				test	ah,70h			; 'p'
020A:3CE2  74 05				jz	loc_452			; Jump if zero
020A:3CE4  50					push	ax
020A:3CE5  E8 03E7				call	sub_40			; (40CF)
020A:3CE8  58					pop	ax
020A:3CE9			loc_452:
020A:3CE9  3C 52				cmp	al,52h			; 'R'
020A:3CEB  75 75				jne	loc_460			; Jump if not equal
020A:3CED  8A E0				mov	ah,al
020A:3CEF  E9 009C				jmp	loc_463			; (3D8E)
020A:3CF2			loc_453:
020A:3CF2  80 FC 10				cmp	ah,10h
020A:3CF5  F6 D4				not	ah
020A:3CF7  73 4F				jnc	loc_458			; Jump if carry=0
020A:3CF9  20 26 0017				and	byte ptr ds:[17h],ah	; (0040:0017=0)
020A:3CFD  80 FC FB				cmp	ah,0FBh
020A:3D00  77 30				ja	loc_457			; Jump if above
020A:3D02  F6 C7 02				test	bh,2
020A:3D05  74 06				jz	loc_454			; Jump if zero
020A:3D07  20 26 0096				and	byte ptr ds:[96h],ah	; (0040:0096=10h)
020A:3D0B  EB 06				jmp	short loc_455		; (3D13)
020A:3D0D			loc_454:
020A:3D0D  D2 FC				sar	ah,cl			; Shift w/sign fill
020A:3D0F  20 26 0018				and	byte ptr ds:[18h],ah	; (0040:0018=0)
020A:3D13			loc_455:
020A:3D13  8A E0				mov	ah,al
020A:3D15  A0 0096				mov	al,byte ptr ds:[96h]	; (0040:0096=10h)
020A:3D18  2E: 80 3E 06EF FF			cmp	byte ptr cs:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3D1E  75 02				jne	loc_456			; Jump if not equal
020A:3D20  24 F7				and	al,0F7h
020A:3D22			loc_456:
020A:3D22  D2 E8				shr	al,cl			; Shift w/zeros fill
020A:3D24  0A 06 0018				or	al,byte ptr ds:[18h]	; (0040:0018=0)
020A:3D28  D2 E0				shl	al,cl			; Shift w/zeros fill
020A:3D2A  24 0C				and	al,0Ch
020A:3D2C  08 06 0017				or	byte ptr ds:[17h],al	; (0040:0017=0)
020A:3D30  8A C4				mov	al,ah
020A:3D32			loc_457:
020A:3D32  3C B8				cmp	al,0B8h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 117

020A:3D34  75 2C				jne	loc_460			; Jump if not equal
020A:3D36  A0 0019				mov	al,byte ptr ds:[19h]	; (0040:0019=0)
020A:3D39  32 E4				xor	ah,ah			; Zero register
020A:3D3B  88 26 0019				mov	byte ptr ds:[19h],ah	; (0040:0019=0)
020A:3D3F  0A C0				or	al,al			; Zero ?
020A:3D41  74 1F				jz	loc_460			; Jump if zero
020A:3D43  E8 0328				call	sub_38			; (406E)
020A:3D46  EB 1A				jmp	short loc_460		; (3D62)
020A:3D48			loc_458:
020A:3D48  20 26 0018				and	byte ptr ds:[18h],ah	; (0040:0018=0)
020A:3D4C  EB 14				jmp	short loc_460		; (3D62)
020A:3D4E			loc_459:
020A:3D4E  3C 80				cmp	al,80h
020A:3D50  73 10				jae	loc_460			; Jump if above or =
020A:3D52  F6 06 0018 08			test	byte ptr ds:[18h],8	; (0040:0018=0)
020A:3D57  74 35				jz	loc_463			; Jump if zero
020A:3D59  3C 45				cmp	al,45h			; 'E'
020A:3D5B  74 05				je	loc_460			; Jump if equal
020A:3D5D  80 26 0018 F7			and	byte ptr ds:[18h],0F7h	; (0040:0018=0)
020A:3D62			loc_460:
020A:3D62  80 26 0096 FC			and	byte ptr ds:[96h],0FCh	; (0040:0096=10h)
020A:3D67			loc_461:
020A:3D67  B4 02				mov	ah,2
020A:3D69  2E: 8A 3E 06EA			mov	bh,byte ptr cs:[6EAh]	; (020A:06EA=32h)
020A:3D6E  2E: 8A 1E 0CA8			mov	bl,cs:data_188		; (020A:0CA8=0A2h)
020A:3D73  2E: C6 06 0CA8 00			mov	cs:data_188,0		; (020A:0CA8=0A2h)
020A:3D79  2E: C6 06 06EA 00			mov	byte ptr cs:[6EAh],0	; (020A:06EA=32h)
020A:3D7F  C4					db	0C4h
020A:3D80  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3D82			loc_462:
020A:3D82  07					pop	es
020A:3D83  1F					pop	ds
020A:3D84  5F					pop	di
020A:3D85  5E					pop	si
020A:3D86  5A					pop	dx
020A:3D87  59					pop	cx
020A:3D88  5B					pop	bx
020A:3D89  58					pop	ax
020A:3D8A  5D					pop	bp
020A:3D8B  E9 03D2				jmp	loc_536			; (4160)
020A:3D8E			loc_463:
020A:3D8E  3C 7E				cmp	al,7Eh			; '~'
020A:3D90  77 D0				ja	loc_460			; Jump if above
020A:3D92  F7 C5 4000				test	bp,4000h
020A:3D96  75 04				jnz	loc_464			; Jump if not zero
020A:3D98  3C 7E				cmp	al,7Eh			; '~'
020A:3D9A  77 C6				ja	loc_460			; Jump if above
020A:3D9C			loc_464:
020A:3D9C  F6 C3 08				test	bl,8
020A:3D9F  74 15				jz	loc_465			; Jump if zero
020A:3DA1  F6 C7 10				test	bh,10h
020A:3DA4  74 13				jz	loc_466			; Jump if zero
020A:3DA6  F6 06 0018 04			test	byte ptr data_74+2,4	; (020A:0018=0)
020A:3DAB  74 0C				jz	loc_466			; Jump if zero
020A:3DAD  F6 C4 02				test	ah,2
020A:3DB0  74 04				jz	loc_465			; Jump if zero
020A:3DB2  A8 08				test	al,8
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 118

020A:3DB4  75 03				jnz	loc_466			; Jump if not zero
020A:3DB6			loc_465:
020A:3DB6  E9 0100				jmp	loc_484			; (3EB9)
020A:3DB9			loc_466:
020A:3DB9  F6 C3 04				test	bl,4
020A:3DBC  74 14				jz	loc_467			; Jump if zero
020A:3DBE  3C 53				cmp	al,53h			; 'S'
020A:3DC0  75 39				jne	loc_471			; Jump if not equal
020A:3DC2  C7 06 0072 1234			mov	word ptr ds:[72h],1234h	; (020A:0072=0C3Fh)
020A:3DC8  83 26 0096 10			and	word ptr ds:[96h],10h	; (020A:0096=0)
020A:3DCD  EA FFFF:0000		;*		jmp	far ptr loc_2080	;*(FFFF:0000)
020A:3DCD  EA 00 00 FF FF			db	0EAh, 00h, 00h,0FFh,0FFh
020A:3DD2			loc_467:
020A:3DD2  E8 F734		;*		call	sub_32			;*(3509)
020A:3DD2  E8 34 F7				db	0E8h, 34h,0F7h
020A:3DD5  72 8B				jc	loc_460			; Jump if carry Set
020A:3DD7  3C 39				cmp	al,39h			; '9'
020A:3DD9  75 05				jne	loc_468			; Jump if not equal
020A:3DDB  B0 20				mov	al,20h			; ' '
020A:3DDD  E9 0282				jmp	loc_520			; (4062)
020A:3DE0			loc_468:
020A:3DE0  F7 C5 8000				test	bp,8000h
020A:3DE4  74 42				jz	loc_474			; Jump if zero
020A:3DE6  3C 0F				cmp	al,0Fh
020A:3DE8  75 06				jne	loc_469			; Jump if not equal
020A:3DEA  B8 A500				mov	ax,0A500h
020A:3DED  E9 0272				jmp	loc_520			; (4062)
020A:3DF0			loc_469:
020A:3DF0  3C 4A				cmp	al,4Ah			; 'J'
020A:3DF2  74 04				je	loc_470			; Jump if equal
020A:3DF4  3C 4E				cmp	al,4Eh			; 'N'
020A:3DF6  75 30				jne	loc_474			; Jump if not equal
020A:3DF8			loc_470:
020A:3DF8  E9 00A7				jmp	loc_482			; (3EA2)
020A:3DFB			loc_471:
020A:3DFB  2E: 3A 06 0EEE			cmp	al,byte ptr cs:[0EEEh]	; (020A:0EEE=0)
020A:3E00  75 09				jne	loc_472			; Jump if not equal
020A:3E02  2E: C6 06 06EF 00			mov	byte ptr cs:[6EFh],0	; (020A:06EF=0CDh)
020A:3E08  E9 FF57				jmp	loc_460			; (3D62)
020A:3E0B			loc_472:
020A:3E0B  2E: 3A 06 0EEF			cmp	al,cs:data_206		; (020A:0EEF=74h)
020A:3E10  75 09				jne	loc_473			; Jump if not equal
020A:3E12  2E: C6 06 06EF FF			mov	byte ptr cs:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3E18  E9 FF47				jmp	loc_460			; (3D62)
020A:3E1B			loc_473:
020A:3E1B  2E: 80 3E 06EF FF			cmp	byte ptr cs:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3E21  75 05				jne	loc_474			; Jump if not equal
020A:3E23  E8 F6E3		;*		call	sub_32			;*(3509)
020A:3E23  E8 E3 F6				db	0E8h,0E3h,0F6h
020A:3E26  72 1F				jc	loc_475			; Jump if carry Set
020A:3E28			loc_474:
020A:3E28  BF 0520				mov	di,520h
020A:3E2B  B9 000A				mov	cx,0Ah
020A:3E2E  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3E30  75 18				jnz	loc_476			; Jump if not zero
020A:3E32  F6 C7 02				test	bh,2
020A:3E35  75 76				jnz	loc_483			; Jump if not zero
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 119

020A:3E37  81 EF 0521				sub	di,521h
020A:3E3B  A0 0019				mov	al,byte ptr data_74+3	; (020A:0019=0)
020A:3E3E  B4 0A				mov	ah,0Ah
020A:3E40  F6 E4				mul	ah			; ax = reg * al
020A:3E42  03 C7				add	ax,di
020A:3E44  A2 0019				mov	byte ptr data_74+3,al	; (020A:0019=0)
020A:3E47			loc_475:
020A:3E47  E9 FF18				jmp	loc_460			; (3D62)
020A:3E4A			loc_476:
020A:3E4A  C6 06 0019 00			mov	byte ptr data_74+3,0	; (020A:0019=0)
020A:3E4F  B9 001A				mov	cx,1Ah
020A:3E52  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3E54  74 47				jz	loc_481			; Jump if zero
020A:3E56  3C 02				cmp	al,2
020A:3E58  72 48				jb	loc_482			; Jump if below
020A:3E5A  3C 0D				cmp	al,0Dh
020A:3E5C  77 05				ja	loc_477			; Jump if above
020A:3E5E  80 C4 76				add	ah,76h			; 'v'
020A:3E61  EB 3A				jmp	short loc_481		; (3E9D)
020A:3E63			loc_477:
020A:3E63  3C 57				cmp	al,57h			; 'W'
020A:3E65  72 08				jb	loc_478			; Jump if below
020A:3E67  2C 52				sub	al,52h			; 'R'
020A:3E69  BB 0544				mov	bx,544h
020A:3E6C  E9 01DC				jmp	loc_519			; (404B)
020A:3E6F			loc_478:
020A:3E6F  F6 C7 02				test	bh,2
020A:3E72  74 1E				jz	loc_480			; Jump if zero
020A:3E74  F7 C5 8000				test	bp,8000h
020A:3E78  74 18				jz	loc_480			; Jump if zero
020A:3E7A  3C 1C				cmp	al,1Ch
020A:3E7C  75 06				jne	loc_479			; Jump if not equal
020A:3E7E  B8 A600				mov	ax,0A600h
020A:3E81  E9 01DE				jmp	loc_520			; (4062)
020A:3E84			loc_479:
020A:3E84  3C 53				cmp	al,53h			; 'S'
020A:3E86  74 25				je	loc_483			; Jump if equal
020A:3E88  3C 35				cmp	al,35h			; '5'
020A:3E8A  75 BB				jne	loc_475			; Jump if not equal
020A:3E8C  B8 A400				mov	ax,0A400h
020A:3E8F  E9 01D0				jmp	loc_520			; (4062)
020A:3E92			loc_480:
020A:3E92  3C 3B				cmp	al,3Bh			; ';'
020A:3E94  72 0C				jb	loc_482			; Jump if below
020A:3E96  3C 44				cmp	al,44h			; 'D'
020A:3E98  77 AD				ja	loc_475			; Jump if above
020A:3E9A  80 C4 2D				add	ah,2Dh			; '-'
020A:3E9D			loc_481:
020A:3E9D  32 C0				xor	al,al			; Zero register
020A:3E9F  E9 01C0				jmp	loc_520			; (4062)
020A:3EA2			loc_482:
020A:3EA2  F7 C5 8000				test	bp,8000h
020A:3EA6  74 9F				jz	loc_475			; Jump if zero
020A:3EA8  B0 F0				mov	al,0F0h
020A:3EAA  E9 01B5				jmp	loc_520			; (4062)
020A:3EAD			loc_483:
020A:3EAD  F7 C5 8000				test	bp,8000h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 120

020A:3EB1  74 EA				jz	loc_481			; Jump if zero
020A:3EB3  04 50				add	al,50h			; 'P'
020A:3EB5  8A E0				mov	ah,al
020A:3EB7  EB E4				jmp	short loc_481		; (3E9D)
020A:3EB9			loc_484:
020A:3EB9  F6 C3 04				test	bl,4
020A:3EBC  75 03				jnz	loc_485			; Jump if not zero
020A:3EBE  E9 00B2				jmp	loc_497			; (3F73)
020A:3EC1			loc_485:
020A:3EC1  3C 46				cmp	al,46h			; 'F'
020A:3EC3  75 29				jne	loc_487			; Jump if not equal
020A:3EC5  F7 C5 0200				test	bp,200h
020A:3EC9  75 0A				jnz	loc_486			; Jump if not zero
020A:3ECB  F6 C7 10				test	bh,10h
020A:3ECE  74 05				jz	loc_486			; Jump if zero
020A:3ED0  F6 C7 02				test	bh,2
020A:3ED3  74 19				jz	loc_487			; Jump if zero
020A:3ED5			loc_486:
020A:3ED5  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:3ED9  89 1E 001C				mov	word ptr data_78+2,bx	; (020A:001C=148Fh)
020A:3EDD  C6 06 0071 80			mov	byte ptr data_102+3,80h	; (020A:0071=3Eh)
020A:3EE2  B4 04				mov	ah,4
020A:3EE4  C4					db	0C4h
020A:3EE5  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3EE7  CD 1B				int	1Bh			; Keyboard break (cntrl-break)
020A:3EE9  2B C0				sub	ax,ax
020A:3EEB  E9 0174				jmp	loc_520			; (4062)
020A:3EEE			loc_487:
020A:3EEE  3C 45				cmp	al,45h			; 'E'
020A:3EF0  75 3B				jne	loc_491			; Jump if not equal
020A:3EF2  F6 C7 10				test	bh,10h
020A:3EF5  74 06				jz	loc_488			; Jump if zero
020A:3EF7  F7 C5 0200				test	bp,200h
020A:3EFB  74 30				jz	loc_491			; Jump if zero
020A:3EFD			loc_488:
020A:3EFD  80 0E 0018 08			or	byte ptr data_74+2,8	; (020A:0018=0)
020A:3F02  B0 AE				mov	al,0AEh
020A:3F04  E8 01C5				call	sub_39			; (40CC)
020A:3F07  B4 03				mov	ah,3
020A:3F09  C4					db	0C4h
020A:3F0A  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3F0C  E8 0209				call	sub_42			; (4118)
020A:3F0F			loc_489:
020A:3F0F  B9 0010				mov	cx,10h
020A:3F12  33 C0				xor	ax,ax			; Zero register
020A:3F14  C4					db	0C4h
020A:3F15  C4 5A F6				les	bx,dword ptr [bp+si-0Ah]	; Load 32 bit ptr
020A:3F18  06					push	es
020A:3F19  18 00				sbb	[bx+si],al
020A:3F1B  08 74 04				or	[si+4],dh
020A:3F1E  E1 F7		;*		loopz	locloop_490		;*Loop if zf=1, cx>0
  
020A:3F1E  E1 F7				db	0E1h,0F7h
020A:3F20  75 ED				jnz	loc_489			; Jump if not zero
020A:3F22  E8 021B				call	sub_43			; (4140)
020A:3F25  80 26 0018 F7			and	byte ptr data_74+2,0F7h	; (020A:0018=0)
020A:3F2A  E9 FE55				jmp	loc_462			; (3D82)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 121

020A:3F2D			loc_491:
020A:3F2D  3C 37				cmp	al,37h			; '7'
020A:3F2F  75 1D				jne	loc_494			; Jump if not equal
020A:3F31  F7 C5 0200				test	bp,200h
020A:3F35  74 07				jz	loc_492			; Jump if zero
020A:3F37  F6 C7 02				test	bh,2
020A:3F3A  74 0C				jz	loc_493			; Jump if zero
020A:3F3C  EB 2F				jmp	short loc_496		; (3F6D)
020A:3F3E			loc_492:
020A:3F3E  F6 C7 10				test	bh,10h
020A:3F41  74 05				jz	loc_493			; Jump if zero
020A:3F43  F6 C7 02				test	bh,2
020A:3F46  74 25				jz	loc_496			; Jump if zero
020A:3F48			loc_493:
020A:3F48  B8 7200				mov	ax,7200h
020A:3F4B  E9 0114				jmp	loc_520			; (4062)
020A:3F4E			loc_494:
020A:3F4E  E8 F5B8		;*		call	sub_32			;*(3509)
020A:3F4E  E8 B8 F5				db	0E8h,0B8h,0F5h
020A:3F51  72 58				jc	loc_501			; Jump if carry Set
020A:3F53  3C 0F				cmp	al,0Fh
020A:3F55  74 16				je	loc_496			; Jump if equal
020A:3F57  3C 35				cmp	al,35h			; '5'
020A:3F59  75 0B				jne	loc_495			; Jump if not equal
020A:3F5B  F6 C7 02				test	bh,2
020A:3F5E  74 06				jz	loc_495			; Jump if zero
020A:3F60  B8 9500				mov	ax,9500h
020A:3F63  E9 00FC				jmp	loc_520			; (4062)
020A:3F66			loc_495:
020A:3F66  BB 0570				mov	bx,570h
020A:3F69  3C 3B				cmp	al,3Bh			; ';'
020A:3F6B  72 74				jb	loc_508			; Jump if below
020A:3F6D			loc_496:
020A:3F6D  BB 0570				mov	bx,570h
020A:3F70  E9 00D8				jmp	loc_519			; (404B)
020A:3F73			loc_497:
020A:3F73  E8 F593		;*		call	sub_32			;*(3509)
020A:3F73  E8 93 F5				db	0E8h, 93h,0F5h
020A:3F76  72 33				jc	loc_501			; Jump if carry Set
020A:3F78  3C 37				cmp	al,37h			; '7'
020A:3F7A  75 32				jne	loc_502			; Jump if not equal
020A:3F7C  F7 C5 0200				test	bp,200h
020A:3F80  74 07				jz	loc_498			; Jump if zero
020A:3F82  F6 C7 02				test	bh,2
020A:3F85  74 0E				jz	loc_499			; Jump if zero
020A:3F87  EB 4B				jmp	short loc_505		; (3FD4)
020A:3F89			loc_498:
020A:3F89  F6 C7 10				test	bh,10h
020A:3F8C  74 07				jz	loc_499			; Jump if zero
020A:3F8E  F6 C7 02				test	bh,2
020A:3F91  75 07				jnz	loc_500			; Jump if not zero
020A:3F93  EB 3F				jmp	short loc_505		; (3FD4)
020A:3F95			loc_499:
020A:3F95  F6 C3 03				test	bl,3
020A:3F98  74 3A				jz	loc_505			; Jump if zero
020A:3F9A			loc_500:
020A:3F9A  80 26 0096 FC			and	byte ptr ds:[96h],0FCh	; (020A:0096=0)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 122

020A:3F9F  B4 03				mov	ah,3
020A:3FA1  C4					db	0C4h
020A:3FA2  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3FA4  55					push	bp
020A:3FA5  CD 05				int	5			; Print screen (status at 50:0h)
020A:3FA7  5D					pop	bp
020A:3FA8  E9 FDD7				jmp	loc_462			; (3D82)
020A:3FAB			loc_501:
020A:3FAB  E9 FDB4				jmp	loc_460			; (3D62)
020A:3FAE			loc_502:
020A:3FAE  3C 3A				cmp	al,3Ah			; ':'
020A:3FB0  77 31				ja	loc_509			; Jump if above
020A:3FB2  F6 C7 08				test	bh,8
020A:3FB5  75 F4				jnz	loc_501			; Jump if not zero
020A:3FB7  3C 35				cmp	al,35h			; '5'
020A:3FB9  75 05				jne	loc_503			; Jump if not equal
020A:3FBB  F6 C7 02				test	bh,2
020A:3FBE  75 14				jnz	loc_505			; Jump if not zero
020A:3FC0			loc_503:
020A:3FC0  B9 001A				mov	cx,1Ah
020A:3FC3  BF 052A				mov	di,52Ah
020A:3FC6  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3FC8  75 05				jnz	loc_504			; Jump if not zero
020A:3FCA  F6 C3 40				test	bl,40h			; '@'
020A:3FCD  75 0A				jnz	loc_506			; Jump if not zero
020A:3FCF			loc_504:
020A:3FCF  F6 C3 03				test	bl,3
020A:3FD2  75 0A				jnz	loc_507			; Jump if not zero
020A:3FD4			loc_505:
020A:3FD4  BB 05EE				mov	bx,5EEh
020A:3FD7  EB 5D				jmp	short loc_518		; (4036)
020A:3FD9			loc_506:
020A:3FD9  F6 C3 03				test	bl,3
020A:3FDC  75 F6				jnz	loc_505			; Jump if not zero
020A:3FDE			loc_507:
020A:3FDE  BB 066C				mov	bx,66Ch
020A:3FE1			loc_508:
020A:3FE1  EB 53				jmp	short loc_518		; (4036)
020A:3FE3			loc_509:
020A:3FE3  3C 44				cmp	al,44h			; 'D'
020A:3FE5  77 02				ja	loc_510			; Jump if above
020A:3FE7  EB 43				jmp	short loc_517		; (402C)
020A:3FE9			loc_510:
020A:3FE9  3C 53				cmp	al,53h			; 'S'
020A:3FEB  77 31				ja	loc_515			; Jump if above
020A:3FED  3C 4A				cmp	al,4Ah			; 'J'
020A:3FEF  74 ED				je	loc_507			; Jump if equal
020A:3FF1  3C 4E				cmp	al,4Eh			; 'N'
020A:3FF3  74 E9				je	loc_507			; Jump if equal
020A:3FF5  F6 C7 02				test	bh,2
020A:3FF8  75 0A				jnz	loc_511			; Jump if not zero
020A:3FFA  F6 C3 20				test	bl,20h			; ' '
020A:3FFD  75 18				jnz	loc_513			; Jump if not zero
020A:3FFF  F6 C3 03				test	bl,3
020A:4002  75 18				jnz	loc_514			; Jump if not zero
020A:4004			loc_511:
020A:4004  3C 4C				cmp	al,4Ch			; 'L'
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 123

020A:4006  75 0A				jne	loc_512			; Jump if not equal
020A:4008  F7 C5 8000				test	bp,8000h
020A:400C  74 57				jz	loc_521			; Jump if zero
020A:400E  B0 F0				mov	al,0F0h
020A:4010  EB 50				jmp	short loc_520		; (4062)
020A:4012			loc_512:
020A:4012  BB 05EE				mov	bx,5EEh
020A:4015  EB 34				jmp	short loc_519		; (404B)
020A:4017			loc_513:
020A:4017  F6 C3 03				test	bl,3
020A:401A  75 E8				jnz	loc_511			; Jump if not zero
020A:401C			loc_514:
020A:401C  EB C0				jmp	short loc_507		; (3FDE)
020A:401E			loc_515:
020A:401E  3C 56				cmp	al,56h			; 'V'
020A:4020  75 04				jne	loc_516			; Jump if not equal
020A:4022  B0 3A				mov	al,3Ah			; ':'
020A:4024  EB 88				jmp	short loc_502		; (3FAE)
020A:4026			loc_516:
020A:4026  F7 C5 8000				test	bp,8000h
020A:402A  74 39				jz	loc_521			; Jump if zero
020A:402C			loc_517:
020A:402C  F6 C3 03				test	bl,3
020A:402F  74 D3				jz	loc_511			; Jump if zero
020A:4031  BB 066C				mov	bx,66Ch
020A:4034  EB 15				jmp	short loc_519		; (404B)
020A:4036			loc_518:
020A:4036  FE C8				dec	al
020A:4038  2E: D7				xlat cs:[bx]			; al=[al+[bx]] table
020A:403A  F6 06 0096 02			test	byte ptr ds:[96h],2	; (020A:0096=0)
020A:403F  74 21				jz	loc_520			; Jump if zero
020A:4041  F7 C5 8000				test	bp,8000h
020A:4045  74 1B				jz	loc_520			; Jump if zero
020A:4047  B4 E0				mov	ah,0E0h
020A:4049  EB 17				jmp	short loc_520		; (4062)
020A:404B			loc_519:
020A:404B  FE C8				dec	al
020A:404D  2E: D7				xlat cs:[bx]			; al=[al+[bx]] table
020A:404F  8A E0				mov	ah,al
020A:4051  32 C0				xor	al,al			; Zero register
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_36		proc	near
020A:4053  F6 06 0096 02			test	byte ptr ds:[96h],2	; (F790:0096=8Eh)
020A:4058  74 08				jz	loc_520			; Jump if zero
020A:405A  F7 C5 8000				test	bp,8000h
020A:405E  74 02				jz	loc_520			; Jump if zero
020A:4060  B0 E0				mov	al,0E0h
020A:4062			loc_520:
020A:4062  E8 0004				call	sub_37			; (4069)
020A:4065			loc_521:
020A:4065  E9 FCFA				jmp	loc_460			; (3D62)
				sub_36		endp
  
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 124

020A:4068  00 80 FFFC				add	[bx+si-4],al
020A:406C  74 48				jz	loc_526			; Jump if zero
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_38		proc	near
020A:406E  56					push	si
020A:406F  53					push	bx
020A:4070  1E					push	ds
020A:4071  BB 0040				mov	bx,40h
020A:4074  8E DB				mov	ds,bx
020A:4076  8B 1E 001C				mov	bx,word ptr ds:[1Ch]	; (0040:001C=26h)
020A:407A  8B F3				mov	si,bx
020A:407C  43					inc	bx
020A:407D  43					inc	bx
020A:407E  F7 C5 0800				test	bp,800h
020A:4082  75 0B				jnz	loc_522			; Jump if not zero
020A:4084  81 FB 003E				cmp	bx,3Eh
020A:4088  75 0F				jne	loc_523			; Jump if not equal
020A:408A  BB 001E				mov	bx,1Eh
020A:408D  EB 0A				jmp	short loc_523		; (4099)
020A:408F			loc_522:
020A:408F  3B 1E 0082				cmp	bx,word ptr ds:[82h]	; (0040:0082=3Eh)
020A:4093  75 04				jne	loc_523			; Jump if not equal
020A:4095  8B 1E 0080				mov	bx,word ptr ds:[80h]	; (0040:0080=1Eh)
020A:4099			loc_523:
020A:4099  3B 1E 001A				cmp	bx,word ptr ds:[1Ah]	; (0040:001A=26h)
020A:409D  74 0E				je	loc_524			; Jump if equal
020A:409F  89 04				mov	[si],ax
020A:40A1  89 1E 001C				mov	word ptr ds:[1Ch],bx	; (0040:001C=26h)
020A:40A5  2E: C6 06 0CA8 01			mov	cs:data_188,1		; (020A:0CA8=0A2h)
020A:40AB  EB 06				jmp	short loc_525		; (40B3)
020A:40AD			loc_524:
020A:40AD  2E: C6 06 06EA 01			mov	byte ptr cs:[6EAh],1	; (020A:06EA=32h)
020A:40B3			loc_525:
020A:40B3  1F					pop	ds
020A:40B4  5B					pop	bx
020A:40B5  5E					pop	si
020A:40B6			loc_526:
020A:40B6  C3					retn
				sub_38		endp
  
020A:40B7  2E: 80 3E 06EA 01			cmp	byte ptr cs:[6EAh],1	; (020A:06EA=32h)
020A:40BD  75 0C				jne	loc_527			; Jump if not equal
020A:40BF  2E: C6 06 06EA 00			mov	byte ptr cs:[6EAh],0	; (020A:06EA=32h)
020A:40C5  B4 0E				mov	ah,0Eh
020A:40C7  B0 07				mov	al,7
020A:40C9  CD 10				int	10h			; Video display   ah=functn 0Eh
										;  write char al, teletype mode
020A:40CB			loc_527:
020A:40CB  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 125

  
				sub_39		proc	near
020A:40CC  E6 64				out	64h,al			; port 64h, kybd cntrlr functn
										;  al = 0AEh, enable keyboard
020A:40CE  C3					retn
				sub_39		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_40		proc	near
020A:40CF  F6 06 0097 40			test	byte ptr ds:[97h],40h	; (0040:0097=0) '@'
020A:40D4  75 1B				jnz	loc_528			; Jump if not zero
020A:40D6  80 0E 0097 40			or	byte ptr ds:[97h],40h	; (0040:0097=0) '@'
020A:40DB  E8 0014				call	sub_41			; (40F2)
020A:40DE  80 26 0097 F8			and	byte ptr ds:[97h],0F8h	; (0040:0097=0)
020A:40E3  08 06 0097				or	byte ptr ds:[97h],al	; (0040:0097=0)
020A:40E7  B4 03				mov	ah,3
020A:40E9  C4					db	0C4h
020A:40EA  C4 16 2680				les	dx,dword ptr ds:[2680h]	; (0040:2680=1174h) Load 32 bit ptr
020A:40EE  97					xchg	ax,di
020A:40EF  00 3F				add	[bx],bh
020A:40F1			loc_528:
020A:40F1  C3					retn
				sub_40		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_41		proc	near
020A:40F2  51					push	cx
020A:40F3  A0 0017				mov	al,byte ptr ds:[17h]	; (0040:0017=0)
020A:40F6  24 70				and	al,70h			; 'p'
020A:40F8  B1 04				mov	cl,4
020A:40FA  D2 C0				rol	al,cl			; Rotate
020A:40FC  24 07				and	al,7
020A:40FE  59					pop	cx
020A:40FF  C3					retn
				sub_41		endp
  
020A:4100  50					push	ax
020A:4101  51					push	cx
020A:4102  B9 03E3				mov	cx,3E3h
  
020A:4105			locloop_529:
020A:4105  E4 61				in	al,61h			; port 61h, 8255 port B, read
020A:4107  24 10				and	al,10h
020A:4109  3A C4				cmp	al,ah
020A:410B  74 F8				je	locloop_529		; Jump if equal
020A:410D  8A E0				mov	ah,al
020A:410F  E4 64				in	al,64h			; port 64h, keyboard status
020A:4111  A8 02				test	al,2
020A:4113  E0 F0				loopnz	locloop_529		; Loop if zf=0, cx>0
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 126

  
020A:4115  59					pop	cx
020A:4116  58					pop	ax
020A:4117  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_42		proc	near
020A:4118  1E					push	ds
020A:4119  50					push	ax
020A:411A  B8 0040				mov	ax,40h
020A:411D  8E D8				mov	ds,ax
020A:411F  9F					lahf				; Load ah from flags
020A:4120  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:4126  75 14				jnz	loc_531			; Jump if not zero
020A:4128  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:412E  75 0C				jnz	loc_531			; Jump if not zero
020A:4130  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:4137			loc_530:
020A:4137  9E					sahf				; Store ah into flags
020A:4138  58					pop	ax
020A:4139  1F					pop	ds
020A:413A  EB 03				jmp	short loc_532		; (413F)
020A:413C			loc_531:
020A:413C  FB					sti				; Enable interrupts
020A:413D  EB F8				jmp	short loc_530		; (4137)
020A:413F			loc_532:
020A:413F  C3					retn
				sub_42		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_43		proc	near
020A:4140  1E					push	ds
020A:4141  50					push	ax
020A:4142  40B8					dw	40B8h
020A:4144  00 8E 9FD8				add	[bp-6028h],cl
020A:4148  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (020A:0314=3231h)
020A:414E  75 0C				jnz	loc_534			; Jump if not zero
020A:4150  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (020A:0314=3231h)
020A:4157			loc_533:
020A:4157  9E					sahf				; Store ah into flags
020A:4158  58					pop	ax
020A:4159  1F					pop	ds
020A:415A  EB 03				jmp	short loc_535		; (415F)
020A:415C			loc_534:
020A:415C  FA					cli				; Disable interrupts
020A:415D  EB F8				jmp	short loc_533		; (4157)
020A:415F			loc_535:
020A:415F  C3					retn
				sub_43		endp
  
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 127

020A:4160			loc_536:
020A:4160  1E					push	ds
020A:4161  50					push	ax
020A:4162  B8 0040				mov	ax,40h
020A:4165  8E D8				mov	ds,ax
020A:4167  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:416D  75 4F				jnz	loc_544			; Jump if not zero
020A:416F  55					push	bp
020A:4170  8B EC				mov	bp,sp
020A:4172  8B 46 0A				mov	ax,[bp+0Ah]
020A:4175  5D					pop	bp
020A:4176  A9 0100				test	ax,100h
020A:4179  75 43				jnz	loc_544			; Jump if not zero
020A:417B  A9 0200				test	ax,200h
020A:417E  74 22				jz	loc_540			; Jump if zero
020A:4180  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:4187  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:418D  75 2F				jnz	loc_544			; Jump if not zero
020A:418F			loc_537:
020A:418F  86 E0				xchg	ah,al
020A:4191  FC					cld				; Clear direction
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_44		proc	near
020A:4192  A8 04				test	al,4
020A:4194  75 25				jnz	loc_543			; Jump if not zero
020A:4196			loc_538:
020A:4196  A8 08				test	al,8
020A:4198  75 11				jnz	loc_541			; Jump if not zero
020A:419A  70 19				jo	loc_542			; Jump if overflow=1
020A:419C			loc_539:
020A:419C  9E					sahf				; Store ah into flags
020A:419D  58					pop	ax
020A:419E  1F					pop	ds
020A:419F  CA 0002				retf	2			; Return far
020A:41A2			loc_540:
020A:41A2  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (020A:0314=3231h)
020A:41A9  EB E4				jmp	short loc_537		; (418F)
020A:41AB			loc_541:
020A:41AB  70 EF				jo	loc_539			; Jump if overflow=1
020A:41AD  50					push	ax
020A:41AE  B0 7F				mov	al,7Fh
020A:41B0  04 02				add	al,2
020A:41B2  58					pop	ax
020A:41B3  EB E7				jmp	short loc_539		; (419C)
020A:41B5			loc_542:
020A:41B5  50					push	ax
020A:41B6  32 C0				xor	al,al			; Zero register
020A:41B8  58					pop	ax
020A:41B9  EB E1				jmp	short loc_539		; (419C)
020A:41BB			loc_543:
020A:41BB  FD					std				; Set direction flag
020A:41BC  EB D8				jmp	short loc_538		; (4196)
				sub_44		endp
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 128

  
020A:41BE			loc_544:
020A:41BE  58					pop	ax
020A:41BF  1F					pop	ds
020A:41C0  CF					iret				; Interrupt return
020A:41C1  000F[00]				db	15 dup (0)
020A:41D0  80 FC AD				cmp	ah,0ADh
020A:41D3  74 05				je	loc_546			; Jump if equal
020A:41D5			loc_545:
020A:41D5  2E: FF 2E 0EC9			jmp	dword ptr cs:[0EC9h]	; (020A:0EC9=0B901h)
020A:41DA			loc_546:
020A:41DA  55					push	bp
020A:41DB  8B EC				mov	bp,sp
020A:41DD  83 66 06 FE				and	word ptr [bp+6],0FFFEh
020A:41E1  E8 0003				call	sub_45			; (41E7)
020A:41E4  5D					pop	bp
020A:41E5  EB EE				jmp	short loc_545		; (41D5)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_45		proc	near
020A:41E7  3C 80				cmp	al,80h
020A:41E9  75 0C				jne	loc_547			; Jump if not equal
020A:41EB  B8 FFFF				mov	ax,0FFFFh
020A:41EE  BB 0100				mov	bx,100h
020A:41F1  BF 0EC5				mov	di,0EC5h
020A:41F4  0E					push	cs
020A:41F5  07					pop	es
020A:41F6  C3					retn
020A:41F7			loc_547:
020A:41F7  3C 81				cmp	al,81h
020A:41F9  75 28				jne	loc_552			; Jump if not equal
020A:41FB  2E: 8B 36 0EE3			mov	si,cs:data_201		; (020A:0EE3=0A6F3h)
020A:4200			loc_548:
020A:4200  83 FE FF				cmp	si,0FFFFh
020A:4203  74			data_464	db	74h
020A:4204  16			data_465	db	16h
020A:4205  2E			data_466	db	2Eh
020A:4206  3B 5C 02				cmp	bx,[si+2]
020A:4209  75 0B				jne	loc_549			; Jump if not equal
020A:420B  2E: 89 36 0EE1			mov	word ptr cs:[0EE1h],si	; (020A:0EE1=0FC00h)
020A:4210  2E: 89 1E 0EDD			mov	word ptr cs:[0EDDh],bx	; (020A:0EDD=1C5h)
020A:4215  C3					retn
020A:4216			loc_549:
020A:4216  2E: 8B 34				mov	si,cs:[si]
020A:4219  EB E5				jmp	short loc_548		; (4200)
020A:421B			loc_550:
020A:421B  B8 0001				mov	ax,1
020A:421E			loc_551:
020A:421E  83 4E 06 01				or	word ptr [bp+6],1
020A:4222  C3					retn
020A:4223			loc_552:
020A:4223  3C 82				cmp	al,82h
020A:4225  75 46				jne	loc_557			; Jump if not equal
020A:4227  FE C3				inc	bl
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 129

020A:4229  80 FB 02				cmp	bl,2
020A:422C  FE CB				dec	bl
020A:422E  73 EE				jnc	loc_551			; Jump if carry=0
020A:4230  2E: 88 1E 06EF			mov	byte ptr cs:[6EFh],bl	; (020A:06EF=0CDh)
020A:4235  EB 36				jmp	short loc_557		; (426D)
020A:4237			loc_553:
020A:4237  3C 83				cmp	al,83h
020A:4239  75 1A				jne	loc_556			; Jump if not equal
020A:423B			loc_554:
020A:423B  33 C0				xor	ax,ax			; Zero register
020A:423D  2E: 0A 06 06EF			or	al,byte ptr cs:[6EFh]	; (020A:06EF=0CDh)
020A:4242  74 10				jz	loc_555			; Jump if zero
020A:4244  2E: F7 06 0EEB 1000			test	cs:data_204,1000h	; (020A:0EEB=16FFh)
020A:424B  74 07				jz	loc_555			; Jump if zero
020A:424D  2E: A0 0116				mov	al,byte ptr cs:data_117+2	; (020A:0116=0)
020A:4251  24 01				and	al,1
020A:4253  40					inc	ax
020A:4254			loc_555:
020A:4254  C3					retn
020A:4255			loc_556:
020A:4255  3C 84				cmp	al,84h
020A:4257  75 14				jne	loc_557			; Jump if not equal
020A:4259  2E: 8A 3E 0116			mov	bh,byte ptr cs:data_117+2	; (020A:0116=0)
020A:425E  F6 C3 FE				test	bl,0FEh
020A:4261  75 D4				jnz	loc_553			; Jump if not zero
020A:4263  80 E7 FE				and	bh,0FEh
020A:4266  0A FB				or	bh,bl
020A:4268  2E: 88 3E 0116			mov	byte ptr cs:data_117+2,bh	; (020A:0116=0)
020A:426D			loc_557:
020A:426D  C3					retn
				sub_45		endp
  
020A:426E  00 00				add	[bx+si],al
020A:4270  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:4272  26: C6 06 0ED5 01			mov	es:data_198,1		; (020A:0ED5=1)
020A:4278  CD 21				int	21h			; DOS Services  ah=function 00h
										;  terminate, cs=progm seg prefx
020A:427A  53					push	bx
020A:427B  48					dec	ax
020A:427C  41					inc	cx
020A:427D  52					push	dx
020A:427E  45					inc	bp
020A:427F  44					inc	sp
020A:4280  20 44 41				and	[si+41h],al
020A:4283  54					push	sp
020A:4284  41					inc	cx
020A:4285  0A 04				or	al,[si]
020A:4287  0A 02				or	al,[bp+si]
020A:4289  50					push	ax
020A:428A  09 AC 00D3				or	word ptr ds:[0D3h][si],bp	; (020A:00D3=40h)
020A:428E  00 00				add	[bx+si],al
020A:4290  00 00				add	[bx+si],al
020A:4292  10 40 80				adc	[bx+si-80h],al
020A:4295  01 00				add	[bx+si],ax
020A:4297  00 00				add	[bx+si],al
020A:4299  00 00				add	[bx+si],al
020A:429B  52					push	dx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 130

020A:429C  55					push	bp
020A:429D  62					db	62h
020A:429E  03 00				add	ax,[bx+si]
020A:42A0  00 62 0F				add	[bp+si+0Fh],ah
020A:42A3  62					db	62h
020A:42A4  0F					pop	cs			; Dangerous 8088 only
020A:42A5  C5 17				lds	dx,dword ptr [bx]	; Load 32 bit ptr
020A:42A7  F4					hlt				; Halt processor
020A:42A8  0E					push	cs
020A:42A9  48					dec	ax
020A:42AA  0F					pop	cs			; Dangerous 8088 only
020A:42AB  00 30				add	[bx+si],dh
020A:42AD  00 3B				add	[bp+di],bh
020A:42AF  3C 00				cmp	al,0
020A:42B1  0000			data_468	dw	0
020A:42B3  00			data_469	db	0
020A:42B4  54			data_470	db	54h
020A:42B5  00 00				add	[bx+si],al
020A:42B7  30 50 80				xor	[bx+si-80h],dl
020A:42BA  04 04				add	al,4
020A:42BC  0C 20				or	al,20h			; ' '
020A:42BE  14 40				adc	al,40h			; '@'
020A:42C0  00 02				add	[bp+si],al
020A:42C2  A0 30B0				mov	al,byte ptr ds:[30B0h]	; (0010:30B0=55h)
020A:42C5  00 01				add	[bx+di],al
020A:42C7  A0 8F60				mov	al,byte ptr ds:[8F60h]	; (0010:8F60=1)
020A:42CA  3030			data_472	dw	3030h
020A:42CC  0092			data_473	dw	92h
020A:42CE  3000			data_474	dw	3000h
020A:42D0  0C 40				or	al,40h			; '@'
020A:42D2  0C 20				or	al,20h			; ' '
020A:42D4  05 1B01				add	ax,1B01h
020A:42D7  02 04				add	al,[si]
020A:42D9  80 40 06 00				add	byte ptr [bx+si+6],0
020A:42DD  40					inc	ax
020A:42DE  40					inc	ax
020A:42DF  03 20				add	sp,[bx+si]
020A:42E1  40					inc	ax
020A:42E2  04 30				add	al,30h			; '0'
020A:42E4  20 40 05				and	[bx+si+5],al
020A:42E7  00 40 40				add	[bx+si+40h],al
020A:42EA  04 20				add	al,20h			; ' '
020A:42EC  40					inc	ax
020A:42ED  03 30				add	si,[bx+si]
020A:42EF  30 30				xor	[bx+si],dh
020A:42F1  20 80 6000				and	byte ptr ds:[6000h][bx+si],al	; (0010:6000=0B0h)
020A:42F5  04 80				add	al,80h
020A:42F7  40					inc	ax
020A:42F8  07					pop	es
020A:42F9  30 20				xor	[bx+si],ah
020A:42FB  03 08				add	cx,[bx+si]
020A:42FD  1C 80				sbb	al,80h
020A:42FF  0740			data_475	dw	740h
020A:4301  3030			data_476	dw	3030h
020A:4303  30 30				xor	[bx+si],dh
020A:4305  92					xchg	ax,dx
020A:4306  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 131

020A:4308  FF					db	0FFh
020A:4309  FF					db	0FFh
020A:430A  FF					db	0FFh
020A:430B  FF			data_477	db	0FFh
020A:430C  14 00				adc	al,0
020A:430E  FF8F			data_478	dw	0FF8Fh
020A:4310  FF					db	0FFh
020A:4311  FF					db	0FFh
020A:4312  FF 03				inc	word ptr [bp+di]
020A:4314  00 2A				add	[bp+si],ch
020A:4316  05 3600				add	ax,3600h
020A:4319  05			data_482	db	5
020A:431A  01 1D				add	[di],bx
020A:431C  05 0001				add	ax,1
020A:431F  00 00				add	[bx+si],al
020A:4321  00 48 0F				add	[bx+si+0Fh],cl
020A:4324  62					db	62h
020A:4325  03 0F				add	cx,[bx]
020A:4327  00 05				add	[di],al
020A:4329  FF					db	0FFh
020A:432A  FF					db	0FFh
020A:432B  FF					db	0FFh
020A:432C  FF 06 C000				inc	word ptr ds:[0C000h]	; (0010:C000=1E8Bh)
020A:4330  01 35				add	[di],si
020A:4332  2E: 00 00				add	cs:[bx+si],al
020A:4335  1B 00				sbb	ax,[bx+si]
020A:4337  06					push	es
020A:4338  FF					db	0FFh
020A:4339  FF					db	0FFh
020A:433A  FF					db	0FFh
020A:433B  FF 12				call	word ptr [bp+si]
020A:433D  00 C0				add	al,al
020A:433F  07					pop	es
020A:4340  03 22				add	sp,[bp+si]
020A:4342  04 FC				add	al,0FCh
020A:4344  05 073B				add	ax,73Bh
020A:4347  3A 08				cmp	cl,[bx+si]
020A:4349  3F					aas				; Ascii adjust
020A:434A  2B 2F				sub	bp,[bx]
020A:434C  35 002C				xor	ax,2Ch
020A:434F  00 25				add	[di],ah
020A:4351  00 07				add	[bx],al
020A:4353  FF					db	0FFh
020A:4354  FF					db	0FFh
020A:4355  FF					db	0FFh
020A:4356  FF 1C				call	dword ptr [si]		;*
020A:4358  00 C0				add	al,al
020A:435A  0C 03				or	al,3
020A:435C  40					inc	ax
020A:435D  04 23				add	al,23h			; '#'
020A:435F  05 07FD				add	ax,7FDh
020A:4362  5E					pop	si
020A:4363  08 26 2409				or	byte ptr ds:[2409h],ah	; (0010:2409=5)
020A:4367  1A 5B 1B				sbb	bl,[bp+di+1Bh]
020A:436A  5D					pop	bp
020A:436B  2B 7C 33				sub	di,[si+33h]
020A:436E  3C 34				cmp	al,34h			; '4'
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 132

020A:4370  3E					db	3Eh
020A:4371  35 002F				xor	ax,2Fh
020A:4374  00 43 00				add	[bp+di+0],al
020A:4377  03 FF				add	di,di
020A:4379  FF					db	0FFh
020A:437A  FF					db	0FFh
020A:437B  FF 11				call	word ptr [bx+di]	;*
020A:437D  00 80 1B10				add	byte ptr ds:[1B10h][bx+si],al	; (0010:1B10=10h)
020A:4381  A9 E3E6				test	ax,0E3E6h
020A:4384  AA					stosb				; Store al to es:[di]
020A:4385  A5					movsw				; Mov [si] to es:[di]
020A:4386  AD					lodsw				; String [si] to ax
020A:4387  A3 E9E8				mov	word ptr ds:[0E9E8h],ax	; (0010:E9E8=0BE3h)
020A:438A  A7					cmpsw				; Cmp [si] to es:[di]
020A:438B  E5 EA				in	ax,0EAh			; port 0EAh
020A:438D  0A 00				or	al,[bx+si]
020A:438F  80 1E E422 EB			sbb	byte ptr ds:[0E422h],0EBh	; (0010:E422=48h)
020A:4394  A2 AFA0				mov	byte ptr ds:[0AFA0h],al	; (0010:AFA0=1Dh)
020A:4397  0B 00				or	ax,[bx+si]
020A:4399  80 24 29				and	byte ptr [si],29h	; ')'
020A:439C  AE					scasb				; Scan es:[di] for al
020A:439D  AB					stosw				; Store ax to es:[di]
020A:439E  A4					movsb				; Mov [si] to es:[di]
020A:439F  A6					cmpsb				; Cmp [si] to es:[di]
020A:43A0  ED					in	ax,dx			; port 41E5h
020A:43A1  F1					db	0F1h
020A:43A2  0E					push	cs
020A:43A3  00 80 342C				add	byte ptr ds:[342Ch][bx+si],al	; (0010:342C=0)
020A:43A7  EF					out	dx,ax			; port 41E5h
020A:43A8  E7 E1				out	0E1h,ax			; port 0E1h, Memory encode reg1
020A:43AA  AC					lodsb				; String [si] to al
020A:43AB  A8 E2				test	al,0E2h
020A:43AD  EC					in	al,dx			; port 41E5h
020A:43AE  A1 06EE				mov	ax,word ptr ds:[6EEh]	; (0010:06EE=15C0h)
020A:43B1  00 60 01				add	[bx+si+1],ah
020A:43B4  23 E0				and	sp,ax
020A:43B6  00 00				add	[bx+si],al
020A:43B8  3E					db	3Eh
020A:43B9  00 04				add	[si],al
020A:43BB  FF					db	0FFh
020A:43BC  FF					db	0FFh
020A:43BD  FF					db	0FFh
020A:43BE  FF 11				call	word ptr [bx+di]	;*
020A:43C0  00 80 1B10				add	byte ptr ds:[1B10h][bx+si],al	; (0010:1B10=10h)
020A:43C4  89 96 8A93				mov	[bp-756Dh],dx
020A:43C8  85 8D 9883				test	cx,word ptr ds:[9883h][di]	; (0010:9883=3E80h)
020A:43CC  99					cwd				; Word to double word
020A:43CD  87 95 109A				xchg	dx,word ptr ds:[109Ah][di]	; (0010:109A=0)
020A:43D1  00 80 281E				add	byte ptr ds:[281Eh][bx+si],al	; (0010:281E=0)
020A:43D5  94					xchg	ax,sp
020A:43D6  9B					db	9Bh
020A:43D7  82 80 908F 8E			add	byte ptr ds:[908Fh][bx+si],8Eh	; (0010:908F=0E9h)
020A:43DC  8B 84 9D86				mov	ax,word ptr ds:[9D86h][si]	; (0010:9D86=3275h)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 133

  
				sub_46		proc	near
020A:43E0  0E					push	cs
020A:43E1  00 80 342C				add	byte ptr ds:[342Ch][bx+si],al	; (020A:342C=0ADh)
020A:43E5  9F					lahf				; Load ah from flags
020A:43E6  97					xchg	ax,di
020A:43E7  91					xchg	ax,cx
020A:43E8  8C 88 9C92				mov	word ptr ds:[9C92h][bx+si],cs	; (020A:9C92=775h)
020A:43EC  81 9E 0006 0160			sbb	word ptr [bp+6],160h
020A:43F2  29 F0				sub	ax,si
020A:43F4  00 00				add	[bx+si],al
020A:43F6  00 00				add	[bx+si],al
020A:43F8  8B 1E 9AC7				mov	bx,word ptr ds:[9AC7h]	; (020A:9AC7=500Fh)
020A:43FC  B4 66				mov	ah,66h			; 'f'
020A:43FE  B0 02				mov	al,2
020A:4400  CD 21				int	21h			; DOS Services  ah=function 66h
										;  get/set global code page
020A:4402  73 40				jnc	loc_562			; Jump if carry=0
020A:4404  3D 0002				cmp	ax,2
020A:4407  75 15				jne	loc_559			; Jump if not equal
020A:4409  B4 59				mov	ah,59h			; 'Y'
020A:440B  33 DB				xor	bx,bx			; Zero register
020A:440D  CD 21				int	21h			; DOS Services  ah=function 59h
										;  get extended error info in ax
020A:440F  3D 000D				cmp	ax,0Dh
020A:4412  75 05				jne	loc_558			; Jump if not equal
020A:4414  BA 8DAD				mov	dx,8DADh
020A:4417  EB 18				jmp	short loc_561		; (4431)
020A:4419			loc_558:
020A:4419  BA 8F8E				mov	dx,8F8Eh
020A:441C  EB 13				jmp	short loc_561		; (4431)
020A:441E			loc_559:
020A:441E  B4 59				mov	ah,59h			; 'Y'
020A:4420  33 DB				xor	bx,bx			; Zero register
020A:4422  CD 21				int	21h			; DOS Services  ah=function 59h
										;  get extended error info in ax
020A:4424  3D 0041				cmp	ax,41h
020A:4427  75 05				jne	loc_560			; Jump if not equal
020A:4429  BA 8D8E				mov	dx,8D8Eh
020A:442C  EB 03				jmp	short loc_561		; (4431)
020A:442E			loc_560:
020A:442E  BA 8D80				mov	dx,8D80h
020A:4431			loc_561:
020A:4431  E9 08E0				jmp	loc_680			; (4D14)
020A:4434  B4 66				mov	ah,66h			; 'f'
020A:4436  B0 01				mov	al,1
020A:4438  CD 21				int	21h			; DOS Services  ah=function 66h
										;  get/set global code page
020A:443A  89 1E 9AC7				mov	word ptr ds:[9AC7h],bx	; (020A:9AC7=500Fh)
020A:443E  BA 8D9C				mov	dx,8D9Ch
020A:4441  E8 2E9D				call	sub_97			; (72E1)
020A:4444			loc_562:
020A:4444  C3					retn
				sub_46		endp
  
020A:4445  1E					push	ds
020A:4446  07					pop	es
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 134

020A:4447  BE 0081				mov	si,81h
020A:444A  BF 930F				mov	di,930Fh
020A:444D  33 C9				xor	cx,cx			; Zero register
020A:444F  33 D2				xor	dx,dx			; Zero register
020A:4451  E8 00E2				call	sub_49			; (4536)
020A:4454  BF 95D8				mov	di,95D8h
020A:4457  3D			data_486	db	3Dh
020A:4458  FF					db	0FFh
020A:4459  FF 74 0E				push	word ptr [si+0Eh]
020A:445C  3D 0000				cmp	ax,0
020A:445F  75 36				jne	loc_568			; Jump if not equal
020A:4461  80 3E A48D 06			cmp	byte ptr data_593,6	; (020A:A48D=59h)
020A:4466  74 09				je	loc_564			; Jump if equal
020A:4468  EB 19				jmp	short loc_565		; (4483)
020A:446A			loc_563:
020A:446A  B4 00				mov	ah,0
020A:446C  B0 2E				mov	al,2Eh			; '.'
020A:446E  AB					stosw				; Store ax to es:[di]
020A:446F  EB 29				jmp	short loc_569		; (449A)
020A:4471			loc_564:
020A:4471  56					push	si
020A:4472  BE A491				mov	si,0A491h
020A:4475  AC					lodsb				; String [si] to al
020A:4476  04 40				add	al,40h			; '@'
020A:4478  AA					stosb				; Store al to es:[di]
020A:4479  B8 2E3A				mov	ax,2E3Ah
020A:447C  AB					stosw				; Store ax to es:[di]
020A:447D  B0 00				mov	al,0
020A:447F  AA					stosb				; Store al to es:[di]
020A:4480  5E					pop	si
020A:4481  EB 0C				jmp	short loc_567		; (448F)
020A:4483			loc_565:
020A:4483  56					push	si
020A:4484  C5 36 A491				lds	si,data_594		; (020A:A491=0DB87h) Load 32 bit ptr
020A:4488			loc_566:
020A:4488  AC					lodsb				; String [si] to al
020A:4489  AA					stosb				; Store al to es:[di]
020A:448A  3C 00				cmp	al,0
020A:448C  75 FA				jne	loc_566			; Jump if not equal
020A:448E  5E					pop	si
020A:448F			loc_567:
020A:448F  BF 930F				mov	di,930Fh
020A:4492  E8 008A				call	sub_48			; (451F)
020A:4495  74 03				jz	loc_569			; Jump if zero
020A:4497			loc_568:
020A:4497  E9 087A				jmp	loc_680			; (4D14)
020A:449A			loc_569:
020A:449A  BE 95D8				mov	si,95D8h
020A:449D  BF 970B				mov	di,970Bh
020A:44A0  B4 60				mov	ah,60h			; '`'
020A:44A2  CD 21				int	21h			; DOS Services  ah=function 60h
										;  resolve path ds:si to es:di
020A:44A4  73 11				jnc	loc_570			; Jump if carry=0
020A:44A6  E8 FB9A		;*		call	sub_35			;*(4043)
020A:44A6  E8 9A FB				db	0E8h, 9Ah,0FBh
020A:44A9  C7 06 9B4D 95D8			mov	word ptr ds:[9B4Dh],95D8h	; (F790:9B4D=13h)
020A:44AF  C6 06 8D23 01			mov	byte ptr ds:[8D23h],1	; (F790:8D23=28h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 135

020A:44B4  E9 085D				jmp	loc_680			; (4D14)
020A:44B7			loc_570:
020A:44B7  C7 06 9B4D 970B			mov	word ptr ds:[9B4Dh],970Bh	; (F790:9B4D=13h)
020A:44BD  BA 8EE8				mov	dx,8EE8h
020A:44C0  E8 04A3				call	sub_69			; (4966)
020A:44C3  E8 2E0C				call	sub_95			; (72D2)
020A:44C6  C3					retn
020A:44C7  1E					push	ds
020A:44C8  8E 1E 995F				mov	ds,data_562		; (020A:995F=4871h)
020A:44CC  80 3E 02B0 00			cmp	byte ptr ds:[2B0h],0	; (4871:02B0=0FFh)
020A:44D1  74 0B				je	loc_571			; Jump if equal
020A:44D3  83 3E 02B1 FF			cmp	word ptr ds:[2B1h],0FFFFh	; (4871:02B1=0FFFFh)
020A:44D8  74 13				je	loc_572			; Jump if equal
020A:44DA  C4					db	0C4h
020A:44DB  C4 54 00				les	dx,dword ptr [si+0]	; Load 32 bit ptr
020A:44DE			loc_571:
020A:44DE  B8 122E				mov	ax,122Eh
020A:44E1  B2 05				mov	dl,5
020A:44E3  8B 3E 02C7				mov	di,word ptr ds:[2C7h]	; (4871:02C7=0FFFFh)
020A:44E7  8E 06 02C9				mov	es,word ptr ds:[2C9h]	; (4871:02C9=0FFFFh)
020A:44EB  CD 2F				int	2Fh			; Multiplex/Spooler al=func 2Eh
020A:44ED			loc_572:
020A:44ED  1F					pop	ds
020A:44EE  E8 031B				call	sub_64			; (480C)
020A:44F1  8E 06 995F				mov	es,data_562		; (020A:995F=4871h)
020A:44F5  26: A1 024B				mov	ax,word ptr es:[24Bh]	; (4871:024B=0FFFFh)
020A:44F9  26: 16A3		data_488	dw	16A3h
020A:44FC  2600			data_489	dw	2600h
020A:44FE  4DA1			data_490	dw	4DA1h
020A:4500  02			data_491	db	2
020A:4501  26: A3 000A				mov	word ptr es:[0Ah],ax	; (4871:000A=0FFFFh)
020A:4505  26: A1 024F				mov	ax,word ptr es:[24Fh]	; (4871:024F=0FFFFh)
020A:4509  A326			data_494	dw	0A326h
020A:450B  000C			data_495	dw	0Ch
020A:450D  8E06			data_496	dw	8E06h
020A:450F  6F06			data_497	dw	6F06h
020A:4511  B499			data_498	dw	0B499h
020A:4513  49					dec	cx
020A:4514  CD 21				int	21h			; DOS Services  ah=function FFh
020A:4516  07					pop	es
020A:4517  B4 4C				mov	ah,4Ch			; 'L'
020A:4519  26: A0 02A7				mov	al,byte ptr es:[2A7h]	; (0000:02A7=0)
020A:451D  CD 21				int	21h			; DOS Services  ah=function 4Ch
										;  terminate with al=return code
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_48		proc	near
020A:451F  33 D2				xor	dx,dx			; Zero register
020A:4521  89 36 9AC5				mov	word ptr ds:[9AC5h],si	; (F790:9AC5=0E913h)
020A:4525  E8 2D9E				call	sub_94			; (72C6)
020A:4528  3C FF				cmp	al,0FFh
020A:452A  74 09				je	loc_574			; Jump if equal
020A:452C  3D 0000				cmp	ax,0
020A:452F  75 01				jne	loc_573			; Jump if not equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 136

020A:4531  40					inc	ax
020A:4532			loc_573:
020A:4532  E8 0015				call	sub_50			; (454A)
020A:4535			loc_574:
020A:4535  C3					retn
				sub_48		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_49		proc	near
020A:4536  89 36 9AC5				mov	data_571,si		; (020A:9AC5=4489h)
020A:453A  E8 2D89				call	sub_94			; (72C6)
020A:453D  3C FF				cmp	al,0FFh
020A:453F  74 08				je	loc_575			; Jump if equal
020A:4541  3D 0000				cmp	ax,0
020A:4544  74 03				je	loc_575			; Jump if equal
020A:4546  E8 0001				call	sub_50			; (454A)
020A:4549			loc_575:
020A:4549  C3					retn
				sub_49		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_50		proc	near
020A:454A  C6 06 8D1F 02			mov	byte ptr ds:[8D1Fh],2	; (F790:8D1F=2Fh)
020A:454F  BA 8D21				mov	dx,8D21h
020A:4552  C6 04 00				mov	byte ptr [si],0
020A:4555  A3 8D21				mov	word ptr ds:[8D21h],ax	; (F790:8D21=2930h)
020A:4558  3D 0002				cmp	ax,2
020A:455B  74 0D				je	loc_576			; Jump if equal
020A:455D  8B 36 9AC5				mov	si,word ptr ds:[9AC5h]	; (F790:9AC5=0E913h)
020A:4561  89 36 9B4D				mov	word ptr ds:[9B4Dh],si	; (F790:9B4D=13h)
020A:4565  C6 06 8D23 01			mov	byte ptr ds:[8D23h],1	; (F790:8D23=28h)
020A:456A			loc_576:
020A:456A  46					inc	si
020A:456B  C3					retn
				sub_50		endp
  
020A:456C  E8 00FE				call	sub_51			; (466D)
020A:456F  E8 01B5				call	sub_57			; (4727)
020A:4572  56					push	si
020A:4573  E8 01A3				call	sub_56			; (4719)
020A:4576  5E					pop	si
020A:4577  75 01				jnz	loc_578			; Jump if not zero
020A:4579			loc_577:
020A:4579  C3					retn
020A:457A			loc_578:
020A:457A  E8 017D				call	sub_55			; (46FA)
020A:457D  E8 0199				call	sub_56			; (4719)
020A:4580  56					push	si
020A:4581  EB 53				jmp	short loc_584		; (45D6)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 137

020A:4583			loc_579:
020A:4583  E9 00BE				jmp	loc_591			; (4644)
020A:4586  E8 0190				call	sub_56			; (4719)
020A:4589  74			data_499	db	74h
020A:458A  F8					clc				; Clear carry flag
020A:458B  33 DB				xor	bx,bx			; Zero register
020A:458D  56					push	si
020A:458E			loc_580:
020A:458E  AC					lodsb				; String [si] to al
020A:458F  3C 0D				cmp	al,0Dh
020A:4591  74 0F				je	loc_581			; Jump if equal
020A:4593  3C 3D				cmp	al,3Dh			; '='
020A:4595  75 F7				jne	loc_580			; Jump if not equal
020A:4597  FE C3				inc	bl
020A:4599  80 3C 0D				cmp	byte ptr [si],0Dh
020A:459C  75 F0				jne	loc_580			; Jump if not equal
020A:459E  FE C7				inc	bh
020A:45A0  EB EC				jmp	short loc_580		; (458E)
020A:45A2			loc_581:
020A:45A2  5E					pop	si
020A:45A3  FE CB				dec	bl
020A:45A5  74 06				jz	loc_582			; Jump if zero
020A:45A7  BA 8DB9				mov	dx,8DB9h
020A:45AA  E9 0767				jmp	loc_680			; (4D14)
020A:45AD			loc_582:
020A:45AD  53					push	bx
020A:45AE  E8 00BF				call	sub_52			; (4670)
020A:45B1  5B					pop	bx
020A:45B2  FE CF				dec	bh
020A:45B4  74 C3				jz	loc_ret_577		; Jump if zero
020A:45B6  E8 016E				call	sub_57			; (4727)
020A:45B9  8B DF				mov	bx,di
020A:45BB  E8 013C				call	sub_55			; (46FA)
020A:45BE  56					push	si
020A:45BF  87 DF				xchg	bx,di
020A:45C1  C6 06 9261 00			mov	byte ptr data_558,0	; (020A:9261=7Dh)
020A:45C6  BE 8F9D				mov	si,8F9Dh
020A:45C9  B9 0004				mov	cx,4
020A:45CC  F3/ A7				repe	cmpsw			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:45CE  75 04				jnz	loc_583			; Jump if not zero
020A:45D0  FE 06 9261				inc	data_558		; (020A:9261=7Dh)
020A:45D4			loc_583:
020A:45D4  8B FB				mov	di,bx
020A:45D6			loc_584:
020A:45D6  5E					pop	si
020A:45D7  56					push	si
020A:45D8			loc_585:
020A:45D8  AC					lodsb				; String [si] to al
020A:45D9  3C 0D				cmp	al,0Dh
020A:45DB  74 05				je	loc_586			; Jump if equal
020A:45DD  E8 01B6				call	sub_62			; (4796)
020A:45E0  EB F6				jmp	short loc_585		; (45D8)
020A:45E2			loc_586:
020A:45E2  5E					pop	si
020A:45E3  80 3E 9261 00			cmp	byte ptr data_558,0	; (020A:9261=7Dh)
020A:45E8			loc_587:
020A:45E8  74 8F				je	loc_ret_577		; Jump if equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 138

020A:45EA  E8 0386				call	sub_70			; (4973)
020A:45ED  8E 06 995F				mov	es,data_562		; (020A:995F=4871h)
020A:45F1  BF 0258				mov	di,258h
020A:45F4  8B DF				mov	bx,di
020A:45F6  33 C0				xor	ax,ax			; Zero register
020A:45F8  26: A2 02A1				mov	byte ptr es:[2A1h],al	; (4871:02A1=0FFh)
020A:45FC  50					push	ax
020A:45FD  8A 04				mov	al,[si]
020A:45FF  E8 0147				call	sub_60			; (4749)
020A:4602  58					pop	ax
020A:4603  75 18				jnz	loc_588			; Jump if not zero
020A:4605  80 7C 01 3A				cmp	byte ptr [si+1],3Ah	; ':'
020A:4609  75 12				jne	loc_588			; Jump if not equal
020A:460B  8A 04				mov	al,[si]
020A:460D  E8 0163				call	sub_61			; (4773)
020A:4610  2C 41				sub	al,41h			; 'A'
020A:4612  83 C7 02				add	di,2
020A:4615  FE C0				inc	al
020A:4617  26: A2 02A1				mov	byte ptr es:[2A1h],al	; (4871:02A1=0FFh)
020A:461B  04 40				add	al,40h			; '@'
020A:461D			loc_588:
020A:461D  26: 89 3E 0237			mov	word ptr es:[237h],di	; (4871:0237=0FFFFh)
020A:4622  26: A2 023C				mov	byte ptr es:[23Ch],al	; (4871:023C=0FFh)
020A:4626  8B FB				mov	di,bx
020A:4628			loc_589:
020A:4628  AC					lodsb				; String [si] to al
020A:4629  E8 034F				call	sub_71			; (497B)
020A:462C  74 07				jz	loc_590			; Jump if zero
020A:462E  3C 0D				cmp	al,0Dh
020A:4630  74 03				je	loc_590			; Jump if equal
020A:4632  AA					stosb				; Store al to es:[di]
020A:4633  EB F3				jmp	short loc_589		; (4628)
020A:4635			loc_590:
020A:4635  32 C0				xor	al,al			; Zero register
020A:4637  AA					stosb				; Store al to es:[di]
020A:4638  C6 06 9261 00			mov	byte ptr data_558,0	; (020A:9261=7Dh)
020A:463D  4F					dec	di
020A:463E  26: 89 3E 0298			mov	word ptr es:[298h],di	; (4871:0298=0FFFFh)
020A:4643  C3					retn
020A:4644			loc_591:
020A:4644  8E 1E 995F				mov	ds,data_562		; (020A:995F=4871h)
020A:4648  8E 1E 0458				mov	ds,word ptr ds:[458h]	; (4871:0458=0FFFFh)
020A:464C  33 F6				xor	si,si			; Zero register
020A:464E			loc_592:
020A:464E  80 3C 00				cmp	byte ptr [si],0
020A:4651  74 95				je	loc_587			; Jump if equal
020A:4653  BF 9AC9				mov	di,9AC9h
020A:4656			loc_593:
020A:4656  AC					lodsb				; String [si] to al
020A:4657  AA					stosb				; Store al to es:[di]
020A:4658  0A C0				or	al,al			; Zero ?
020A:465A  75 FA				jnz	loc_593			; Jump if not zero
020A:465C  BA 8EBE				mov	dx,8EBEh
020A:465F  1E					push	ds
020A:4660  06					push	es
020A:4661  1F					pop	ds
020A:4662  E8 2C6D				call	sub_95			; (72D2)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 139

020A:4665  1F					pop	ds
020A:4666  EB E6				jmp	short loc_592		; (464E)
020A:4668  BE 8F91				mov	si,8F91h
020A:466B  EB 03				jmp	short loc_594		; (4670)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_51		proc	near
020A:466D  BE 8F96				mov	si,8F96h
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_52:
020A:4670			loc_594:
020A:4670  56					push	si
020A:4671  1E					push	ds
020A:4672  E8 002C				call	sub_53			; (46A1)
020A:4675  72 17				jc	loc_596			; Jump if carry Set
020A:4677  8B F7				mov	si,di
020A:4679  E8 00C5				call	sub_59			; (4741)
020A:467C  87 F7				xchg	si,di
020A:467E  26: 80 3C 00				cmp	byte ptr es:[si],0
020A:4682  75 01				jne	loc_595			; Jump if not equal
020A:4684  4E					dec	si
020A:4685			loc_595:
020A:4685  E8 0170				call	sub_63			; (47F8)
020A:4688  2B CE				sub	cx,si
020A:468A  06					push	es
020A:468B  1F					pop	ds
020A:468C  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:468E			loc_596:
020A:468E  1F					pop	ds
020A:468F  5E					pop	si
020A:4690			loc_597:
020A:4690  C3					retn
				sub_51		endp
  
020A:4691  BE 8F91				mov	si,8F91h
020A:4694  EB 03				jmp	short loc_598		; (4699)
020A:4696  BE 8F96				mov	si,8F96h
020A:4699			loc_598:
020A:4699  E8 0005				call	sub_53			; (46A1)
020A:469C  72 F2				jc	loc_ret_597		; Jump if carry Set
020A:469E  E9 009C				jmp	loc_610			; (473D)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_53		proc	near
020A:46A1  FC					cld				; Clear direction
020A:46A2  E8 0041				call	sub_54			; (46E6)
020A:46A5  8E 06 995F				mov	es,data_562		; (020A:995F=4871h)
020A:46A9  26: 8E 06 0458			mov	es,word ptr es:[458h]	; (4871:0458=0FFFFh)
020A:46AE  33 FF				xor	di,di			; Zero register
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 140

020A:46B0			loc_599:
020A:46B0  51					push	cx
020A:46B1  56					push	si
020A:46B2  57					push	di
  
020A:46B3			locloop_600:
020A:46B3  AC					lodsb				; String [si] to al
020A:46B4  E8 0092				call	sub_60			; (4749)
020A:46B7  74 0F				jz	loc_601			; Jump if zero
020A:46B9  4E					dec	si
020A:46BA  AD					lodsw				; String [si] to ax
020A:46BB  47					inc	di
020A:46BC  47					inc	di
020A:46BD  26: 3B 45 FE				cmp	ax,es:[di-2]
020A:46C1  75 11				jne	loc_602			; Jump if not equal
020A:46C3  49					dec	cx
020A:46C4  E2 ED				loop	locloop_600		; Loop if cx > 0
  
020A:46C6  EB 0C				jmp	short loc_602		; (46D4)
020A:46C8			loc_601:
020A:46C8  E8 00A8				call	sub_61			; (4773)
020A:46CB  47					inc	di
020A:46CC  26: 3A 45 FF				cmp	al,es:[di-1]
020A:46D0  75 02				jne	loc_602			; Jump if not equal
020A:46D2  E2 DF				loop	locloop_600		; Loop if cx > 0
  
020A:46D4			loc_602:
020A:46D4  5F					pop	di
020A:46D5  5E					pop	si
020A:46D6  59					pop	cx
020A:46D7  74 B7				jz	loc_ret_597		; Jump if zero
020A:46D9  51					push	cx
020A:46DA  E8 0064				call	sub_59			; (4741)
020A:46DD  59					pop	cx
020A:46DE  26: 80 3D 00				cmp	byte ptr es:[di],0
020A:46E2  75 CC				jne	loc_599			; Jump if not equal
020A:46E4  F9					stc				; Set carry flag
020A:46E5  C3					retn
				sub_53		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_54		proc	near
020A:46E6  1E					push	ds
020A:46E7  07					pop	es
020A:46E8  8B FE				mov	di,si
020A:46EA  57					push	di
020A:46EB  E8 004F				call	sub_58			; (473D)
020A:46EE  EB 04				jmp	short loc_603		; (46F4)
020A:46F0  57					push	di
020A:46F1  E8 004D				call	sub_59			; (4741)
020A:46F4			loc_603:
020A:46F4  59					pop	cx
020A:46F5  2B F9				sub	di,cx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 141

020A:46F7  87 F9				xchg	di,cx
020A:46F9			loc_604:
020A:46F9  C3					retn
				sub_54		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_55		proc	near
020A:46FA			loc_605:
020A:46FA  80 3C 0D				cmp	byte ptr [si],0Dh
020A:46FD  74 FA				je	loc_ret_604		; Jump if equal
020A:46FF  AC					lodsb				; String [si] to al
020A:4700  E8 0046				call	sub_60			; (4749)
020A:4703  74 09				jz	loc_606			; Jump if zero
020A:4705  E8 008E				call	sub_62			; (4796)
020A:4708  AC					lodsb				; String [si] to al
020A:4709  E8 008A				call	sub_62			; (4796)
020A:470C  EB EC				jmp	short loc_605		; (46FA)
020A:470E			loc_606:
020A:470E  E8 0062				call	sub_61			; (4773)
020A:4711  E8 0082				call	sub_62			; (4796)
020A:4714  3C 3D				cmp	al,3Dh			; '='
020A:4716  75 E2				jne	loc_605			; Jump if not equal
020A:4718			loc_607:
020A:4718  C3					retn
				sub_55		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_56		proc	near
020A:4719  BE 0080				mov	si,80h
020A:471C  AC					lodsb				; String [si] to al
020A:471D  0A C0				or	al,al			; Zero ?
020A:471F  74 F7				jz	loc_ret_607		; Jump if zero
020A:4721  E8 024F				call	sub_70			; (4973)
020A:4724  3C 0D				cmp	al,0Dh
020A:4726			loc_608:
020A:4726  C3					retn
				sub_56		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_57		proc	near
020A:4727  8E 06 995F				mov	es,data_562		; (020A:995F=4871h)
020A:472B  26: 8E 06 0458			mov	es,word ptr es:[458h]	; (4871:0458=0FFFFh)
020A:4730  33 FF				xor	di,di			; Zero register
020A:4732			loc_609:
020A:4732  26: 80 3D 00				cmp	byte ptr es:[di],0
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 142

020A:4736  74 EE				je	loc_ret_608		; Jump if equal
020A:4738  E8 0006				call	sub_59			; (4741)
020A:473B  EB F5				jmp	short loc_609		; (4732)
				sub_57		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_58		proc	near
020A:473D			loc_610:
020A:473D  B0 3D				mov	al,3Dh			; '='
020A:473F  EB 02				jmp	short loc_611		; (4743)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_59:
020A:4741  32 C0				xor	al,al			; Zero register
020A:4743			loc_611:
020A:4743  B9 1000				mov	cx,1000h
020A:4746  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:4748  C3					retn
				sub_58		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_60		proc	near
020A:4749  1E					push	ds
020A:474A  56					push	si
020A:474B  50					push	ax
020A:474C  2E: 8E 1E 995F			mov	ds,cs:data_562		; (020A:995F=4871h)
020A:4751  C5 36 02CB				lds	si,dword ptr ds:[2CBh]	; (4871:02CB=0FFFFh) Load 32 bit ptr
020A:4755			loc_612:
020A:4755  83 3C 00				cmp	word ptr [si],0
020A:4758  74 0E				je	loc_613			; Jump if equal
020A:475A  58					pop	ax
020A:475B  50					push	ax
020A:475C  3A 04				cmp	al,[si]
020A:475E  72 08				jb	loc_613			; Jump if below
020A:4760  46					inc	si
020A:4761  3A 04				cmp	al,[si]
020A:4763  76 07				jbe	loc_614			; Jump if below or =
020A:4765  46					inc	si
020A:4766  EB ED				jmp	short loc_612		; (4755)
020A:4768			loc_613:
020A:4768  33 C0				xor	ax,ax			; Zero register
020A:476A  EB 03				jmp	short loc_615		; (476F)
020A:476C			loc_614:
020A:476C  33 C0				xor	ax,ax			; Zero register
020A:476E  40					inc	ax
020A:476F			loc_615:
020A:476F  58					pop	ax
020A:4770  5E					pop	si
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 143

020A:4771  1F					pop	ds
020A:4772  C3					retn
				sub_60		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_61		proc	near
020A:4773  3C 80				cmp	al,80h
020A:4775  72 14				jb	loc_616			; Jump if below
020A:4777  2C 80				sub	al,80h
020A:4779  1E					push	ds
020A:477A  53					push	bx
020A:477B  8E 1E 995F				mov	ds,data_562		; (020A:995F=4871h)
020A:477F  C5 1E 02C3				lds	bx,dword ptr ds:[2C3h]	; (4871:02C3=0FFFFh) Load 32 bit ptr
020A:4783  83 C3 02				add	bx,2
020A:4786  D7					xlat				; al=[al+[bx]] table
020A:4787  5B					pop	bx
020A:4788  1F					pop	ds
020A:4789  EB 0A				jmp	short loc_617		; (4795)
020A:478B			loc_616:
020A:478B  3C 61				cmp	al,61h			; 'a'
020A:478D  72 06				jb	loc_617			; Jump if below
020A:478F  3C 7A				cmp	al,7Ah			; 'z'
020A:4791  77 02				ja	loc_617			; Jump if above
020A:4793  2C 20				sub	al,20h			; ' '
020A:4795			loc_617:
020A:4795  C3					retn
				sub_61		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_62		proc	near
020A:4796  51					push	cx
020A:4797  53					push	bx
020A:4798  06					push	es
020A:4799  1E					push	ds
020A:479A  8E 1E 995F				mov	ds,data_562		; (020A:995F=4871h)
020A:479E  8E 06 0458				mov	es,word ptr ds:[458h]	; (4871:0458=0FFFFh)
020A:47A2  1F					pop	ds
020A:47A3  E8 0052				call	sub_63			; (47F8)
020A:47A6  8B D9				mov	bx,cx
020A:47A8  83 EB 02				sub	bx,2
020A:47AB  3B FB				cmp	di,bx
020A:47AD  72 3F				jb	loc_621			; Jump if below
020A:47AF  50					push	ax
020A:47B0  51					push	cx
020A:47B1  53			data_501	db	53h
020A:47B2  E8 E1F8				call	sub_30			; (29AD)
020A:47B5  5B					pop	bx
020A:47B6  83 C3 02				add	bx,2
020A:47B9  81 FB 8000				cmp	bx,8000h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 144

020A:47BD  72 03				jb	loc_619			; Jump if below
020A:47BF			loc_618:
020A:47BF  F9					stc				; Set carry flag
020A:47C0  EB 16				jmp	short loc_620		; (47D8)
020A:47C2			loc_619:
020A:47C2  B1 04				mov	cl,4
020A:47C4  D3 EB				shr	bx,cl			; Shift w/zeros fill
020A:47C6  43					inc	bx
020A:47C7  8C C1				mov	cx,es
020A:47C9  03 CB				add	cx,bx
020A:47CB  83 C1 20				add	cx,20h
020A:47CE  8C C8				mov	ax,cs
020A:47D0  3B C8				cmp	cx,ax
020A:47D2  73 EB				jae	loc_618			; Jump if above or =
020A:47D4  B4 4A				mov	ah,4Ah			; 'J'
020A:47D6  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change mem allocation, bx=siz
020A:47D8			loc_620:
020A:47D8  9C					pushf				; Push flags
020A:47D9  06					push	es
020A:47DA  8E 06 995F				mov	es,data_562		; (020A:995F=4871h)
020A:47DE  E8 E1DC		;*		call	sub_31			;*(29BD)
020A:47DE  E8 DC E1				db	0E8h,0DCh,0E1h
020A:47E1  07					pop	es
020A:47E2  9D					popf				; Pop flags
020A:47E3  59					pop	cx
020A:47E4  58					pop	ax
020A:47E5  73 07				jnc	loc_621			; Jump if carry=0
020A:47E7  07					pop	es
020A:47E8  BA 8D38				mov	dx,8D38h
020A:47EB  E9 0526				jmp	loc_680			; (4D14)
020A:47EE			loc_621:
020A:47EE  AA					stosb				; Store al to es:[di]
020A:47EF  26: C7 05 0000			mov	word ptr es:[di],0
020A:47F4  07					pop	es
020A:47F5  5B					pop	bx
020A:47F6  59					pop	cx
020A:47F7  C3					retn
				sub_62		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_63		proc	near
020A:47F8  06					push	es
020A:47F9  50					push	ax
020A:47FA  8C C0				mov	ax,es
020A:47FC  48					dec	ax
020A:47FD  8E C0				mov	es,ax
020A:47FF  26: A1 0003				mov	ax,word ptr es:[3]	; (C40D:0003=0)
020A:4803  B1 04				mov	cl,4
020A:4805  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:4807  8B C8				mov	cx,ax
020A:4809  58					pop	ax
020A:480A  07					pop	es
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 145

020A:480B			loc_622:
020A:480B  C3					retn
				sub_63		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_64		proc	near
020A:480C  1E					push	ds
020A:480D  8E 1E 995F				mov	ds,data_562		; (020A:995F=4871h)
020A:4811  80 3E 02AF 00			cmp	byte ptr ds:[2AFh],0	; (4871:02AF=0FFh)
020A:4816  1F					pop	ds
020A:4817  74 F2				jz	loc_ret_622		; Jump if zero
020A:4819  BA 978E				mov	dx,978Eh
020A:481C  B4 3B				mov	ah,3Bh			; ';'
020A:481E  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:4820  32 C0				xor	al,al			; Zero register
020A:4822  E8 089F				call	sub_78			; (50C4)
020A:4825  C3					retn
				sub_64		endp
  
020A:4826  BE 0081				mov	si,81h
020A:4829  BF 930F				mov	di,930Fh
020A:482C  33 C9				xor	cx,cx			; Zero register
020A:482E  33 D2				xor	dx,dx			; Zero register
020A:4830  E8 FD03				call	sub_49			; (4536)
020A:4833  3D FFFF				cmp	ax,0FFFFh
020A:4836  74 16				je	loc_623			; Jump if equal
020A:4838  3D 0000				cmp	ax,0
020A:483B  75 50				jne	loc_627			; Jump if not equal
020A:483D  80 3E A48D 06			cmp	byte ptr data_593,6	; (020A:A48D=59h)
020A:4842  75 11				jne	loc_625			; Jump if not equal
020A:4844  BF 930F				mov	di,930Fh
020A:4847  33 D2				xor	dx,dx			; Zero register
020A:4849  E8 FCD3				call	sub_48			; (451F)
020A:484C  75 3F				jnz	loc_627			; Jump if not zero
020A:484E			loc_623:
020A:484E  E8 F941				call	sub_44			; (4192)
020A:4851  E8 0112				call	sub_69			; (4966)
020A:4854			loc_624:
020A:4854  C3					retn
020A:4855			loc_625:
020A:4855  56					push	si
020A:4856  C5 36 A491				lds	si,data_594		; (020A:A491=0DB87h) Load 32 bit ptr
020A:485A  E8 0829				call	sub_76			; (5086)
020A:485D  5E					pop	si
020A:485E  BF 930F				mov	di,930Fh
020A:4861  D233			data_506	dw	0D233h
020A:4863  B9E8			data_507	dw	0B9E8h
020A:4865  75FC			data_508	dw	75FCh
020A:4867  E825			data_509	dw	0E825h
020A:4869  064D			data_510	dw	64Dh
020A:486B  06F6			data_511	dw	6F6h
020A:486D  9B68			data_512	dw	9B68h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 146

020A:486F  7502			data_513	dw	7502h
020A:4871  B418			data_514	dw	0B418h
020A:4873  CD3B			data_515	dw	0CD3Bh
020A:4875  7321			data_516	dw	7321h
020A:4877  E8DC			data_517	dw	0E8DCh
020A:4879  D8 F7				esc	0,bh			; coprocessor escape
020A:487B  3D 0003				cmp	ax,3
020A:487E  74 0A				je	loc_626			; Jump if equal
020A:4880  3D 0005				cmp	ax,5
020A:4883  74 05				je	loc_626			; Jump if equal
020A:4885  E8 00A3				call	sub_67			; (492B)
020A:4888  EB 03				jmp	short loc_627		; (488D)
020A:488A			loc_626:
020A:488A  BA 8E5C				mov	dx,8E5Ch
020A:488D			loc_627:
020A:488D  E8 2A49				call	sub_96			; (72D9)
020A:4890			loc_628:
020A:4890  C3					retn
020A:4891  E8 003F				call	sub_65			; (48D3)
020A:4894  72 39				jc	loc_631			; Jump if carry Set
020A:4896  B4 39				mov	ah,39h			; '9'
020A:4898  CD 21				int	21h			; DOS Services  ah=function 39h
										;  create subdir, path ptr ds:dx
020A:489A  73 F4				jnc	loc_ret_628		; Jump if carry=0
020A:489C  E8 F7B4				call	sub_36			; (4053)
020A:489F  3D 0003				cmp	ax,3
020A:48A2  74 28				je	loc_630			; Jump if equal
020A:48A4  3D 0005				cmp	ax,5
020A:48A7  74 05				je	loc_629			; Jump if equal
020A:48A9  E8 007F				call	sub_67			; (492B)
020A:48AC  EB 21				jmp	short loc_631		; (48CF)
020A:48AE			loc_629:
020A:48AE  BA 95D8				mov	dx,95D8h
020A:48B1  B4 1A				mov	ah,1Ah
020A:48B3  CD 21				int	21h			; DOS Services  ah=function 1Ah
										;  set DTA to ds:dx
020A:48B5  B4 4E				mov	ah,4Eh			; 'N'
020A:48B7  B9 0010				mov	cx,10h
020A:48BA  CD 21				int	21h			; DOS Services  ah=function 4Eh
										;  find 1st filenam match @ds:dx
020A:48BC  72 0E				jc	loc_630			; Jump if carry Set
020A:48BE  8A 16 95ED				mov	dl,byte ptr ds:[95EDh]	; (0040:95ED=0Fh)
020A:48C2  F6 C2 10				test	dl,10h
020A:48C5  74 05				jz	loc_630			; Jump if zero
020A:48C7  BA 8F4C				mov	dx,8F4Ch
020A:48CA  EB 03				jmp	short loc_631		; (48CF)
020A:48CC			loc_630:
020A:48CC  BA 8E5F				mov	dx,8E5Fh
020A:48CF			loc_631:
020A:48CF  E8 2A07				call	sub_96			; (72D9)
020A:48D2			loc_632:
020A:48D2  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 147

				sub_65		proc	near
020A:48D3  BE 0081				mov	si,81h
020A:48D6  BF 9306				mov	di,9306h
020A:48D9  33 C9				xor	cx,cx			; Zero register
020A:48DB  33 D2				xor	dx,dx			; Zero register
020A:48DD  E8 FC56				call	sub_49			; (4536)
020A:48E0  3D 0000				cmp	ax,0
020A:48E3  75 19				jne	loc_634			; Jump if not equal
020A:48E5  BF 95D8				mov	di,95D8h
020A:48E8  57					push	di
020A:48E9  56					push	si
020A:48EA  C5 36 A491				lds	si,data_594		; (020A:A491=0DB87h) Load 32 bit ptr
020A:48EE			loc_633:
020A:48EE  AC					lodsb				; String [si] to al
020A:48EF  AA					stosb				; Store al to es:[di]
020A:48F0  3C 00				cmp	al,0
020A:48F2  75 FA				jne	loc_633			; Jump if not equal
020A:48F4  5E					pop	si
020A:48F5  BF 9306				mov	di,9306h
020A:48F8  E8 FC24				call	sub_48			; (451F)
020A:48FB  5A					pop	dx
020A:48FC  74 D4				jz	loc_ret_632		; Jump if zero
020A:48FE			loc_634:
020A:48FE  BA 8D21				mov	dx,8D21h
020A:4901  33 C0				xor	ax,ax			; Zero register
020A:4903  F9					stc				; Set carry flag
020A:4904			loc_635:
020A:4904  C3					retn
				sub_65		endp
  
020A:4905  E8 FFCB				call	sub_65			; (48D3)
020A:4908  72 1D				jc	loc_637			; Jump if carry Set
020A:490A  75 18				jnz	loc_636			; Jump if not zero
020A:490C  B4 3A				mov	ah,3Ah			; ':'
020A:490E  CD 21				int	21h			; DOS Services  ah=function 3Ah
										;  delete subdir, path ptr ds:dx
020A:4910  73 F2				jnc	loc_ret_635		; Jump if carry=0
020A:4912  E8 F73E				call	sub_36			; (4053)
020A:4915  3D 0003				cmp	ax,3
020A:4918  74 0A				je	loc_636			; Jump if equal
020A:491A  3D 0005				cmp	ax,5
020A:491D  74 05				je	loc_636			; Jump if equal
020A:491F  E8 0009				call	sub_67			; (492B)
020A:4922  EB 03				jmp	short loc_637		; (4927)
020A:4924			loc_636:
020A:4924  BA 8E62				mov	dx,8E62h
020A:4927			loc_637:
020A:4927  E8 29AF				call	sub_96			; (72D9)
020A:492A			loc_638:
020A:492A  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_67		proc	near
020A:492B  C6 06 8D1F 01			mov	byte ptr ds:[8D1Fh],1	; (F790:8D1F=2Fh)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 148

020A:4930  89 16 9B4D				mov	word ptr ds:[9B4Dh],dx	; (F790:9B4D=13h)
020A:4934  C6 06 8D23 01			mov	byte ptr ds:[8D23h],1	; (F790:8D23=28h)
020A:4939  BA 8D21				mov	dx,8D21h
020A:493C  A3 8D21				mov	word ptr ds:[8D21h],ax	; (F790:8D21=2930h)
020A:493F  C3					retn
				sub_67		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_68		proc	near
020A:4940  BF 978E				mov	di,978Eh
020A:4943  8A C2				mov	al,dl
020A:4945  04 40				add	al,40h			; '@'
020A:4947  3C 40				cmp	al,40h			; '@'
020A:4949  75 06				jne	loc_639			; Jump if not equal
020A:494B  02 06 9973				add	al,data_566		; (020A:9973=4)
020A:494F  FE C0				inc	al
020A:4951			loc_639:
020A:4951  AA					stosb				; Store al to es:[di]
020A:4952  8A 26 9964				mov	ah,data_564		; (020A:9964=65h)
020A:4956  B0 3A				mov	al,3Ah			; ':'
020A:4958  AB					stosw				; Store ax to es:[di]
020A:4959  06					push	es
020A:495A  1F					pop	ds
020A:495B  8B F7				mov	si,di
020A:495D  B4 47				mov	ah,47h			; 'G'
020A:495F  CD 21				int	21h			; DOS Services  ah=function 47h
										;  get present dir,drive dl,1=a:
020A:4961  72 C7				jc	loc_ret_638		; Jump if carry Set
020A:4963  0E					push	cs
020A:4964  1F					pop	ds
020A:4965  C3					retn
				sub_68		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_69		proc	near
020A:4966  52					push	dx
020A:4967  BA 8F00				mov	dx,8F00h
020A:496A  1E					push	ds
020A:496B  0E					push	cs
020A:496C  1F					pop	ds
020A:496D  E8 2971				call	sub_97			; (72E1)
020A:4970  1F					pop	ds
020A:4971  5A					pop	dx
020A:4972  C3					retn
				sub_69		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 149

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_70		proc	near
020A:4973			loc_640:
020A:4973  AC					lodsb				; String [si] to al
020A:4974  E8 0004				call	sub_71			; (497B)
020A:4977  74 FA				jz	loc_640			; Jump if zero
020A:4979  4E					dec	si
020A:497A			loc_641:
020A:497A  C3					retn
				sub_70		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_71		proc	near
020A:497B  3C 20				cmp	al,20h			; ' '
020A:497D  74 FB				je	loc_ret_641		; Jump if equal
020A:497F  3C 3D				cmp	al,3Dh			; '='
020A:4981  74 F7				je	loc_ret_641		; Jump if equal
020A:4983  3C 2C				cmp	al,2Ch			; ','
020A:4985  74 F3				je	loc_ret_641		; Jump if equal
020A:4987  3C 3B				cmp	al,3Bh			; ';'
020A:4989  74 EF				je	loc_ret_641		; Jump if equal
020A:498B  3C 09				cmp	al,9
020A:498D  74 EB				je	loc_ret_641		; Jump if equal
020A:498F  3C 0A				cmp	al,0Ah
020A:4991  C3					retn
				sub_71		endp
  
020A:4992  B9 0008				mov	cx,8
  
020A:4995			locloop_642:
020A:4995  AC					lodsb				; String [si] to al
020A:4996  3C 20				cmp	al,20h			; ' '
020A:4998  74 01				je	loc_643			; Jump if equal
020A:499A  AA					stosb				; Store al to es:[di]
020A:499B			loc_643:
020A:499B  E2 F8				loop	locloop_642		; Loop if cx > 0
  
020A:499D  AC					lodsb				; String [si] to al
020A:499E  3C 20				cmp	al,20h			; ' '
020A:49A0  74 12				je	loc_645			; Jump if equal
020A:49A2  8A E0				mov	ah,al
020A:49A4  B0 2E				mov	al,2Eh			; '.'
020A:49A6  AA					stosb				; Store al to es:[di]
020A:49A7  86 C4				xchg	al,ah
020A:49A9  AA					stosb				; Store al to es:[di]
020A:49AA  B1 02				mov	cl,2
  
020A:49AC			locloop_644:
020A:49AC  AC					lodsb				; String [si] to al
020A:49AD  3C 20				cmp	al,20h			; ' '
020A:49AF  74 03				je	loc_645			; Jump if equal
020A:49B1  AA					stosb				; Store al to es:[di]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 150

020A:49B2  E2 F8				loop	locloop_644		; Loop if cx > 0
  
020A:49B4			loc_645:
020A:49B4  32 C0				xor	al,al			; Zero register
020A:49B6  AA					stosb				; Store al to es:[di]
020A:49B7			loc_646:
020A:49B7  C3					retn
020A:49B8			loc_647:
020A:49B8  A6					cmpsb				; Cmp [si] to es:[di]
020A:49B9  75 FC				jnz	loc_ret_646		; Jump if not zero
020A:49BB  80 7C FF 00				cmp	byte ptr [si-1],0
020A:49BF  74 F6				je	loc_ret_646		; Jump if equal
020A:49C1  EB F5				jmp	short loc_647		; (49B8)
020A:49C3  50					push	ax
020A:49C4  B0 0D				mov	al,0Dh
020A:49C6  51					push	cx
020A:49C7  57					push	di
020A:49C8  8B FA				mov	di,dx
020A:49CA  B9 FFFF				mov	cx,0FFFFh
020A:49CD  06					push	es
020A:49CE  1E					push	ds
020A:49CF  07					pop	es
020A:49D0  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:49D2  C6 45 FF 00				mov	byte ptr [di-1],0
020A:49D6  07					pop	es
020A:49D7  89 16 9B4D				mov	data_572,dx		; (020A:9B4D=8067h)
020A:49DB  BA 8EE8				mov	dx,8EE8h
020A:49DE  E8 2900				call	sub_97			; (72E1)
020A:49E1  C6 45 FF 0D				mov	byte ptr [di-1],0Dh
020A:49E5  72 04				jc	loc_648			; Jump if carry Set
020A:49E7  5F					pop	di
020A:49E8  59					pop	cx
020A:49E9  58					pop	ax
020A:49EA  C3					retn
020A:49EB			loc_648:
020A:49EB  0E					push	cs
020A:49EC  1F					pop	ds
020A:49ED  8E 06 995F				mov	es,data_562		; (020A:995F=4871h)
020A:49F1  BA 8D35				mov	dx,8D35h
020A:49F4  26: 80 3E 0331 00			cmp	byte ptr es:[331h],0	; (4871:0331=0FFh)
020A:49FA  74 06				je	loc_649			; Jump if equal
020A:49FC  E8 0977				call	sub_79			; (5376)
020A:49FF  BA 8E82				mov	dx,8E82h
020A:4A02			loc_649:
020A:4A02  E9 030F				jmp	loc_680			; (4D14)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_72		proc	near
020A:4A05  50					push	ax
020A:4A06  B4 2F				mov	ah,2Fh			; '/'
020A:4A08  38 26 9963				cmp	data_563,ah		; (020A:9963=0A1h)
020A:4A0C  74 04				je	loc_650			; Jump if equal
020A:4A0E  3C 2F				cmp	al,2Fh			; '/'
020A:4A10  74 02				je	loc_651			; Jump if equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 151

020A:4A12			loc_650:
020A:4A12  3C 5C				cmp	al,5Ch			; '\'
020A:4A14			loc_651:
020A:4A14  58					pop	ax
020A:4A15  C3					retn
				sub_72		endp
  
020A:4A16  C7 06 9CD1 0000			mov	data_575,0		; (020A:9CD1=58D8h)
020A:4A1C  8A 16 005C				mov	dl,byte ptr ds:[5Ch]	; (020A:005C=8Fh)
020A:4A20  E8 FF1D				call	sub_68			; (4940)
020A:4A23  72 33				jc	loc_653			; Jump if carry Set
020A:4A25  E8 0490				call	sub_74			; (4EB8)
020A:4A28  F6 06 9B68 02			test	byte ptr data_574,2	; (020A:9B68=2Eh)
020A:4A2D  75 2C				jnz	loc_654			; Jump if not zero
020A:4A2F  B4 3B				mov	ah,3Bh			; ';'
020A:4A31  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:4A33  73 13				jnc	loc_652			; Jump if carry=0
020A:4A35  E8 F61B				call	sub_36			; (4053)
020A:4A38  3D 0003				cmp	ax,3
020A:4A3B  74 1E				je	loc_654			; Jump if equal
020A:4A3D  3D 0005				cmp	ax,5
020A:4A40  74 19				je	loc_654			; Jump if equal
020A:4A42  A3 9CD1				mov	word ptr ds:[9CD1h],ax	; (0040:9CD1=7338h)
020A:4A45  E9 008B				jmp	loc_662			; (4AD3)
020A:4A48			loc_652:
020A:4A48  E8 0677				call	sub_77			; (50C2)
020A:4A4B  B0 3F				mov	al,3Fh			; '?'
020A:4A4D  BF 005D				mov	di,5Dh
020A:4A50  B9 000B				mov	cx,0Bh
020A:4A53  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4A55  32 C0				xor	al,al			; Zero register
020A:4A57  C3					retn
020A:4A58			loc_653:
020A:4A58  E9 0083				jmp	loc_664			; (4ADE)
020A:4A5B			loc_654:
020A:4A5B  8B 36 9ABC				mov	si,data_569		; (020A:9ABC=10BAh)
020A:4A5F  4E					dec	si
020A:4A60  8A 44 FF				mov	al,[si-1]
020A:4A63  80 3E 9CEC 00			cmp	byte ptr data_577,0	; (020A:9CEC=48h)
020A:4A68  75 05				jne	loc_655			; Jump if not equal
020A:4A6A  E8 FF98				call	sub_72			; (4A05)
020A:4A6D  74 64				jz	loc_662			; Jump if zero
020A:4A6F			loc_655:
020A:4A6F  8B CE				mov	cx,si
020A:4A71  8B F2				mov	si,dx
020A:4A73  52					push	dx
020A:4A74			loc_656:
020A:4A74  3B F1				cmp	si,cx
020A:4A76  74 13				je	loc_658			; Jump if equal
020A:4A78  AC					lodsb				; String [si] to al
020A:4A79  E8 FCCD				call	sub_60			; (4749)
020A:4A7C  74 03				jz	loc_657			; Jump if zero
020A:4A7E  46					inc	si
020A:4A7F  EB F3				jmp	short loc_656		; (4A74)
020A:4A81			loc_657:
020A:4A81  E8 FF81				call	sub_72			; (4A05)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 152

020A:4A84  75 EE				jnz	loc_656			; Jump if not zero
020A:4A86  8B D6				mov	dx,si
020A:4A88  4A					dec	dx
020A:4A89  EB E9				jmp	short loc_656		; (4A74)
020A:4A8B			loc_658:
020A:4A8B  8B F2				mov	si,dx
020A:4A8D  5A					pop	dx
020A:4A8E  3B F2				cmp	si,dx
020A:4A90  74 56				je	loc_666			; Jump if equal
020A:4A92  8B CE				mov	cx,si
020A:4A94  8B F2				mov	si,dx
020A:4A96			loc_659:
020A:4A96  3B F1				cmp	si,cx
020A:4A98  74 12				je	loc_660			; Jump if equal
020A:4A9A  C6 06 9CEC 00			mov	byte ptr data_577,0	; (020A:9CEC=48h)
020A:4A9F  AC					lodsb				; String [si] to al
020A:4AA0  E8 FCA6				call	sub_60			; (4749)
020A:4AA3  74 F1				jz	loc_659			; Jump if zero
020A:4AA5  46					inc	si
020A:4AA6  FE 06 9CEC				inc	data_577		; (020A:9CEC=48h)
020A:4AAA  EB EA				jmp	short loc_659		; (4A96)
020A:4AAC			loc_660:
020A:4AAC  50					push	ax
020A:4AAD  B0 2E				mov	al,2Eh			; '.'
020A:4AAF  38 44 01				cmp	[si+1],al
020A:4AB2  75 09				jne	loc_661			; Jump if not equal
020A:4AB4  38 44 02				cmp	[si+2],al
020A:4AB7  74 04				je	loc_661			; Jump if equal
020A:4AB9  80 7C 02 00				cmp	byte ptr [si+2],0
020A:4ABD			loc_661:
020A:4ABD  58					pop	ax
020A:4ABE  74 13				jz	loc_662			; Jump if zero
020A:4AC0  8A 44 FF				mov	al,[si-1]
020A:4AC3  3C 3A				cmp	al,3Ah			; ':'
020A:4AC5  74 21				je	loc_666			; Jump if equal
020A:4AC7  80 3E 9CEC 00			cmp	byte ptr data_577,0	; (020A:9CEC=48h)
020A:4ACC  75 07				jne	loc_663			; Jump if not equal
020A:4ACE  E8 FF34				call	sub_72			; (4A05)
020A:4AD1  75 02				jnz	loc_663			; Jump if not zero
020A:4AD3			loc_662:
020A:4AD3  F9					stc				; Set carry flag
020A:4AD4  C3					retn
020A:4AD5			loc_663:
020A:4AD5  C6 04 00				mov	byte ptr [si],0
020A:4AD8  B4 3B				mov	ah,3Bh			; ';'
020A:4ADA  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:4ADC  73 20				jnc	loc_667			; Jump if carry=0
020A:4ADE			loc_664:
020A:4ADE  E8 F572				call	sub_36			; (4053)
020A:4AE1  A3 9CD1				mov	word ptr ds:[9CD1h],ax	; (0040:9CD1=7338h)
020A:4AE4  0B F6				or	si,si			; Zero ?
020A:4AE6  F9					stc				; Set carry flag
020A:4AE7			loc_665:
020A:4AE7  C3					retn
020A:4AE8			loc_666:
020A:4AE8  8A 04				mov	al,[si]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 153

020A:4AEA  E8 FF18				call	sub_72			; (4A05)
020A:4AED  F9					stc				; Set carry flag
020A:4AEE  75 F7				jnz	loc_ret_665		; Jump if not zero
020A:4AF0  32 DB				xor	bl,bl			; Zero register
020A:4AF2  86 5C 01				xchg	bl,[si+1]
020A:4AF5  B4 3B				mov	ah,3Bh			; ';'
020A:4AF7  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:4AF9  72 E3				jc	loc_664			; Jump if carry Set
020A:4AFB  88 5C 01				mov	[si+1],bl
020A:4AFE			loc_667:
020A:4AFE  E8 05C1				call	sub_77			; (50C2)
020A:4B01  46					inc	si
020A:4B02  89 36 9B66				mov	data_573,si		; (020A:9B66=909Eh)
020A:4B06  9C					pushf				; Push flags
020A:4B07  80 3E 9AC4 FF			cmp	byte ptr data_570,0FFh	; (020A:9AC4=26h)
020A:4B0C  74 08				je	loc_668			; Jump if equal
020A:4B0E  BF 005C				mov	di,5Ch
020A:4B11  B8 2902				mov	ax,2902h
020A:4B14  CD 21				int	21h			; DOS Services  ah=function 29h
										;  parse filenam @ds:si FCBes:di
020A:4B16			loc_668:
020A:4B16  9D					popf				; Pop flags
020A:4B17  C3					retn
020A:4B18			loc_669:
020A:4B18  93					xchg	ax,bx
020A:4B19  C3					retn
020A:4B1A  33 DB				xor	bx,bx			; Zero register
020A:4B1C			loc_670:
020A:4B1C  E8 FE54				call	sub_70			; (4973)
020A:4B1F  3A 06 9963				cmp	al,data_563		; (020A:9963=0A1h)
020A:4B23  75 F3				jne	loc_669			; Jump if not equal
020A:4B25  81 CB 8000				or	bx,8000h
020A:4B29  46					inc	si
020A:4B2A  E8 FE46				call	sub_70			; (4973)
020A:4B2D  3C 0D				cmp	al,0Dh
020A:4B2F  74 E7				je	loc_669			; Jump if equal
020A:4B31  46					inc	si
020A:4B32  E8 FC3E				call	sub_61			; (4773)
020A:4B35  BF 9250				mov	di,9250h
020A:4B38  B9 0006				mov	cx,6
020A:4B3B  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:4B3D  75 09				jnz	loc_671			; Jump if not zero
020A:4B3F  B8 0001				mov	ax,1
020A:4B42  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:4B44  0B D8				or	bx,ax
020A:4B46  EB D4				jmp	short loc_670		; (4B1C)
020A:4B48			loc_671:
020A:4B48  EB D2				jmp	short loc_670		; (4B1C)
020A:4B4A  BA 8D7D				mov	dx,8D7Dh
020A:4B4D  E9 01C4				jmp	loc_680			; (4D14)
020A:4B50			loc_672:
020A:4B50  E9 0102				jmp	locloop_678		; (4C55)
020A:4B53  0A C0				or	al,al			; Zero ?
020A:4B55  74 F9				jz	loc_672			; Jump if zero
020A:4B57  E8 034D				call	sub_73			; (4EA7)
020A:4B5A  74 29				jz	loc_673			; Jump if zero
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 154

020A:4B5C  8A 0E 99E7				mov	cl,byte ptr ds:[99E7h]	; (ss:99E7=0B4h)
020A:4B60  B5 00				mov	ch,0
020A:4B62  89 0E 9ABC				mov	word ptr ds:[9ABCh],cx	; (ss:9ABC=0C9E8h)
020A:4B66  FE 06 9CD3				inc	byte ptr ds:[9CD3h]	; (ss:9CD3=0)
020A:4B6A  E8 03E3				call	sub_75			; (4F50)
020A:4B6D  BE 99E7				mov	si,99E7h
020A:4B70  BA FFFF				mov	dx,0FFFFh
020A:4B73  BF 57A4				mov	di,57A4h
020A:4B76  B8 AE01				mov	ax,0AE01h
020A:4B79  CD 2F				int	2Fh			; Multiplex/Spooler al=func 01h
										;  add file to print queue
020A:4B7B  80 3E 99E7 00			cmp	byte ptr ds:[99E7h],0	; (ss:99E7=0B4h)
020A:4B80  75 03				jne	loc_673			; Jump if not equal
020A:4B82  E9 00A0				jmp	loc_677			; (4C25)
020A:4B85			loc_673:
020A:4B85  08 74 E4				or	[si-1Ch],dh
020A:4B88  3C 06				cmp	al,6
020A:4B8A  75 06				jne	loc_674			; Jump if not equal
020A:4B8C  26: 88 55 04				mov	es:[di+4],dl
020A:4B90  5A					pop	dx
020A:4B91  C4 06 993B				les	ax,dword ptr ds:[993Bh]	; (ss:993B=0EB42h) Load 32 bit ptr
020A:4B95  0F					pop	cs			; Dangerous 8088 only
020A:4B96  2E: A1 5253				mov	ax,cs:data_530		; (020A:5253=0C60Fh)
020A:4B9A  00 26 4589				add	byte ptr ds:[4589h],ah	; (ss:4589=45h)
020A:4B9E  04 26				add	al,26h			; '&'
020A:4BA0  CD 20				int	20h			; Program Terminate
020A:4BA2  FF 9F 9A00				call	dword ptr ds:[9A00h][bx]	; (ss:9A00=0BF10h)
020A:4BA6  F0					db	0F0h
020A:4BA7  FE					db	0FEh
020A:4BA8  1D DEF0				sbb	ax,0DEF0h
020A:4BAB  01 0E 4B04				add	word ptr ds:[4B04h],cx	; (ss:4B04=0A67h)
020A:4BAF  01 0E 5604				add	word ptr ds:[5604h],cx	; (ss:5604=58Bh)
020A:4BB3  01 0E 0E04				add	word ptr ds:[0E04h],cx	; (ss:0E04=72D0h)
020A:4BB7  04 01				add	al,1
020A:4BB9  01 01				add	[bx+di],ax
020A:4BBB  00 02				add	[bp+si],al
020A:4BBD  000F[03]				db	15 dup (3)
020A:4BCC  0F					pop	cs			; Dangerous 8088 only
020A:4BCD  05 0492				add	ax,492h
020A:4BD0  40					inc	ax
020A:4BD1  18 14				sbb	[si],dl
020A:4BD3  00 18				add	[bx+si],bl
020A:4BD5  00 C4				add	ah,al
020A:4BD7  06					push	es
020A:4BD8  FF					db	0FFh
020A:4BD9  FF					db	0FFh
020A:4BDA  FF					db	0FFh
020A:4BDB  FF 00				inc	word ptr [bx+si]
020A:4BDD  00 00				add	[bx+si],al
020A:4BDF  00 05				add	[di],al
020A:4BE1  000F[00]				db	15 dup (0)
020A:4BF0  CD 21				int	21h			; DOS Services  ah=function C4h
020A:4BF2  CB					retf				; Return far
020A:4BF3  000A[00]				db	10 dup (0)
020A:4BFD  000B[20]				db	11 dup (20h)
020A:4C08  00 00				add	[bx+si],al
020A:4C0A  00 00				add	[bx+si],al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 155

020A:4C0C  00 20				add	[bx+si],ah
020A:4C0E  000A[20]				db	10 dup (20h)
020A:4C18  0009[00]				db	9 dup (0)
020A:4C21  0D 2020				or	ax,2020h
020A:4C24  20 53 45				and	[bp+di+45h],dl
020A:4C27  54					push	sp
020A:4C28  20 42 4C				and	[bp+si+4Ch],al
020A:4C2B  41					inc	cx
020A:4C2C  53					push	bx
020A:4C2D  54					push	sp
020A:4C2E  45					inc	bp
020A:4C2F  52					push	dx
020A:4C30  3D 3041				cmp	ax,3041h
020A:4C33  0D A8AD				or	ax,0A8ADh
020A:4C36  A5					movsw				; Mov [si] to es:[di]
020A:4C37  20 A4 EFAB				and	byte ptr ds:[0EFABh][si],ah	; (020A:EFAB=0FFh)
020A:4C3B  20 A1 A7A2				and	data_603[bx+di],ah	; (020A:A7A2=1Ch)
020A:4C3F  AE					scasb				; Scan es:[di] for al
020A:4C40  A2 A3AE				mov	data_590,al		; (020A:A3AE=74h)
020A:4C43  AE					scasb				; Scan es:[di] for al
020A:4C44  20 AF E0AE				and	byte ptr ds:[0E0AEh][bx],ch	; (020A:E0AE=10h)
020A:4C48  E2 A0		;*		loop	locloop_675		;*Loop if cx > 0
  
020A:4C48  E2 A0				db	0E2h,0A0h
020A:4C4A  20 A2 AEA2				and	[bp+si-515Eh],ah
020A:4C4E  A4					movsb				; Mov [si] to es:[di]
020A:4C4F  A0 A22D				mov	al,data_585		; (020A:A22D=0E0h)
020A:4C52  EB A2		;*		jmp	short loc_676		;*(4BF6)
020A:4C52  EB A2				db	0EBh,0A2h
020A:4C54  AE					scasb				; Scan es:[di] for al
  
020A:4C55			locloop_678:
020A:4C55  A4					movsb				; Mov [si] to es:[di]
020A:4C56  A0 5320				mov	al,data_532		; (020A:5320=26h)
020A:4C59  42					inc	dx
020A:4C5A  2C 20				sub	al,20h			; ' '
020A:4C5C  AD					lodsw				; String [si] to ax
020A:4C5D  A0 E0AF				mov	al,byte ptr ds:[0E0AFh]	; (020A:E0AF=0BFh)
020A:4C60  A8 AC				test	al,0ACh
020A:4C62  A5					movsw				; Mov [si] to es:[di]
020A:4C63  E0 3A				loopnz	locloop_679		; Loop if zf=0, cx>0
  
020A:4C65  0D 0DEC				or	ax,0DECh
020A:4C68  E0 EB				loopnz	locloop_678		; Loop if zf=0, cx>0
  
020A:4C6A  A5					movsw				; Mov [si] to es:[di]
020A:4C6B  0D 0000				or	ax,0
020A:4C6E  0032[00]				db	50 dup (0)
020A:4CA0  53 6F 75 72 63 65	data_526	db	'Sourcer - V Communications, Inc.'
020A:4CA6  72 20 2D 20 56 20
020A:4CAC  43 6F 6D 6D 75 6E
020A:4CB2  69 63 61 74 69 6F
020A:4CB8  6E 73 2C 20 49 6E
020A:4CBE  63 2E
020A:4CC0  20 43 6F 70 79 72			db	' Copyright 1988, 1989, 1990 V3.0'
020A:4CC6  69 67 68 74 20 31
020A:4CCC  39 38 38 2C 20 31
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 156

020A:4CD2  39 38 39 2C 20 31
020A:4CD8  39 39 30 20 56 33
020A:4CDE  2E 30
020A:4CE0  37 20 20 73 2F 6E			db	'7  s/n B116236By Frank van Gillu'
020A:4CE6  20 42 31 31 36 32
020A:4CEC  33 36 42 79 20 46
020A:4CF2  72 61 6E 6B 20 76
020A:4CF8  61 6E 20 47 69 6C
020A:4CFE  6C 75
020A:4D00  77 65 20 26 20 47			db	'we & Geoff Caras (08'
020A:4D06  65 6F 66 66 20 43
020A:4D0C  61 72 61 73 20 28
020A:4D12  30 38
020A:4D14			loc_680:
020A:4D14  2F					das				; Decimal adjust
020A:4D15  31 30				xor	[bx+si],si
020A:4D17  2F					das				; Decimal adjust
020A:4D18  39 30				cmp	[bx+si],si
020A:4D1A  2C 30				sub	al,30h			; '0'
020A:4D1C  38 3A				cmp	[bp+si],bh
020A:4D1E  35 3A39				xor	ax,3A39h
020A:4D21  35 2939				xor	ax,2939h
020A:4D24  000C[00]				db	12 dup (0)
020A:4D30  C4 06 28DC				les	ax,dword ptr ds:[28DCh]	; (020A:28DC=414Dh) Load 32 bit ptr
020A:4D34  00 00				add	[bx+si],al
020A:4D36  2E: 8C 06 0090			mov	word ptr cs:[90h],es	; (020A:0090=1FBFh)
020A:4D3B  E8 481A				call	sub_134			; (9558)
020A:4D3E  9A 5F64:2FA0		;*		call	far ptr sub_228		;*(5F64:2FA0)
020A:4D3E  9A A0 2F 64 5F			db	 9Ah,0A0h, 2Fh, 64h, 5Fh
020A:4D43  D6E8					dw	0D6E8h
020A:4D45  47					inc	di
020A:4D46  9A 5F64:30F0		;*		call	far ptr sub_229		;*(5F64:30F0)
020A:4D46  9A F0 30 64 5F			db	 9Ah,0F0h, 30h, 64h, 5Fh
020A:4D4B  BE 0080				mov	si,80h
020A:4D4E  BF 0140				mov	di,140h
020A:4D51  03 FE				add	di,si
020A:4D53  2E: 80 85 0100 CD			add	byte ptr cs:[100h][di],0CDh	; (020A:0100=28h)
020A:4D59  8A 0C				mov	cl,[si]
020A:4D5B  0A C9				or	cl,cl			; Zero ?
020A:4D5D  75 03				jnz	loc_681			; Jump if not zero
020A:4D5F  E9 015B				jmp	loc_697			; (4EBD)
020A:4D62			loc_681:
020A:4D62  32 ED				xor	ch,ch			; Zero register
020A:4D64  BE 0081				mov	si,81h
020A:4D67  51					push	cx
  
020A:4D68			locloop_682:
020A:4D68  81 3C 2D20				cmp	word ptr [si],2D20h
020A:4D6C  74 0D				je	loc_685			; Jump if equal
020A:4D6E  26: 81 3D 2F20			cmp	word ptr es:[di],2F20h
020A:4D73  74 06				je	loc_685			; Jump if equal
020A:4D75			loc_683:
020A:4D75  46					inc	si
020A:4D76  E2 F0				loop	locloop_682		; Loop if cx > 0
  
020A:4D78			loc_684:
020A:4D78  E9 0122				jmp	loc_694			; (4E9D)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 157

020A:4D7B			loc_685:
020A:4D7B  46					inc	si
020A:4D7C  49					dec	cx
020A:4D7D  E3 F9				jcxz	loc_684			; Jump if cx=0
020A:4D7F  46					inc	si
020A:4D80  49					dec	cx
020A:4D81  75 03				jnz	loc_686			; Jump if not zero
020A:4D83  E9 0117				jmp	loc_694			; (4E9D)
020A:4D86			loc_686:
020A:4D86  8A 04				mov	al,[si]
020A:4D88  24 DF				and	al,0DFh
020A:4D8A  3C 56				cmp	al,56h			; 'V'
020A:4D8C  75 08				jne	loc_687			; Jump if not equal
020A:4D8E  26: C6 06 2641 01			mov	byte ptr es:[2641h],1	; (444E:2641=0FFh)
020A:4D94  EB DF				jmp	short loc_683		; (4D75)
020A:4D96			loc_687:
020A:4D96  3C 44				cmp	al,44h			; 'D'
020A:4D98  75 08				jne	loc_688			; Jump if not equal
020A:4D9A  26: C6 06 38A9 01			mov	byte ptr es:[38A9h],1	; (444E:38A9=0FFh)
020A:4DA0  EB D3				jmp	short loc_683		; (4D75)
020A:4DA2			loc_688:
020A:4DA2  3C 53				cmp	al,53h			; 'S'
020A:4DA4  75 26				jne	loc_690			; Jump if not equal
020A:4DA6  46					inc	si
020A:4DA7  49					dec	cx
020A:4DA8  E3 1F				jcxz	loc_689			; Jump if cx=0
020A:4DAA  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:4DAD  74 C6				je	loc_683			; Jump if equal
020A:4DAF  8B 04				mov	ax,[si]
020A:4DB1  26: A3 1301				mov	word ptr es:[1301h],ax	; (444E:1301=0FFFFh)
020A:4DB5  8B 44 02				mov	ax,[si+2]
020A:4DB8  26: A3 1303				mov	word ptr es:[1303h],ax	; (444E:1303=0FFFFh)
020A:4DBC  83 C6 03				add	si,3
020A:4DBF  83 F9 04				cmp	cx,4
020A:4DC2  76 05				jbe	loc_689			; Jump if below or =
020A:4DC4  83 E9 03				sub	cx,3
020A:4DC7  EB AC				jmp	short loc_683		; (4D75)
020A:4DC9			loc_689:
020A:4DC9  E9 00D1				jmp	loc_694			; (4E9D)
020A:4DCC			loc_690:
020A:4DCC  3C 4E				cmp	al,4Eh			; 'N'
020A:4DCE  75 A5				jne	loc_683			; Jump if not equal
020A:4DD0  26: C6 06 1309 01			mov	byte ptr es:[1309h],1	; (444E:1309=0FFh)
020A:4DD6  26: C6 06 2641 01			mov	byte ptr es:[2641h],1	; (444E:2641=0FFh)
020A:4DDC  80 7C 01 31				cmp	byte ptr [si+1],31h	; '1'
020A:4DE0  74 63				je	loc_692			; Jump if equal
020A:4DE2  26: C7 06 07A6 BFC0			mov	word ptr es:[7A6h],0BFC0h	; (444E:07A6=0FFFFh)
020A:4DE9  26: C7 06 07F4 D9DA			mov	word ptr es:[7F4h],0D9DAh	; (444E:07F4=0FFFFh)
020A:4DF0  26: C7 06 07F6 C020			mov	word ptr es:[7F6h],0C020h	; (444E:07F6=0FFFFh)
020A:4DF7  26: C7 06 0844 20D9			mov	word ptr es:[844h],20D9h	; (444E:0844=0FFFFh)
020A:4DFE  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:4E03  06					push	es
020A:4E04  E8 4A5A				call	sub_146			; (9861)
020A:4E07  B4 24				mov	ah,24h			; '$'
020A:4E09  8A C4				mov	al,ah
020A:4E0B  26: C7 06 05F3 BFC0			mov	word ptr es:[5F3h],0BFC0h	; (020A:05F3=2A8h)
020A:4E12  26: 01 06 05F3			add	word ptr es:[5F3h],ax	; (020A:05F3=2A8h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 158

020A:4E17  26: C7 06 0641 D9DA			mov	word ptr es:[641h],0D9DAh	; (020A:0641=9AA4h)
020A:4E1E  26: 01 06 0641			add	word ptr es:[641h],ax	; (020A:0641=9AA4h)
020A:4E23  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:4E28  5A					pop	dx
020A:4E29  8E C2				mov	es,dx
020A:4E2B  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:4E30  5A					pop	dx
020A:4E31  75 0A				jnz	loc_691			; Jump if not zero
020A:4E33  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:4E38  74 03				je	loc_691			; Jump if equal
020A:4E3A  E8 4CF7				call	sub_151			; (9B34)
020A:4E3D			loc_691:
020A:4E3D  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:4E42  E9 FF30				jmp	loc_683			; (4D75)
020A:4E45			loc_692:
020A:4E45  26: C6 06 2642 01			mov	byte ptr es:[2642h],1	; (444E:2642=0FFh)
020A:4E4B  26: 81 0E 42CE 0080			or	word ptr es:[42CEh],80h	; (444E:42CE=0FFFFh)
020A:4E52  46					inc	si
020A:4E53  B8 2020				mov	ax,2020h
020A:4E56  26: A3 07A6				mov	word ptr es:[7A6h],ax	; (444E:07A6=0FFFFh)
020A:4E5A  26: A3 07F4				mov	word ptr es:[7F4h],ax	; (444E:07F4=0FFFFh)
020A:4E5E  26: A3 07F6				mov	word ptr es:[7F6h],ax	; (444E:07F6=0FFFFh)
020A:4E62  26: A3 0844				mov	word ptr es:[844h],ax	; (444E:0844=0FFFFh)
020A:4E66  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:4E6B  06					push	es
020A:4E6C  E8 49F2				call	sub_146			; (9861)
020A:4E6F  B4 44				mov	ah,44h			; 'D'
020A:4E71  8A C4				mov	al,ah
020A:4E73  26: A3 05F3				mov	word ptr es:[5F3h],ax	; (020A:05F3=2A8h)
020A:4E77  26: A3 0641				mov	word ptr es:[641h],ax	; (020A:0641=9AA4h)
020A:4E7B  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:4E80  5A					pop	dx
020A:4E81  8E C2				mov	es,dx
020A:4E83  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:4E88  5A					pop	dx
020A:4E89  75 0A				jnz	loc_693			; Jump if not zero
020A:4E8B  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:4E90  74 03				je	loc_693			; Jump if equal
020A:4E92  E8 4C9F				call	sub_151			; (9B34)
020A:4E95			loc_693:
020A:4E95  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:4E9A  E9 FED8				jmp	loc_683			; (4D75)
020A:4E9D			loc_694:
020A:4E9D  59					pop	cx
020A:4E9E  BE 0081				mov	si,81h
020A:4EA1  BF 37AA				mov	di,37AAh
  
020A:4EA4			locloop_695:
020A:4EA4  80 3C 20				cmp	byte ptr [si],20h	; ' '
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_73		proc	near
020A:4EA7  75 05				jne	locloop_696		; Jump if not equal
020A:4EA9  46					inc	si
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 159

020A:4EAA  E2 F8				loop	locloop_695		; Loop if cx > 0
  
020A:4EAC  EB 0F				jmp	short loc_697		; (4EBD)
  
020A:4EAE			locloop_696:
020A:4EAE  81 3C 2D20				cmp	word ptr [si],2D20h
020A:4EB2  74 09				je	loc_697			; Jump if equal
020A:4EB4  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:4EB7  74 04				je	loc_697			; Jump if equal
020A:4EB9  FC					cld				; Clear direction
020A:4EBA  A4					movsb				; Mov [si] to es:[di]
020A:4EBB  E2 F1				loop	locloop_696		; Loop if cx > 0
  
020A:4EBD			loc_697:
020A:4EBD  E8 4989				call	sub_140			; (9849)
020A:4EC0  C6 06 2638 00			mov	byte ptr ds:[2638h],0	; (020A:2638=0B4h)
020A:4EC5  83 3E 1301 00			cmp	data_215,0		; (020A:1301=0)
020A:4ECA  74 14				je	loc_698			; Jump if equal
020A:4ECC  BE 1301				mov	si,1301h
020A:4ECF  8B C6				mov	ax,si
020A:4ED1  05 0004				add	ax,4
020A:4ED4  A3 44FC				mov	data_489,ax		; (020A:44FC=2600h)
020A:4ED7  E8 08AA				call	sub_85			; (5784)
020A:4EDA  72 04				jc	loc_698			; Jump if carry Set
020A:4EDC  89 16 12FF				mov	data_214,dx		; (020A:12FF=0)
020A:4EE0			loc_698:
020A:4EE0  B9 004E				mov	cx,4Eh
020A:4EE3  81 E9 0041				sub	cx,41h
020A:4EE7  BF 01A5				mov	di,1A5h
020A:4EEA  BE 0041				mov	si,41h
020A:4EED  B8 06D4				mov	ax,6D4h
020A:4EF0  8E D8				mov	ds,ax
020A:4EF2  E8 4969				call	sub_145			; (985E)
020A:4EF5  FC					cld				; Clear direction
020A:4EF6  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:4EF8  E8 494E				call	sub_140			; (9849)
020A:4EFB  2E: A1 0090				mov	ax,word ptr cs:[90h]	; (020A:0090=1FBFh)
020A:4EFF  A3 48E1				mov	word ptr ds:[48E1h],ax	; (9B68:48E1=99h)
020A:4F02  E8 814B				call	$-7EB2h
020A:4F05  8A F0				mov	dh,al
020A:4F07  A8 70				test	al,70h			; 'p'
020A:4F09  74 19				jz	loc_699			; Jump if zero
020A:4F0B  E8 493B				call	sub_140			; (9849)
020A:4F0E  A1 2A95				mov	ax,word ptr ds:[2A95h]	; (9B68:2A95=0AEA4h)
020A:4F11  A3 2A99				mov	word ptr ds:[2A99h],ax	; (9B68:2A99=0A0ADh)
020A:4F14  A1 2A97				mov	ax,word ptr ds:[2A97h]	; (9B68:2A97=0A6ABh)
020A:4F17  A3 2A9B				mov	word ptr ds:[2A9Bh],ax	; (9B68:2A9B=0AD20h)
020A:4F1A  80 FE 40				cmp	dh,40h			; '@'
020A:4F1D  75 05				jne	loc_699			; Jump if not equal
020A:4F1F  C6 06 2A79 0C			mov	byte ptr ds:[2A79h],0Ch	; (9B68:2A79=20h)
020A:4F24			loc_699:
020A:4F24  88 36 2A78				mov	byte ptr ds:[2A78h],dh	; (9B68:2A78=0A5h)
020A:4F28  B6 00				mov	dh,0
020A:4F2A  E8 3367				call	sub_109			; (8294)
020A:4F2D  B4 01				mov	ah,1
020A:4F2F  9A 16BF:082C		;*		call	far ptr sub_192		;*(16BF:082C)
020A:4F2F  9A 2C 08 BF 16			db	 9Ah, 2Ch, 08h,0BFh, 16h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 160

020A:4F34  B8 3300				mov	ax,3300h
020A:4F37  CD 21				int	21h			; DOS Services  ah=function 33h
										;  ctrl-break flag al=off/on
020A:4F39  88 16 2643				mov	byte ptr ds:[2643h],dl	; (9B68:2643=0ACh)
020A:4F3D  B8 3301				mov	ax,3301h
020A:4F40  32 D2				xor	dl,dl			; Zero register
020A:4F42  CD 21				int	21h			; DOS Services  ah=function 33h
										;  ctrl-break flag al=off/on
020A:4F44  1E					push	ds
020A:4F45  B8 16BF				mov	ax,16BFh
020A:4F48  BA 08F7				mov	dx,8F7h
020A:4F4B  B8 2523				mov	ax,2523h
020A:4F4E  CD 21				int	21h			; DOS Services  ah=function 25h
										;  set intrpt vector al to ds:dx
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_75:
020A:4F50  1F					pop	ds
020A:4F51  B9 0350				mov	cx,350h
020A:4F54  51					push	cx
020A:4F55  E8 4906				call	sub_145			; (985E)
020A:4F58  83 F9 03				cmp	cx,3
020A:4F5B  77 03				ja	loc_700			; Jump if above
020A:4F5D  E9 0090				jmp	loc_701			; (4FF0)
020A:4F60			loc_700:
020A:4F60  90					nop
020A:4F61  56					push	si
020A:4F62  49					dec	cx
020A:4F63  45					inc	bp
020A:4F64  57					push	di
020A:4F65  2D 4E49				sub	ax,4E49h
020A:4F68  46					inc	si
020A:4F69  4F					dec	di
020A:4F6A  2D 2031				sub	ax,2031h
020A:4F6D  03 00				add	ax,[bx+si]
020A:4F6F  03 00				add	ax,[bx+si]
020A:4F71  03 00				add	ax,[bx+si]
020A:4F73  03 00				add	ax,[bx+si]
020A:4F75  58					pop	ax
020A:4F76  58					pop	ax
020A:4F77  58					pop	ax
020A:4F78  03 00				add	ax,[bx+si]
020A:4F7A  E8 48C9				call	sub_139			; (9846)
020A:4F7D  03 00				add	ax,[bx+si]
020A:4F7F  BF 005B				mov	di,5Bh
020A:4F82  03 00				add	ax,[bx+si]
020A:4F84  03 00				add	ax,[bx+si]
020A:4F86  BE 7460				mov	si,7460h
020A:4F89  03 00				add	ax,[bx+si]
020A:4F8B  03 00				add	ax,[bx+si]
020A:4F8D  B9 BA91				mov	cx,0BA91h
020A:4F90  81 E9 76D3				sub	cx,76D3h
020A:4F94  9A 5F64:0000		;*		call	far ptr sub_227		;*(5F64:0000)
020A:4F94  9A 00 00 64 5F			db	 9Ah, 00h, 00h, 64h, 5Fh
020A:4F99  03 00				add	ax,[bx+si]
020A:4F9B  03 00				add	ax,[bx+si]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 161

020A:4F9D  E8 48A9				call	sub_140			; (9849)
020A:4FA0  BE 0076				mov	si,76h
020A:4FA3  03 00				add	ax,[bx+si]
020A:4FA5  03 00				add	ax,[bx+si]
020A:4FA7  B9 0122				mov	cx,122h
020A:4FAA  03 00				add	ax,[bx+si]
020A:4FAC  9A 5F64:0000		;*		call	far ptr sub_227		;*(5F64:0000)
020A:4FAC  9A 00 00 64 5F			db	 9Ah, 00h, 00h, 64h, 5Fh
020A:4FB1  03 00				add	ax,[bx+si]
020A:4FB3  03 00				add	ax,[bx+si]
020A:4FB5  BE 000D				mov	si,0Dh
020A:4FB8  03 00				add	ax,[bx+si]
020A:4FBA  03 00				add	ax,[bx+si]
020A:4FBC  03 00				add	ax,[bx+si]
020A:4FBE  03 00				add	ax,[bx+si]
020A:4FC0  B9 0036				mov	cx,36h
020A:4FC3  81 E9 0032				sub	cx,32h
020A:4FC7  9A 5F64:0000		;*		call	far ptr sub_227		;*(5F64:0000)
020A:4FC7  9A 00 00 64 5F			db	 9Ah, 00h, 00h, 64h, 5Fh
020A:4FCC  03 00				add	ax,[bx+si]
020A:4FCE  03 00				add	ax,[bx+si]
020A:4FD0  8B 45 17				mov	ax,[di+17h]
020A:4FD3  3B 45 19				cmp	ax,[di+19h]
020A:4FD6  74 18				je	loc_701			; Jump if equal
020A:4FD8  03 00				add	ax,[bx+si]
020A:4FDA  BF 42A5				mov	di,42A5h
020A:4FDD  03 00				add	ax,[bx+si]
020A:4FDF  03 00				add	ax,[bx+si]
020A:4FE1  83 4D 21 02				or	word ptr [di+21h],2
020A:4FE5  03 00				add	ax,[bx+si]
020A:4FE7  03 00				add	ax,[bx+si]
020A:4FE9  03 00				add	ax,[bx+si]
020A:4FEB  C7 45 23 FFFF			mov	word ptr [di+23h],0FFFFh
020A:4FF0			loc_701:
020A:4FF0  BF 1121				mov	di,1121h
020A:4FF3  81 EF 1023				sub	di,1023h
020A:4FF7  E8 11D6				call	sub_91			; (61D0)
020A:4FFA  9A 5F64:3120		;*		call	far ptr sub_230		;*(5F64:3120)
020A:4FFA  9A 20 31 64 5F			db	 9Ah, 20h, 31h, 64h, 5Fh
020A:4FFF  9A 16BF:0648		;*		call	far ptr sub_188		;*(16BF:0648)
020A:4FFF  9A 48 06 BF 16			db	 9Ah, 48h, 06h,0BFh, 16h
020A:5004  E8 31D5				call	sub_108			; (81DC)
020A:5007  E8 8216				call	$-7DE7h
020A:500A  80 3E 37AA 00			cmp	byte ptr ds:[37AAh],0	; (9B68:37AA=0)
020A:500F  74 42				je	loc_703			; Jump if equal
020A:5011  BF 37AA				mov	di,37AAh
020A:5014  B0 00				mov	al,0
020A:5016  9A 16BF:04A4		;*		call	far ptr sub_185		;*(16BF:04A4)
020A:5016  9A A4 04 BF 16			db	 9Ah,0A4h, 04h,0BFh, 16h
020A:501B  9A 16BF:0510		;*		call	far ptr sub_186		;*(16BF:0510)
020A:501B  9A 10 05 BF 16			db	 9Ah, 10h, 05h,0BFh, 16h
020A:5020  A2 2C3F				mov	byte ptr ds:[2C3Fh],al	; (9B68:2C3F=0ABh)
020A:5023  3C 00				cmp	al,0
020A:5025  74 2C				je	loc_703			; Jump if equal
020A:5027  50					push	ax
020A:5028  57					push	di
020A:5029  BE 37AA				mov	si,37AAh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 162

020A:502C  BF 2BB2				mov	di,2BB2h
020A:502F  8B CB				mov	cx,bx
020A:5031  FC					cld				; Clear direction
020A:5032  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5034  5F					pop	di
020A:5035  4F					dec	di
020A:5036  9A 16BF:1740		;*		call	far ptr sub_208		;*(16BF:1740)
020A:5036  9A 40 17 BF 16			db	 9Ah, 40h, 17h,0BFh, 16h
020A:503B  58					pop	ax
020A:503C  83 FB 0C				cmp	bx,0Ch
020A:503F  77 0D				ja	loc_702			; Jump if above
020A:5041  3C 01				cmp	al,1
020A:5043  74 17				je	loc_704			; Jump if equal
020A:5045  80 3E 38A9 01			cmp	byte ptr ds:[38A9h],1	; (9B68:38A9=48h)
020A:504A  75 13				jne	loc_705			; Jump if not equal
020A:504C  EB 1F				jmp	short loc_706		; (506D)
020A:504E			loc_702:
020A:504E  C6 06 2C3F 00			mov	byte ptr ds:[2C3Fh],0	; (9B68:2C3F=0ABh)
020A:5053			loc_703:
020A:5053  80 3E 38A9 01			cmp	byte ptr ds:[38A9h],1	; (9B68:38A9=48h)
020A:5058  75 05				jne	loc_705			; Jump if not equal
020A:505A  EB 19				jmp	short loc_707		; (5075)
020A:505C			loc_704:
020A:505C  E9 1BB1				jmp	loc_1027		; (6C10)
020A:505F			loc_705:
020A:505F  BD 37AA				mov	bp,37AAh
020A:5062  BE 389B				mov	si,389Bh
020A:5065  9A 16BF:1004		;*		call	far ptr sub_197		;*(16BF:1004)
020A:5065  9A 04 10 BF 16			db	 9Ah, 04h, 10h,0BFh, 16h
020A:506A  E9 1BA3				jmp	loc_1027		; (6C10)
020A:506D			loc_706:
020A:506D  E8 6584				call	sub_162			; (B5F4)
020A:5070  73 03				jnc	loc_707			; Jump if carry=0
020A:5072  E9 E8B4		;*		jmp	loc_398			;*(3929)
020A:5072  E9 B4 E8				db	0E9h,0B4h,0E8h
020A:5075			loc_707:
020A:5075  C6 06 2638 01			mov	byte ptr ds:[2638h],1	; (9B68:2638=0E0h)
020A:507A  8A 26 2C3E				mov	ah,byte ptr ds:[2C3Eh]	; (9B68:2C3E=0E1h)
020A:507E  E8 3367				call	sub_112			; (83E8)
020A:5081  E8 30A8				call	sub_104			; (812C)
020A:5084  80 3E 4392 01			cmp	byte ptr ds:[4392h],1	; (9B68:4392=0)
020A:5089  75 08				jne	loc_708			; Jump if not equal
020A:508B  C6 06 4392 00			mov	byte ptr ds:[4392h],0	; (9B68:4392=0)
020A:5090  E9 117D				jmp	loc_923			; (6210)
020A:5093			loc_708:
020A:5093  E8 47C8				call	sub_145			; (985E)
020A:5096  B4 07				mov	ah,7
020A:5098  CD 21				int	21h			; DOS Services  ah=function 07h
										;  get keybd char al, no echo
020A:509A  3C 00				cmp	al,0
020A:509C  75 0D				jne	loc_710			; Jump if not equal
020A:509E  B4 07				mov	ah,7
020A:50A0  CD 21				int	21h			; DOS Services  ah=function 07h
										;  get keybd char al, no echo
020A:50A2  3C 3B				cmp	al,3Bh			; ';'
020A:50A4  75 03				jne	loc_709			; Jump if not equal
020A:50A6  E9 1862				jmp	loc_989			; (690B)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 163

020A:50A9			loc_709:
020A:50A9  EB 34				jmp	short loc_713		; (50DF)
020A:50AB			loc_710:
020A:50AB  3C 3F				cmp	al,3Fh			; '?'
020A:50AD  75 03				jne	loc_711			; Jump if not equal
020A:50AF  E9 1859				jmp	loc_989			; (690B)
020A:50B2			loc_711:
020A:50B2  3C 1B				cmp	al,1Bh
020A:50B4  75 03				jne	loc_712			; Jump if not equal
020A:50B6  E9 1624				jmp	loc_966			; (66DD)
020A:50B9			loc_712:
020A:50B9  3C 80				cmp	al,80h
020A:50BB  73 EC				jae	loc_709			; Jump if above or =
020A:50BD  A8 40				test	al,40h			; '@'
020A:50BF  74 E8				jz	loc_709			; Jump if zero
020A:50C1  24 5F				and	al,5Fh			; '_'
020A:50C3  B9 44CA				mov	cx,44CAh
020A:50C6  81 E9 44B2				sub	cx,44B2h
020A:50CA  BF 44B2				mov	di,44B2h
020A:50CD  FC					cld				; Clear direction
020A:50CE  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:50D0  E3 0D				jcxz	loc_713			; Jump if cx=0
020A:50D2  4F					dec	di
020A:50D3  81 EF 44B2				sub	di,44B2h
020A:50D7  D1 E7				shl	di,1			; Shift w/zeros fill
020A:50D9  81 C7 44CA				add	di,44CAh
020A:50DD  FF 25				jmp	word ptr [di]		;*
020A:50DF			loc_713:
020A:50DF  9A 16BF:0628		;*		call	far ptr sub_187		;*(16BF:0628)
020A:50DF  9A 28 06 BF 16			db	 9Ah, 28h, 06h,0BFh, 16h
020A:50E4  EB AD				jmp	short loc_708		; (5093)
				sub_73		endp
  
020A:50E6  E8 32A3				call	sub_110			; (838C)
020A:50E9  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:50ED  B4 22				mov	ah,22h			; '"'
020A:50EF  E8 32F6				call	sub_112			; (83E8)
020A:50F2  E8 3037				call	sub_104			; (812C)
020A:50F5  80 3E 1309 01			cmp	byte ptr ds:[1309h],1	; (9B68:1309=0A2h)
020A:50FA  75 2C				jne	loc_716			; Jump if not equal
020A:50FC  B4 02				mov	ah,2
020A:50FE  32 FF				xor	bh,bh			; Zero register
020A:5100  BA 0500				mov	dx,500h
020A:5103  E8 373E				call	sub_121			; (8844)
020A:5106  BE 0643				mov	si,643h
020A:5109  B9 0BE3				mov	cx,0BE3h
020A:510C  81 E9 0643				sub	cx,643h
020A:5110  49					dec	cx
020A:5111  E8 474D				call	sub_146			; (9861)
  
020A:5114			locloop_714:
020A:5114  26: 8A 14				mov	dl,es:[si]
020A:5117  80 FA F4				cmp	dl,0F4h
020A:511A  72 02				jb	loc_715			; Jump if below
020A:511C  B2 20				mov	dl,20h			; ' '
020A:511E			loc_715:
020A:511E  9A 16BF:0350		;*		call	far ptr sub_181		;*(16BF:0350)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 164

020A:511E  9A 50 03 BF 16			db	 9Ah, 50h, 03h,0BFh, 16h
020A:5123  46					inc	si
020A:5124  E2 EE				loop	locloop_714		; Loop if cx > 0
  
020A:5126  EB 65				jmp	short loc_724		; (518D)
020A:5128			loc_716:
020A:5128  8B 16 12FB				mov	dx,word ptr ds:[12FBh]	; (9B68:12FB=0A0AFh)
020A:512C  8E C2				mov	es,dx
020A:512E  BF 0320				mov	di,320h
020A:5131  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:5135  E8 3008				call	sub_105			; (8140)
020A:5138  E8 4711				call	sub_141			; (984C)
020A:513B  BE 0643				mov	si,643h
020A:513E  B9 0BE3				mov	cx,0BE3h
020A:5141  81 E9 0643				sub	cx,643h
020A:5145  B0 20				mov	al,20h			; ' '
020A:5147  B7 07				mov	bh,7
  
020A:5149			locloop_717:
020A:5149  8A DF				mov	bl,bh
020A:514B  80 3C FE				cmp	byte ptr [si],0FEh
020A:514E  75 0F				jne	loc_720			; Jump if not equal
020A:5150  80 FF 07				cmp	bh,7
020A:5153  75 04				jne	loc_718			; Jump if not equal
020A:5155  B7 0F				mov	bh,0Fh
020A:5157  EB 02				jmp	short loc_719		; (515B)
020A:5159			loc_718:
020A:5159  B7 07				mov	bh,7
020A:515B			loc_719:
020A:515B  8A DF				mov	bl,bh
020A:515D  EB 0F				jmp	short loc_721		; (516E)
020A:515F			loc_720:
020A:515F  80 3C F4				cmp	byte ptr [si],0F4h
020A:5162  72 13				jb	loc_722			; Jump if below
020A:5164  1E					push	ds
020A:5165  E8 46E1				call	sub_140			; (9849)
020A:5168  8A 1E 11E7				mov	bl,byte ptr ds:[11E7h]	; (9B68:11E7=0A8h)
020A:516C  1F					pop	ds
020A:516D  FC					cld				; Clear direction
020A:516E			loc_721:
020A:516E  AA					stosb				; Store al to es:[di]
020A:516F  46					inc	si
020A:5170  26: 88 1D				mov	es:[di],bl
020A:5173  47					inc	di
020A:5174  49					dec	cx
020A:5175  EB 0E				jmp	short loc_723		; (5185)
020A:5177			loc_722:
020A:5177  80 3C 80				cmp	byte ptr [si],80h
020A:517A  72 09				jb	loc_723			; Jump if below
020A:517C  1E					push	ds
020A:517D  E8 46C9				call	sub_140			; (9849)
020A:5180  8A 1E 11E6				mov	bl,byte ptr ds:[11E6h]	; (9B68:11E6=0ADh)
020A:5184  1F					pop	ds
020A:5185			loc_723:
020A:5185  FC					cld				; Clear direction
020A:5186  A4					movsb				; Mov [si] to es:[di]
020A:5187  26: 88 1D				mov	es:[di],bl
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 165

020A:518A  47					inc	di
020A:518B  E2 BC				loop	locloop_717		; Loop if cx > 0
  
020A:518D			loc_724:
020A:518D  E8 46B9				call	sub_140			; (9849)
020A:5190  E8 2FD1				call	sub_106			; (8164)
020A:5193  83 26 42C6 FE			and	word ptr ds:[42C6h],0FFFEh	; (9B68:42C6=0)
020A:5198  8B 1E 42CC				mov	bx,word ptr ds:[42CCh]	; (9B68:42CC=0)
020A:519C  E8 3511				call	sub_117			; (86B0)
020A:519F			loc_725:
020A:519F  9A 16BF:0340		;*		call	far ptr sub_180		;*(16BF:0340)
020A:519F  9A 40 03 BF 16			db	 9Ah, 40h, 03h,0BFh, 16h
020A:51A4  3C 00				cmp	al,0
020A:51A6  74 0A				je	loc_726			; Jump if equal
020A:51A8  24 5F				and	al,5Fh			; '_'
020A:51AA  3C 41				cmp	al,41h			; 'A'
020A:51AC  72 04				jb	loc_726			; Jump if below
020A:51AE  3C 5A				cmp	al,5Ah			; 'Z'
020A:51B0  76 03				jbe	loc_727			; Jump if below or =
020A:51B2			loc_726:
020A:51B2  E9 0098				jmp	loc_732			; (524D)
020A:51B5			loc_727:
020A:51B5  3C 50				cmp	al,50h			; 'P'
020A:51B7  77 29				ja	loc_728			; Jump if above
020A:51B9  2C 41				sub	al,41h			; 'A'
020A:51BB  BB 8000				mov	bx,8000h
020A:51BE  8A C8				mov	cl,al
020A:51C0  D3 CB				ror	bx,cl			; Rotate
020A:51C2  8B 16 42CC				mov	dx,word ptr ds:[42CCh]	; (9B68:42CC=0)
020A:51C6  8B CA				mov	cx,dx
020A:51C8  23 D3				and	dx,bx
020A:51CA  F7 D2				not	dx
020A:51CC  23 D3				and	dx,bx
020A:51CE  F7 D3				not	bx
020A:51D0  23 CB				and	cx,bx
020A:51D2  0B CA				or	cx,dx
020A:51D4  F7 06 42C6 0002			test	word ptr ds:[42C6h],2	; (9B68:42C6=0)
020A:51DA  75 62				jnz	loc_730			; Jump if not zero
020A:51DC  89 0E 42CC				mov	word ptr ds:[42CCh],cx	; (9B68:42CC=0)
020A:51E0  EB 61				jmp	short loc_731		; (5243)
020A:51E2			loc_728:
020A:51E2  3C 54				cmp	al,54h			; 'T'
020A:51E4  77 2F				ja	loc_729			; Jump if above
020A:51E6  80 3E 2EBD 00			cmp	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:51EB  74 51				je	loc_730			; Jump if equal
020A:51ED  2C 51				sub	al,51h			; 'Q'
020A:51EF  B3 04				mov	bl,4
020A:51F1  8A C8				mov	cl,al
020A:51F3  D2 CB				ror	bl,cl			; Rotate
020A:51F5  8A 16 430B				mov	dl,byte ptr ds:[430Bh]	; (9B68:430B=0)
020A:51F9  8A CA				mov	cl,dl
020A:51FB  22 D3				and	dl,bl
020A:51FD  F6 D2				not	dl
020A:51FF  22 D3				and	dl,bl
020A:5201  F6 D3				not	bl
020A:5203  22 CB				and	cl,bl
020A:5205  0A CA				or	cl,dl
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 166

020A:5207  F7 06 42C6 0002			test	word ptr ds:[42C6h],2	; (9B68:42C6=0)
020A:520D  75 2F				jnz	loc_730			; Jump if not zero
020A:520F  88 0E 430B				mov	byte ptr ds:[430Bh],cl	; (9B68:430B=0)
020A:5213  EB 2E				jmp	short loc_731		; (5243)
020A:5215			loc_729:
020A:5215  2C 55				sub	al,55h			; 'U'
020A:5217  BB 0080				mov	bx,80h
020A:521A  8A C8				mov	cl,al
020A:521C  D3 CB				ror	bx,cl			; Rotate
020A:521E  8B 16 42CE				mov	dx,word ptr ds:[42CEh]	; (9B68:42CE=0)
020A:5222  8B CA				mov	cx,dx
020A:5224  23 D3				and	dx,bx
020A:5226  F7 D2				not	dx
020A:5228  23 D3				and	dx,bx
020A:522A  F7 D3				not	bx
020A:522C  23 CB				and	cx,bx
020A:522E  0B CA				or	cx,dx
020A:5230  F7 06 42C6 0002			test	word ptr ds:[42C6h],2	; (9B68:42C6=0)
020A:5236  75 06				jnz	loc_730			; Jump if not zero
020A:5238  89 0E 42CE				mov	word ptr ds:[42CEh],cx	; (9B68:42CE=0)
020A:523C  EB 05				jmp	short loc_731		; (5243)
020A:523E			loc_730:
020A:523E  9A 16BF:0628		;*		call	far ptr sub_187		;*(16BF:0628)
020A:523E  9A 28 06 BF 16			db	 9Ah, 28h, 06h,0BFh, 16h
020A:5243			loc_731:
020A:5243  8B 1E 42CC				mov	bx,word ptr ds:[42CCh]	; (9B68:42CC=0)
020A:5247  E8 3466				call	sub_117			; (86B0)
020A:524A  E9 FF52				jmp	loc_725			; (519F)
020A:524D			loc_732:
020A:524D  E8 3164				call	sub_111			; (83B4)
020A:5250  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:5254  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:5258  C6 06 2638 01			mov	byte ptr ds:[2638h],1	; (9B68:2638=0E0h)
020A:525D  8A 26 2C3E				mov	ah,byte ptr ds:[2C3Eh]	; (9B68:2C3E=0E1h)
020A:5261  E8 3184				call	sub_112			; (83E8)
020A:5264  E8 2EC5				call	sub_104			; (812C)
020A:5267  A0 263D				mov	al,byte ptr ds:[263Dh]	; (9B68:263D=0AEh)
020A:526A  F6 06 430B 07			test	byte ptr ds:[430Bh],7	; (9B68:430B=0)
020A:526F  74 0C				jz	loc_733			; Jump if zero
020A:5271  80 3E 263D 0A			cmp	byte ptr ds:[263Dh],0Ah	; (9B68:263D=0AEh)
020A:5276  73 05				jae	loc_733			; Jump if above or =
020A:5278  B0 0A				mov	al,0Ah
020A:527A  E8 3957				call	sub_125			; (8BD4)
020A:527D			loc_733:
020A:527D  E8 34A8				call	sub_118			; (8728)
020A:5280  E9 FE10				jmp	loc_708			; (5093)
020A:5283  E8 3106				call	sub_110			; (838C)
020A:5286  C6 47 52 00				mov	byte ptr [bx+52h],0
020A:528A  C6 47 39 0F				mov	byte ptr [bx+39h],0Fh
020A:528E  C6 47 79 0F				mov	byte ptr [bx+79h],0Fh
020A:5292  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:5296  B4 02				mov	ah,2
020A:5298  32 FF				xor	bh,bh			; Zero register
020A:529A  BA 1313				mov	dx,1313h
020A:529D  E8 35A4				call	sub_121			; (8844)
020A:52A0  E8 3401				call	sub_116			; (86A4)
020A:52A3  E8 2DDA				call	sub_103			; (8080)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 167

020A:52A6  B1 04				mov	cl,4
020A:52A8  B3 02				mov	bl,2
020A:52AA  BE 0679				mov	si,679h
020A:52AD  9A 16BF:02B0		;*		call	far ptr sub_179		;*(16BF:02B0)
020A:52AD  9A B0 02 BF 16			db	 9Ah,0B0h, 02h,0BFh, 16h
020A:52B2  3C 1B				cmp	al,1Bh
020A:52B4  75 03				jne	loc_734			; Jump if not equal
020A:52B6  E9 009B				jmp	loc_740			; (5354)
020A:52B9			loc_734:
020A:52B9  80 F9 00				cmp	cl,0
020A:52BC  74 03				je	loc_735			; Jump if equal
020A:52BE  E9 008E				jmp	loc_739			; (534F)
020A:52C1			loc_735:
020A:52C1  B9 0080				mov	cx,80h
020A:52C4  BF 0679				mov	di,679h
020A:52C7  E8 02BE				call	sub_82			; (5588)
020A:52CA  72 03				jc	loc_736			; Jump if carry Set
020A:52CC  E9 0080				jmp	loc_739			; (534F)
020A:52CF			loc_736:
020A:52CF  89 16 2A18				mov	word ptr ds:[2A18h],dx	; (9B68:2A18=0AEE0h)
020A:52D3  B2 3A				mov	dl,3Ah			; ':'
020A:52D5  9A 16BF:0350		;*		call	far ptr sub_181		;*(16BF:0350)
020A:52D5  9A 50 03 BF 16			db	 9Ah, 50h, 03h,0BFh, 16h
020A:52DA  B1 04				mov	cl,4
020A:52DC  B3 02				mov	bl,2
020A:52DE  BE 067E				mov	si,67Eh
020A:52E1  9A 16BF:02B0		;*		call	far ptr sub_179		;*(16BF:02B0)
020A:52E1  9A B0 02 BF 16			db	 9Ah,0B0h, 02h,0BFh, 16h
020A:52E6  3C 1B				cmp	al,1Bh
020A:52E8  74 6A				je	loc_740			; Jump if equal
020A:52EA  80 F9 00				cmp	cl,0
020A:52ED  75 60				jne	loc_739			; Jump if not equal
020A:52EF  B9 0080				mov	cx,80h
020A:52F2  BF 067E				mov	di,67Eh
020A:52F5  E8 0290				call	sub_82			; (5588)
020A:52F8  73 55				jnc	loc_739			; Jump if carry=0
020A:52FA  E8 4558				call	sub_142			; (9855)
020A:52FD  26: 89 16 0002			mov	word ptr es:[2],dx	; (A0AF:0002=0)
020A:5302  26: 83 3E 0006 FF			cmp	word ptr es:[6],0FFFFh	; (A0AF:0006=0)
020A:5308  75 07				jne	loc_737			; Jump if not equal
020A:530A  26			data_531	db	26h
020A:530B  C7 06 0004 0000			mov	word ptr ds:[4],0	; (9B68:0004=1E00h)
020A:5311			loc_737:
020A:5311  A1 2A18				mov	ax,word ptr ds:[2A18h]	; (9B68:2A18=0AEE0h)
020A:5314  26: A3 0000				mov	word ptr es:[0],ax	; (A0AF:0000=0)
020A:5318  26: A3 0006				mov	word ptr es:[6],ax	; (A0AF:0006=0)
020A:531C  26: A3 0008				mov	word ptr es:[8],ax	; (A0AF:0008=0)
020A:5320  26			data_532	db	26h
020A:5321  C6 06 000E 00			mov	byte ptr ds:[0Eh],0	; (9B68:000E=0CDh)
020A:5326  26: 83 3E 000A FF			cmp	word ptr es:[0Ah],0FFFFh	; (A0AF:000A=0)
020A:532C  75 12				jne	loc_738			; Jump if not equal
020A:532E  26: C7 06 000A 0000			mov	word ptr es:[0Ah],0	; (A0AF:000A=0)
020A:5335  80 3E 2A2B 00			cmp	byte ptr ds:[2A2Bh],0	; (9B68:2A2B=0A0h)
020A:533A  77 04				ja	loc_738			; Jump if above
020A:533C  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:5340			loc_738:
020A:5340  E8 451B				call	sub_145			; (985E)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 168

020A:5343  E8 40BA				call	sub_132			; (9400)
020A:5346  8A 26 2C3E				mov	ah,byte ptr ds:[2C3Eh]	; (9B68:2C3E=0E1h)
020A:534A  9BE8					dw	9BE8h
020A:534C  30 EB				xor	bl,ch
020A:534E  05 289A				add	ax,289Ah
020A:5351  06					push	es
020A:5352  BF E816				mov	di,0E816h
020A:5355  7D 32				jge	$+34h			; Jump if > or =
020A:5357  5AE8					dw	5AE8h
020A:5359  30 C6				xor	dh,al
020A:535B  47					inc	di
020A:535C  52					push	dx
020A:535D  0F					pop	cs			; Dangerous 8088 only
020A:535E  C6 47 79 07				mov	byte ptr [bx+79h],7
020A:5362  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:5366  E8 332F				call	sub_115			; (8698)
020A:5369  E8 2D14				call	sub_103			; (8080)
020A:536C  E9 FD24				jmp	loc_708			; (5093)
020A:536F  8A 36 2C40				mov	dh,byte ptr ds:[2C40h]	; (9B68:2C40=0E3h)
020A:5373  FE C6				inc	dh
020A:5375  A0 263D				mov	al,byte ptr ds:[263Dh]	; (9B68:263D=0AEh)
020A:5378  80 FE 06				cmp	dh,6
020A:537B  76 08				jbe	loc_741			; Jump if below or =
020A:537D  B6 01				mov	dh,1
020A:537F  3C 09				cmp	al,9
020A:5381  75 02				jne	loc_741			; Jump if not equal
020A:5383  B0 04				mov	al,4
020A:5385			loc_741:
020A:5385  88 36 2C40				mov	byte ptr ds:[2C40h],dh	; (9B68:2C40=0E3h)
020A:5389  80 FE 01				cmp	dh,1
020A:538C  76 06				jbe	loc_742			; Jump if below or =
020A:538E  3C 04				cmp	al,4
020A:5390  75 02				jne	loc_742			; Jump if not equal
020A:5392  B0 12				mov	al,12h
020A:5394			loc_742:
020A:5394  E8 0DAD				call	sub_90			; (6144)
020A:5397  E8 383A				call	sub_125			; (8BD4)
020A:539A  9A 16BF:066C		;*		call	far ptr sub_189		;*(16BF:066C)
020A:539A  9A 6C 06 BF 16			db	 9Ah, 6Ch, 06h,0BFh, 16h
020A:539F  E8 3232				call	sub_114			; (85D4)
020A:53A2  E8 2D87				call	sub_104			; (812C)
020A:53A5  E9 FCEB				jmp	loc_708			; (5093)
020A:53A8  E8 2FE1				call	sub_110			; (838C)
020A:53AB  C6 47 52 07				mov	byte ptr [bx+52h],7
020A:53AF  C6 47 3C 0F				mov	byte ptr [bx+3Ch],0Fh
020A:53B3  C6 47 4F 0F				mov	byte ptr [bx+4Fh],0Fh
020A:53B7  B4 1E				mov	ah,1Eh
020A:53B9  E8 302C				call	sub_112			; (83E8)
020A:53BC  C6 06 064E 20			mov	byte ptr ds:[64Eh],20h	; (9B68:064E=0D8h) ' '
020A:53C1  B4 02				mov	ah,2
020A:53C3  32 FF				xor	bh,bh			; Zero register
020A:53C5  BA 1238				mov	dx,1238h
020A:53C8  E8 3479				call	sub_121			; (8844)
020A:53CB  E8 32D6				call	sub_116			; (86A4)
020A:53CE  E8 2CAF				call	sub_103			; (8080)
020A:53D1  9A 16BF:0340		;*		call	far ptr sub_180		;*(16BF:0340)
020A:53D1  9A 40 03 BF 16			db	 9Ah, 40h, 03h,0BFh, 16h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 169

020A:53D6  3C 80				cmp	al,80h
020A:53D8  73 28				jae	loc_743			; Jump if above or =
020A:53DA  A8 40				test	al,40h			; '@'
020A:53DC  74 24				jz	loc_743			; Jump if zero
020A:53DE  24 5F				and	al,5Fh			; '_'
020A:53E0  3C 41				cmp	al,41h			; 'A'
020A:53E2  72 1E				jb	loc_743			; Jump if below
020A:53E4  3C 5A				cmp	al,5Ah			; 'Z'
020A:53E6  77 1A				ja	loc_743			; Jump if above
020A:53E8  8A D0				mov	dl,al
020A:53EA  80 EA 41				sub	dl,41h			; 'A'
020A:53ED  8A DA				mov	bl,dl
020A:53EF  52					push	dx
020A:53F0  B4 02				mov	ah,2
020A:53F2  32 FF				xor	bh,bh			; Zero register
020A:53F4  BA 184F				mov	dx,184Fh
020A:53F7  E8 344A				call	sub_121			; (8844)
020A:53FA  E8 329B				call	sub_115			; (8698)
020A:53FD  5A					pop	dx
020A:53FE  B4 0E				mov	ah,0Eh
020A:5400  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:5402			loc_743:
020A:5402  B4 19				mov	ah,19h
020A:5404  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:5406  A2 2A94				mov	byte ptr ds:[2A94h],al	; (9B68:2A94=20h)
020A:5409  04 61				add	al,61h			; 'a'
020A:540B  A2 064E				mov	byte ptr ds:[64Eh],al	; (9B68:064E=0D8h)
020A:540E  E8 2DCB				call	sub_108			; (81DC)
020A:5411  8A 16 2A93				mov	dl,byte ptr ds:[2A93h]	; (9B68:2A93=0A0h)
020A:5415  B4 0E				mov	ah,0Eh
020A:5417  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:5419  E8 2F98				call	sub_111			; (83B4)
020A:541C  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:5420  C6 47 4F 07				mov	byte ptr [bx+4Fh],7
020A:5424  8A 26 2C3E				mov	ah,byte ptr ds:[2C3Eh]	; (9B68:2C3E=0E1h)
020A:5428  E8 2FBD				call	sub_112			; (83E8)
020A:542B  E8 326A				call	sub_115			; (8698)
020A:542E  E8 2CFB				call	sub_104			; (812C)
020A:5431  E9 FC5F				jmp	loc_708			; (5093)
020A:5434  E8 2F55				call	sub_110			; (838C)
020A:5437  C6 47 52 00				mov	byte ptr [bx+52h],0
020A:543B  C6 47 3A 0F				mov	byte ptr [bx+3Ah],0Fh
020A:543F  C6 47 7A 0F				mov	byte ptr [bx+7Ah],0Fh
020A:5443  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:5447  80 0E 1594 02			or	byte ptr ds:[1594h],2	; (9B68:1594=20h)
020A:544C  E8 3185				call	sub_114			; (85D4)
020A:544F  B4 02				mov	ah,2
020A:5451  32 FF				xor	bh,bh			; Zero register
020A:5453  BA 1418				mov	dx,1418h
020A:5456  E8 33EB				call	sub_121			; (8844)
020A:5459  E8 3248				call	sub_116			; (86A4)
020A:545C  E8 2C21				call	sub_103			; (8080)
020A:545F  B1 04				mov	cl,4
020A:5461  B3 02				mov	bl,2
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 170

020A:5463  BE 06CE				mov	si,6CEh
020A:5466  9A 16BF:02B0		;*		call	far ptr sub_179		;*(16BF:02B0)
020A:5466  9A B0 02 BF 16			db	 9Ah,0B0h, 02h,0BFh, 16h
020A:546B  3C 1B				cmp	al,1Bh
020A:546D  74 6A				je	loc_747			; Jump if equal
020A:546F  80 F9 00				cmp	cl,0
020A:5472  75 60				jne	loc_746			; Jump if not equal
020A:5474  B9 0080				mov	cx,80h
020A:5477  BF 06CE				mov	di,6CEh
020A:547A  E8 010B				call	sub_82			; (5588)
020A:547D  73 55				jnc	loc_746			; Jump if carry=0
020A:547F  E8 43D3				call	sub_142			; (9855)
020A:5482  26: 89 16 0004			mov	word ptr es:[4],dx	; (A0AF:0004=0)
020A:5487  26: 83 3E 0000 FF			cmp	word ptr es:[0],0FFFFh	; (A0AF:0000=0)
020A:548D  75 31				jne	loc_745			; Jump if not equal
020A:548F  33 C0				xor	ax,ax			; Zero register
020A:5491  26: A3 0000				mov	word ptr es:[0],ax	; (A0AF:0000=0)
020A:5495  26: A3 0002				mov	word ptr es:[2],ax	; (A0AF:0002=0)
020A:5499  26: A3 0000				mov	word ptr es:[0],ax	; (A0AF:0000=0)
020A:549D  26: A3 0006				mov	word ptr es:[6],ax	; (A0AF:0006=0)
020A:54A1  26: A3 0008				mov	word ptr es:[8],ax	; (A0AF:0008=0)
020A:54A5  26: A2 000E				mov	byte ptr es:[0Eh],al	; (A0AF:000E=0)
020A:54A9  26: 83 3E 000A FF			cmp	word ptr es:[0Ah],0FFFFh	; (A0AF:000A=0)
020A:54AF  75 04				jne	loc_744			; Jump if not equal
020A:54B1  26: A3 000A				mov	word ptr es:[0Ah],ax	; (A0AF:000A=0)
020A:54B5			loc_744:
020A:54B5  80 3E 2A2B 00			cmp	byte ptr ds:[2A2Bh],0	; (9B68:2A2B=0A0h)
020A:54BA  77 04				ja	loc_745			; Jump if above
020A:54BC  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:54C0			loc_745:
020A:54C0  C6 06 1594 01			mov	byte ptr ds:[1594h],1	; (9B68:1594=20h)
020A:54C5  E8 4396				call	sub_145			; (985E)
020A:54C8  E8 3F35				call	sub_132			; (9400)
020A:54CB  8A 26 2C3E				mov	ah,byte ptr ds:[2C3Eh]	; (9B68:2C3E=0E1h)
020A:54CF  E8 2F16				call	sub_112			; (83E8)
020A:54D2  EB 0D				jmp	short loc_748		; (54E1)
020A:54D4			loc_746:
020A:54D4  9A 16BF:0628		;*		call	far ptr sub_187		;*(16BF:0628)
020A:54D4  9A 28 06 BF 16			db	 9Ah, 28h, 06h,0BFh, 16h
020A:54D9			loc_747:
020A:54D9  80 26 1594 FD			and	byte ptr ds:[1594h],0FDh	; (9B68:1594=20h)
020A:54DE  E8 30F3				call	sub_114			; (85D4)
020A:54E1			loc_748:
020A:54E1  E8 2ED0				call	sub_111			; (83B4)
020A:54E4  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:54E8  C6 47 7A 07				mov	byte ptr [bx+7Ah],7
020A:54EC  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:54F0  E8 31A5				call	sub_115			; (8698)
020A:54F3  E8 2C36				call	sub_104			; (812C)
020A:54F6  E9 FB9A				jmp	loc_708			; (5093)
020A:54F9  E8 4362				call	sub_145			; (985E)
020A:54FC  B0 41				mov	al,41h			; 'A'
020A:54FE  80 3E 2EBD 01			cmp	byte ptr ds:[2EBDh],1	; (9B68:2EBD=0EEh)
020A:5503  74 02				je	loc_749			; Jump if equal
020A:5505  B0 4C				mov	al,4Ch			; 'L'
020A:5507			loc_749:
020A:5507  E8 061E				call	sub_87			; (5B28)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 171

020A:550A  E8 2C1F				call	sub_104			; (812C)
020A:550D  E9 FB83				jmp	loc_708			; (5093)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_80		proc	near
020A:5510  8A 15				mov	dl,[di]
020A:5512  80 FA 40				cmp	dl,40h			; '@'
020A:5515  72 03				jb	loc_750			; Jump if below
020A:5517  80 E2 DF				and	dl,0DFh
020A:551A			loc_750:
020A:551A  80 EA 30				sub	dl,30h			; '0'
020A:551D  80 FA 09				cmp	dl,9
020A:5520  76 08				jbe	loc_751			; Jump if below or =
020A:5522  80 EA 07				sub	dl,7
020A:5525  80 FA 0F				cmp	dl,0Fh
020A:5528  77 0C				ja	loc_752			; Jump if above
020A:552A			loc_751:
020A:552A  32 F6				xor	dh,dh			; Zero register
020A:552C  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:552C  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:5531  72 03				jc	loc_752			; Jump if carry Set
020A:5533  F9					stc				; Set carry flag
020A:5534  EB 01				jmp	short loc_753		; (5537)
020A:5536			loc_752:
020A:5536  F8					clc				; Clear carry flag
020A:5537			loc_753:
020A:5537  C3					retn
				sub_80		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_81		proc	near
020A:5538  51					push	cx
020A:5539  B1 04				mov	cl,4
020A:553B  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:553D  59					pop	cx
020A:553E  8A 05				mov	al,[di]
020A:5540  3C 40				cmp	al,40h			; '@'
020A:5542  72 02				jb	loc_754			; Jump if below
020A:5544  24 DF				and	al,0DFh
020A:5546			loc_754:
020A:5546  2C 30				sub	al,30h			; '0'
020A:5548  3C 09				cmp	al,9
020A:554A  76 06				jbe	loc_755			; Jump if below or =
020A:554C  2C 07				sub	al,7
020A:554E  3C 0F				cmp	al,0Fh
020A:5550  77 33				ja	loc_758			; Jump if above
020A:5552			loc_755:
020A:5552  32 E4				xor	ah,ah			; Zero register
020A:5554  03 D0				add	dx,ax
020A:5556  51					push	cx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 172

020A:5557  B1 04				mov	cl,4
020A:5559  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:555B  59					pop	cx
020A:555C  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:555C  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:5561  72 22				jc	loc_758			; Jump if carry Set
020A:5563  8A 05				mov	al,[di]
020A:5565  3C 40				cmp	al,40h			; '@'
020A:5567  72 02				jb	loc_756			; Jump if below
020A:5569  24 DF				and	al,0DFh
020A:556B			loc_756:
020A:556B  2C 30				sub	al,30h			; '0'
020A:556D  3C 09				cmp	al,9
020A:556F  76 06				jbe	loc_757			; Jump if below or =
020A:5571  2C 07				sub	al,7
020A:5573  3C 0F				cmp	al,0Fh
020A:5575  77 0E				ja	loc_758			; Jump if above
020A:5577			loc_757:
020A:5577  32 E4				xor	ah,ah			; Zero register
020A:5579  03 D0				add	dx,ax
020A:557B  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:557B  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:5580  72 03				jc	loc_758			; Jump if carry Set
020A:5582  F9					stc				; Set carry flag
020A:5583  EB 01				jmp	short loc_759		; (5586)
020A:5585			loc_758:
020A:5585  F8					clc				; Clear carry flag
020A:5586			loc_759:
020A:5586  C3					retn
				sub_81		endp
  
020A:5587  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_82		proc	near
020A:5588  53					push	bx
020A:5589  33 D2				xor	dx,dx			; Zero register
020A:558B  E8 FFAA				call	sub_81			; (5538)
020A:558E  73 03				jnc	loc_760			; Jump if carry=0
020A:5590  E8 FFA5				call	sub_81			; (5538)
020A:5593			loc_760:
020A:5593  5B					pop	bx
020A:5594  C3					retn
				sub_82		endp
  
020A:5595  87 DB				xchg	bx,bx
020A:5597  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_83		proc	near
020A:5598  06					push	es
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 173

020A:5599  53					push	bx
020A:559A  56					push	si
020A:559B  33 D2				xor	dx,dx			; Zero register
020A:559D  C6 06 2A1C 00			mov	byte ptr ds:[2A1Ch],0	; (020A:2A1C=0A0h)
020A:55A2  8A 05				mov	al,[di]
020A:55A4  3C 40				cmp	al,40h			; '@'
020A:55A6  73 03				jae	loc_761			; Jump if above or =
020A:55A8  E9 0101				jmp	loc_773			; (56AC)
020A:55AB			loc_761:
020A:55AB  24 DF				and	al,0DFh
020A:55AD  3C 53				cmp	al,53h			; 'S'
020A:55AF  74 03				je	loc_762			; Jump if equal
020A:55B1  E9 00ED				jmp	loc_772			; (56A1)
020A:55B4			loc_762:
020A:55B4  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:55B4  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:55B9  73 02				jnc	loc_763			; Jump if carry=0
020A:55BB  EB 7D				jmp	short loc_768		; (563A)
020A:55BD			loc_763:
020A:55BD  8A 05				mov	al,[di]
020A:55BF  24 DF				and	al,0DFh
020A:55C1  3C 45				cmp	al,45h			; 'E'
020A:55C3  75 77				jne	loc_769			; Jump if not equal
020A:55C5  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:55C5  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:55CA  72 6E				jc	loc_768			; Jump if carry Set
020A:55CC  8A 05				mov	al,[di]
020A:55CE  24 DF				and	al,0DFh
020A:55D0  3C 47				cmp	al,47h			; 'G'
020A:55D2  75 66				jne	loc_768			; Jump if not equal
020A:55D4  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:55D4  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:55D9  72 5F				jc	loc_768			; Jump if carry Set
020A:55DB  8A 05				mov	al,[di]
020A:55DD  3C 5F				cmp	al,5Fh			; '_'
020A:55DF  75 07				jne	loc_764			; Jump if not equal
020A:55E1  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:55E1  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:55E6  72 52				jc	loc_768			; Jump if carry Set
020A:55E8			loc_764:
020A:55E8  8A 05				mov	al,[di]
020A:55EA  24 DF				and	al,0DFh
020A:55EC  2C 41				sub	al,41h			; 'A'
020A:55EE  3C 19				cmp	al,19h
020A:55F0  77 48				ja	loc_768			; Jump if above
020A:55F2  50					push	ax
020A:55F3  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:55F3  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:55F8  73 04				jnc	loc_765			; Jump if carry=0
020A:55FA  58					pop	ax
020A:55FB  E9 00B8				jmp	loc_774			; (56B6)
020A:55FE			loc_765:
020A:55FE  8A 15				mov	dl,[di]
020A:5600  80 E2 DF				and	dl,0DFh
020A:5603  80 EA 41				sub	dl,41h			; 'A'
020A:5606  80 FA 19				cmp	dl,19h
020A:5609  77 17				ja	loc_767			; Jump if above
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 174

020A:560B  58					pop	ax
020A:560C  FE C0				inc	al
020A:560E  52					push	dx
020A:560F  B2 1A				mov	dl,1Ah
020A:5611  F6 E2				mul	dl			; ax = reg * al
020A:5613  5A					pop	dx
020A:5614  32 F6				xor	dh,dh			; Zero register
020A:5616  03 C2				add	ax,dx
020A:5618  3D 00FA				cmp	ax,0FAh
020A:561B  73 02				jae	loc_766			; Jump if above or =
020A:561D  EB 65				jmp	short loc_771		; (5684)
020A:561F			loc_766:
020A:561F  E9 0094				jmp	loc_774			; (56B6)
020A:5622			loc_767:
020A:5622  58					pop	ax
020A:5623  32 E4				xor	ah,ah			; Zero register
020A:5625  D1 C0				rol	ax,1			; Rotate
020A:5627  BE 28F3				mov	si,28F3h
020A:562A  E8 4228				call	sub_142			; (9855)
020A:562D  03 F0				add	si,ax
020A:562F  26: 8B 14				mov	dx,es:[si]
020A:5632  83 FA FF				cmp	dx,0FFFFh
020A:5635  74 03				je	loc_768			; Jump if equal
020A:5637  E9 007F				jmp	loc_775			; (56B9)
020A:563A			loc_768:
020A:563A  EB 7A				jmp	short loc_774		; (56B6)
020A:563C			loc_769:
020A:563C  3C 47				cmp	al,47h			; 'G'
020A:563E  75 76				jne	loc_774			; Jump if not equal
020A:5640  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:5640  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:5645  72 6F				jc	loc_774			; Jump if carry Set
020A:5647  8A 05				mov	al,[di]
020A:5649  3C 5F				cmp	al,5Fh			; '_'
020A:564B  75 07				jne	loc_770			; Jump if not equal
020A:564D  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:564D  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:5652  72 E6				jc	loc_768			; Jump if carry Set
020A:5654			loc_770:
020A:5654  8A 05				mov	al,[di]
020A:5656  24 DF				and	al,0DFh
020A:5658  2C 41				sub	al,41h			; 'A'
020A:565A  3C 19				cmp	al,19h
020A:565C  77 58				ja	loc_774			; Jump if above
020A:565E  B2 1A				mov	dl,1Ah
020A:5660  F6 E2				mul	dl			; ax = reg * al
020A:5662  50					push	ax
020A:5663  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:5663  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:5668  72 4C				jc	loc_774			; Jump if carry Set
020A:566A  8A 15				mov	dl,[di]
020A:566C  80 E2 DF				and	dl,0DFh
020A:566F  80 EA 41				sub	dl,41h			; 'A'
020A:5672  80 FA 19				cmp	dl,19h
020A:5675  77 3F				ja	loc_774			; Jump if above
020A:5677  58					pop	ax
020A:5678  32 F6				xor	dh,dh			; Zero register
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 175

020A:567A  03 C2				add	ax,dx
020A:567C  05 001A				add	ax,1Ah
020A:567F  3D 00FA				cmp	ax,0FAh
020A:5682  73 32				jae	loc_774			; Jump if above or =
020A:5684			loc_771:
020A:5684  32 E4				xor	ah,ah			; Zero register
020A:5686  D1 C0				rol	ax,1			; Rotate
020A:5688  BE 28F3				mov	si,28F3h
020A:568B  E8 41C7				call	sub_142			; (9855)
020A:568E  03 F0				add	si,ax
020A:5690  26: 8B 14				mov	dx,es:[si]
020A:5693  83 FA FF				cmp	dx,0FFFFh
020A:5696  74 1E				je	loc_774			; Jump if equal
020A:5698  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:5698  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:569D  72 17				jc	loc_774			; Jump if carry Set
020A:569F  EB 18				jmp	short loc_775		; (56B9)
020A:56A1			loc_772:
020A:56A1  3C 4E				cmp	al,4Eh			; 'N'
020A:56A3  75 07				jne	loc_773			; Jump if not equal
020A:56A5  C6 06 2A1C 01			mov	byte ptr ds:[2A1Ch],1	; (020A:2A1C=0A0h)
020A:56AA  EB 0D				jmp	short loc_775		; (56B9)
020A:56AC			loc_773:
020A:56AC  E8 FE89				call	sub_81			; (5538)
020A:56AF  73 05				jnc	loc_774			; Jump if carry=0
020A:56B1  E8 FE84				call	sub_81			; (5538)
020A:56B4  EB 03				jmp	short loc_775		; (56B9)
020A:56B6			loc_774:
020A:56B6  F8					clc				; Clear carry flag
020A:56B7  EB 01				jmp	short loc_776		; (56BA)
020A:56B9			loc_775:
020A:56B9  F9					stc				; Set carry flag
020A:56BA			loc_776:
020A:56BA  5E					pop	si
020A:56BB  5B					pop	bx
020A:56BC  07					pop	es
020A:56BD  C3					retn
				sub_83		endp
  
020A:56BE  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_84		proc	near
020A:56C0  56					push	si
020A:56C1  E8 00C0				call	sub_85			; (5784)
020A:56C4  72 03				jc	loc_777			; Jump if carry Set
020A:56C6  E9 00B5				jmp	loc_787			; (577E)
020A:56C9			loc_777:
020A:56C9  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:56CC  74 0A				je	loc_779			; Jump if equal
020A:56CE  80 3C 09				cmp	byte ptr [si],9
020A:56D1  74 05				je	loc_779			; Jump if equal
020A:56D3			loc_778:
020A:56D3  80 3C 3D				cmp	byte ptr [si],3Dh	; '='
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 176

020A:56D6  75 0A				jne	loc_780			; Jump if not equal
020A:56D8			loc_779:
020A:56D8  46					inc	si
020A:56D9  3B 36 44FC				cmp	si,data_489		; (020A:44FC=2600h)
020A:56DD  76 EA				jbe	loc_777			; Jump if below or =
020A:56DF  E9 009F				jmp	loc_788			; (5781)
020A:56E2			loc_780:
020A:56E2  8A 04				mov	al,[si]
020A:56E4  24 DF				and	al,0DFh
020A:56E6  3C 53				cmp	al,53h			; 'S'
020A:56E8  75 49				jne	loc_783			; Jump if not equal
020A:56EA  46					inc	si
020A:56EB  3B 36 44FC				cmp	si,data_489		; (020A:44FC=2600h)
020A:56EF  74 42				je	loc_783			; Jump if equal
020A:56F1  8A 04				mov	al,[si]
020A:56F3  24 DF				and	al,0DFh
020A:56F5  3C 47				cmp	al,47h			; 'G'
020A:56F7  74 3C				je	loc_784			; Jump if equal
020A:56F9  3C 45				cmp	al,45h			; 'E'
020A:56FB  75 36				jne	loc_783			; Jump if not equal
020A:56FD  83 C6 02				add	si,2
020A:5700  3B 36 44FC				cmp	si,data_489		; (020A:44FC=2600h)
020A:5704  74 2D				je	loc_783			; Jump if equal
020A:5706  8A 04				mov	al,[si]
020A:5708  3C 5F				cmp	al,5Fh			; '_'
020A:570A  75 1F				jne	loc_782			; Jump if not equal
020A:570C  46					inc	si
020A:570D  8A 04				mov	al,[si]
020A:570F  3B 36 44FC				cmp	si,data_489		; (020A:44FC=2600h)
020A:5713  74 1E				je	loc_783			; Jump if equal
020A:5715  46					inc	si
020A:5716  3B 36 44FC				cmp	si,data_489		; (020A:44FC=2600h)
020A:571A  74 0C				je	loc_781			; Jump if equal
020A:571C  8A 04				mov	al,[si]
020A:571E  24 DF				and	al,0DFh
020A:5720  3C 41				cmp	al,41h			; 'A'
020A:5722  72 04				jb	loc_781			; Jump if below
020A:5724  3C 5A				cmp	al,5Ah			; 'Z'
020A:5726  76 10				jbe	loc_785			; Jump if below or =
020A:5728			loc_781:
020A:5728  4E					dec	si
020A:5729  8A 04				mov	al,[si]
020A:572B			loc_782:
020A:572B  24 DF				and	al,0DFh
020A:572D  2C 41				sub	al,41h			; 'A'
020A:572F  3C 1A				cmp	al,1Ah
020A:5731  72 32				jb	loc_786			; Jump if below
020A:5733			loc_783:
020A:5733  EB 4C				jmp	short loc_788		; (5781)
020A:5735			loc_784:
020A:5735  83 C6 02				add	si,2
020A:5738			loc_785:
020A:5738  3B 36 44FC				cmp	si,data_489		; (020A:44FC=2600h)
020A:573C  73 43				jae	loc_788			; Jump if above or =
020A:573E  8A 34				mov	dh,[si]
020A:5740  80 E6 DF				and	dh,0DFh
020A:5743  80 EE 41				sub	dh,41h			; 'A'
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 177

020A:5746  80 FE 1A				cmp	dh,1Ah
020A:5749  73 36				jae	loc_788			; Jump if above or =
020A:574B  8A 44 FF				mov	al,[si-1]
020A:574E  24 DF				and	al,0DFh
020A:5750  2C 40				sub	al,40h			; '@'
020A:5752  3C 1B				cmp	al,1Bh
020A:5754  73 2B				jae	loc_788			; Jump if above or =
020A:5756  B2 1A				mov	dl,1Ah
020A:5758  F6 E2				mul	dl			; ax = reg * al
020A:575A  32 D2				xor	dl,dl			; Zero register
020A:575C  86 D6				xchg	dl,dh
020A:575E  03 C2				add	ax,dx
020A:5760  3D 00FA				cmp	ax,0FAh
020A:5763  73 1C				jae	loc_788			; Jump if above or =
020A:5765			loc_786:
020A:5765  32 E4				xor	ah,ah			; Zero register
020A:5767  D1 C0				rol	ax,1			; Rotate
020A:5769  56					push	si
020A:576A  06					push	es
020A:576B  BE 28F3				mov	si,28F3h
020A:576E  E8 40E4				call	sub_142			; (9855)
020A:5771  03 F0				add	si,ax
020A:5773  26: 8B 14				mov	dx,es:[si]
020A:5776  07					pop	es
020A:5777  5E					pop	si
020A:5778  83 FA FF				cmp	dx,0FFFFh
020A:577B  74 04				je	loc_788			; Jump if equal
020A:577D  46					inc	si
020A:577E			loc_787:
020A:577E  58					pop	ax
020A:577F  F8					clc				; Clear carry flag
020A:5780  C3					retn
020A:5781			loc_788:
020A:5781  5E					pop	si
020A:5782  F9					stc				; Set carry flag
020A:5783  C3					retn
				sub_84		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_85		proc	near
020A:5784  56					push	si
020A:5785			loc_789:
020A:5785  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:5788  74 0A				je	loc_790			; Jump if equal
020A:578A  80 3C 09				cmp	byte ptr [si],9
020A:578D  74 05				je	loc_790			; Jump if equal
020A:578F  80 3C 3D				cmp	byte ptr [si],3Dh	; '='
020A:5792  75 09				jne	loc_791			; Jump if not equal
020A:5794			loc_790:
020A:5794  46					inc	si
020A:5795  3B 36 44FC				cmp	si,data_489		; (020A:44FC=2600h)
020A:5799  76 EA				jbe	loc_789			; Jump if below or =
020A:579B  EB 59				jmp	short loc_798		; (57F6)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 178

020A:579D			loc_791:
020A:579D  33 D2				xor	dx,dx			; Zero register
020A:579F  B5 04				mov	ch,4
020A:57A1  8A CD				mov	cl,ch
020A:57A3			loc_792:
020A:57A3  8A 04				mov	al,[si]
020A:57A5  3C 40				cmp	al,40h			; '@'
020A:57A7  72 02				jb	loc_793			; Jump if below
020A:57A9  24 DF				and	al,0DFh
020A:57AB			loc_793:
020A:57AB  2C 30				sub	al,30h			; '0'
020A:57AD  3C 09				cmp	al,9
020A:57AF  76 0A				jbe	loc_794			; Jump if below or =
020A:57B1  2C 07				sub	al,7
020A:57B3  3C 0F				cmp	al,0Fh
020A:57B5  77 1E				ja	loc_797			; Jump if above
020A:57B7  3C 0A				cmp	al,0Ah
020A:57B9  72 1A				jb	loc_797			; Jump if below
020A:57BB			loc_794:
020A:57BB  32 E4				xor	ah,ah			; Zero register
020A:57BD  03 D0				add	dx,ax
020A:57BF  D3 C2				rol	dx,cl			; Rotate
020A:57C1  FE CD				dec	ch
020A:57C3  80 FD 00				cmp	ch,0
020A:57C6  74 07				je	loc_795			; Jump if equal
020A:57C8  46					inc	si
020A:57C9  3B 36 44FC				cmp	si,data_489		; (020A:44FC=2600h)
020A:57CD  76 D4				jbe	loc_792			; Jump if below or =
020A:57CF			loc_795:
020A:57CF  46					inc	si
020A:57D0			loc_796:
020A:57D0  D3 CA				ror	dx,cl			; Rotate
020A:57D2  58					pop	ax
020A:57D3  F8					clc				; Clear carry flag
020A:57D4  C3					retn
020A:57D5			loc_797:
020A:57D5  80 FD 04				cmp	ch,4
020A:57D8  74 1C				je	loc_798			; Jump if equal
020A:57DA  8A 04				mov	al,[si]
020A:57DC  3C 20				cmp	al,20h			; ' '
020A:57DE  74 F0				je	loc_796			; Jump if equal
020A:57E0  3C 09				cmp	al,9
020A:57E2  74 EC				je	loc_796			; Jump if equal
020A:57E4  3C 00				cmp	al,0
020A:57E6  74 E8				je	loc_796			; Jump if equal
020A:57E8  3C 2C				cmp	al,2Ch			; ','
020A:57EA  74 E4				je	loc_796			; Jump if equal
020A:57EC  3C 3A				cmp	al,3Ah			; ':'
020A:57EE  74 E0				je	loc_796			; Jump if equal
020A:57F0  24 DF				and	al,0DFh
020A:57F2  3C 48				cmp	al,48h			; 'H'
020A:57F4  74 DA				je	loc_796			; Jump if equal
020A:57F6			loc_798:
020A:57F6  F9					stc				; Set carry flag
020A:57F7  5E					pop	si
020A:57F8  C3					retn
				sub_85		endp
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 179

  
020A:57F9  87 DB				xchg	bx,bx
020A:57FB  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_86		proc	near
020A:57FC			loc_799:
020A:57FC  80 3D 20				cmp	byte ptr [di],20h	; ' '
020A:57FF  74 08				je	loc_800			; Jump if equal
020A:5801  80 3D 09				cmp	byte ptr [di],9
020A:5804  74 03				je	loc_800			; Jump if equal
020A:5806  F8					clc				; Clear carry flag
020A:5807  EB 09				jmp	short loc_801		; (5812)
020A:5809			loc_800:
020A:5809  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:5809  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:580E  72 02				jc	loc_801			; Jump if carry Set
020A:5810  EB EA				jmp	short loc_799		; (57FC)
020A:5812			loc_801:
020A:5812  C3					retn
				sub_86		endp
  
020A:5813  000D[00]				db	13 dup (0)
020A:5820  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (020A:263E=0Eh)
020A:5825  75 07				jne	loc_802			; Jump if not equal
020A:5827  80 3E 2EBD 01			cmp	data_403,1		; (020A:2EBD=54h)
020A:582C  74 03				je	loc_803			; Jump if equal
020A:582E			loc_802:
020A:582E  E9 00DD				jmp	loc_813			; (590E)
020A:5831			loc_803:
020A:5831  50					push	ax
020A:5832  51					push	cx
020A:5833  52					push	dx
020A:5834  57					push	di
020A:5835  8A D7				mov	dl,bh
020A:5837  32 FF				xor	bh,bh			; Zero register
020A:5839  BF 27B5				mov	di,27B5h
020A:583C  83 C7 15				add	di,15h
020A:583F  3B EF				cmp	bp,di
020A:5841  77 02				ja	loc_804			; Jump if above
020A:5843  EB 70				jmp	short loc_808		; (58B5)
020A:5845			loc_804:
020A:5845  E8BF					dw	0E8BFh
020A:5847  27					daa				; Decimal adjust
020A:5848  81 EF 27D5				sub	di,27D5h
020A:584C  83 C7 02				add	di,2
020A:584F  8B C5				mov	ax,bp
020A:5851  2D 27D5				sub	ax,27D5h
020A:5854  03 C3				add	ax,bx
020A:5856  03 C3				add	ax,bx
020A:5858  40					inc	ax
020A:5859  80 FB 04				cmp	bl,4
020A:585C  75 08				jne	loc_805			; Jump if not equal
020A:585E  F6 06 2A77 E0			test	byte ptr ds:[2A77h],0E0h	; (020A:2A77=0A5h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 180

020A:5863  74 01				jz	loc_805			; Jump if zero
020A:5865  40					inc	ax
020A:5866			loc_805:
020A:5866  80 FA 00				cmp	dl,0
020A:5869  74 01				je	loc_806			; Jump if equal
020A:586B  40					inc	ax
020A:586C			loc_806:
020A:586C  3B C7				cmp	ax,di
020A:586E  72 45				jb	loc_808			; Jump if below
020A:5870  BD 27E8				mov	bp,27E8h
020A:5873  3E: C6 46 00 2B			mov	byte ptr ds:[bp],2Bh	; '+'
020A:5878  BF 27B5				mov	di,27B5h
020A:587B  80 3D 00				cmp	byte ptr [di],0
020A:587E  75 35				jne	loc_808			; Jump if not equal
020A:5880  FC					cld				; Clear direction
020A:5881  B0 20				mov	al,20h			; ' '
020A:5883  51					push	cx
020A:5884  B9 0015				mov	cx,15h
020A:5887  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:588C  06					push	es
020A:588D  E8 3FCE				call	sub_145			; (985E)
020A:5890  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:5892  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:5897  5A					pop	dx
020A:5898  8E C2				mov	es,dx
020A:589A  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:589F  5A					pop	dx
020A:58A0  75 0A				jnz	loc_807			; Jump if not zero
020A:58A2  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:58A7  74 03				je	loc_807			; Jump if equal
020A:58A9  E8 4288				call	sub_151			; (9B34)
020A:58AC			loc_807:
020A:58AC  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:58B1  59					pop	cx
020A:58B2  BD 27B5				mov	bp,27B5h
020A:58B5			loc_808:
020A:58B5  80 FB 01				cmp	bl,1
020A:58B8  75 14				jne	loc_809			; Jump if not equal
020A:58BA  26: 8A 04				mov	al,es:[si]
020A:58BD  9A 16BF:0078		;*		call	far ptr sub_173		;*(16BF:0078)
020A:58BD  9A 78 00 BF 16			db	 9Ah, 78h, 00h,0BFh, 16h
020A:58C2  80 FA 00				cmp	dl,0
020A:58C5  74 42				je	loc_812			; Jump if equal
020A:58C7  3E: 88 56 00				mov	ds:[bp],dl
020A:58CB  45					inc	bp
020A:58CC  EB 3B				jmp	short loc_812		; (5909)
020A:58CE			loc_809:
020A:58CE  80 FB 02				cmp	bl,2
020A:58D1  75 0A				jne	loc_810			; Jump if not equal
020A:58D3  26: 8B 04				mov	ax,es:[si]
020A:58D6  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:58D6  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:58DB  EB 2C				jmp	short loc_812		; (5909)
020A:58DD			loc_810:
020A:58DD  F6 06 2A77 E0			test	byte ptr ds:[2A77h],0E0h	; (9B68:2A77=0ABh)
020A:58E2  74 0E				jz	loc_811			; Jump if zero
020A:58E4  26: 8B 44 02				mov	ax,es:[si+2]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 181

020A:58E8  26: 8B 1C				mov	bx,es:[si]
020A:58EB  9A 16BF:0218		;*		call	far ptr sub_177		;*(16BF:0218)
020A:58EB  9A 18 02 BF 16			db	 9Ah, 18h, 02h,0BFh, 16h
020A:58F0  EB 17				jmp	short loc_812		; (5909)
020A:58F2			loc_811:
020A:58F2  26: 8B 44 02				mov	ax,es:[si+2]
020A:58F6  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:58F6  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:58FB  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:5900  45					inc	bp
020A:5901  26: 8B 04				mov	ax,es:[si]
020A:5904  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:5904  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:5909			loc_812:
020A:5909  45					inc	bp
020A:590A  5F					pop	di
020A:590B  5A					pop	dx
020A:590C  59					pop	cx
020A:590D  58					pop	ax
020A:590E			loc_813:
020A:590E  C3					retn
020A:590F  00 BA 0005				add	[bp+si+5],bh
020A:5913  BB 0C7C				mov	bx,0C7Ch
020A:5916  E8 EBF7		;*		call	sub_47			;*(4510)
020A:5916  E8 F7 EB				db	0E8h,0F7h,0EBh
020A:5919  C3					retn
020A:591A  87 DB				xchg	bx,bx
020A:591C  50					push	ax
020A:591D  53					push	bx
020A:591E  51					push	cx
020A:591F  52					push	dx
020A:5920  56					push	si
020A:5921  57					push	di
020A:5922  55					push	bp
020A:5923  1E					push	ds
020A:5924  BF 0008				mov	di,8
020A:5927  BE 0000				mov	si,0
020A:592A  E8 3F13				call	sub_138			; (9840)
020A:592D			loc_814:
020A:592D  8B 04				mov	ax,[si]
020A:592F  8B 5C 02				mov	bx,[si+2]
020A:5932  8B 4C 04				mov	cx,[si+4]
020A:5935  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:593A  72 02				jb	loc_815			; Jump if below
020A:593C  EB 57				jmp	short loc_821		; (5995)
020A:593E			loc_815:
020A:593E  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:5943  74 1F				jz	loc_817			; Jump if zero
020A:5945  26: 3B 05				cmp	ax,es:[di]
020A:5948  72 10				jb	loc_816			; Jump if below
020A:594A  77 42				ja	loc_820			; Jump if above
020A:594C  26: 3B 5D 02				cmp	bx,es:[di+2]
020A:5950  77 3C				ja	loc_820			; Jump if above
020A:5952  26: 3B 4D 02				cmp	cx,es:[di+2]
020A:5956  72 02				jb	loc_816			; Jump if below
020A:5958  EB 0A				jmp	short loc_817		; (5964)
020A:595A			loc_816:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 182

020A:595A  83 C6 15				add	si,15h
020A:595D  83 3C FF				cmp	word ptr [si],0FFFFh
020A:5960  74 2C				je	loc_820			; Jump if equal
020A:5962  EB C9				jmp	short loc_814		; (592D)
020A:5964			loc_817:
020A:5964  BB 377F				mov	bx,377Fh
020A:5967  26: 8A 45 05				mov	al,es:[di+5]
020A:596B  25 000F				and	ax,0Fh
020A:596E  1E					push	ds
020A:596F  E8 3ED7				call	sub_140			; (9849)
020A:5972  D7					xlat				; al=[al+[bx]] table
020A:5973  1F					pop	ds
020A:5974  0A C0				or	al,al			; Zero ?
020A:5976  75 04				jnz	loc_818			; Jump if not zero
020A:5978  26: 8A 45 06				mov	al,es:[di+6]
020A:597C			loc_818:
020A:597C  03 F8				add	di,ax
020A:597E  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:5983  72 02				jb	loc_819			; Jump if below
020A:5985  EB 0E				jmp	short loc_821		; (5995)
020A:5987			loc_819:
020A:5987  83 3C FF				cmp	word ptr [si],0FFFFh
020A:598A  74 02				je	loc_820			; Jump if equal
020A:598C  EB 9F				jmp	short loc_814		; (592D)
020A:598E			loc_820:
020A:598E  26: 80 4D 05 80			or	byte ptr es:[di+5],80h
020A:5993  EB CF				jmp	short loc_817		; (5964)
020A:5995			loc_821:
020A:5995  1F					pop	ds
020A:5996  5D					pop	bp
020A:5997  5F					pop	di
020A:5998  5E					pop	si
020A:5999  5A					pop	dx
020A:599A  59					pop	cx
020A:599B  5B					pop	bx
020A:599C  58					pop	ax
020A:599D  C3					retn
020A:599E  00 00				add	[bx+si],al
020A:59A0  50					push	ax
020A:59A1  53					push	bx
020A:59A2  57					push	di
020A:59A3  BF 0008				mov	di,8
020A:59A6  BB 377F				mov	bx,377Fh
020A:59A9			loc_822:
020A:59A9  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:59AD  75 07				jne	loc_823			; Jump if not equal
020A:59AF  26: 83 7D 02 FE			cmp	word ptr es:[di+2],0FFFEh
020A:59B4  73 25				jae	loc_826			; Jump if above or =
020A:59B6			loc_823:
020A:59B6  26: 80 65 07 EF			and	byte ptr es:[di+7],0EFh
020A:59BB  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:59C0  74 05				jz	loc_824			; Jump if zero
020A:59C2  C6 06 42B4 01			mov	data_470,1		; (020A:42B4=54h)
020A:59C7			loc_824:
020A:59C7  26: 8A 45 05				mov	al,es:[di+5]
020A:59CB  25 000F				and	ax,0Fh
020A:59CE  D7					xlat				; al=[al+[bx]] table
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 183

020A:59CF  0A C0				or	al,al			; Zero ?
020A:59D1  75 04				jnz	loc_825			; Jump if not zero
020A:59D3  26: 8A 45 06				mov	al,es:[di+6]
020A:59D7			loc_825:
020A:59D7  03 F8				add	di,ax
020A:59D9  EB CE				jmp	short loc_822		; (59A9)
020A:59DB			loc_826:
020A:59DB  5F					pop	di
020A:59DC  5B					pop	bx
020A:59DD  58					pop	ax
020A:59DE  C3					retn
020A:59DF  00 F7				add	bh,dh
020A:59E1  06					push	es
020A:59E2  C6 42 02 00				mov	byte ptr [bp+si+2],0
020A:59E6  74 02				jz	loc_828			; Jump if zero
020A:59E8			loc_827:
020A:59E8  EB 7B				jmp	short loc_835		; (5A65)
020A:59EA			loc_828:
020A:59EA  8A 04				mov	al,[si]
020A:59EC  8A E0				mov	ah,al
020A:59EE  3C 00				cmp	al,0
020A:59F0  74 F6				je	loc_827			; Jump if equal
020A:59F2  24 5F				and	al,5Fh			; '_'
020A:59F4  3C 41				cmp	al,41h			; 'A'
020A:59F6  72 F0				jb	loc_827			; Jump if below
020A:59F8  3C 5A				cmp	al,5Ah			; 'Z'
020A:59FA  77 EC				ja	loc_827			; Jump if above
020A:59FC  3C 50				cmp	al,50h			; 'P'
020A:59FE  77 1E				ja	loc_830			; Jump if above
020A:5A00  2C 41				sub	al,41h			; 'A'
020A:5A02  BB 8000				mov	bx,8000h
020A:5A05  8A C8				mov	cl,al
020A:5A07  D3 CB				ror	bx,cl			; Rotate
020A:5A09  8B 16 42CC				mov	dx,data_473		; (020A:42CC=92h)
020A:5A0D  0B D3				or	dx,bx
020A:5A0F  F6 C4 20				test	ah,20h			; ' '
020A:5A12  74 04				jz	loc_829			; Jump if zero
020A:5A14  F7 D3				not	bx
020A:5A16  23 D3				and	dx,bx
020A:5A18			loc_829:
020A:5A18  89 16 42CC				mov	data_473,dx		; (020A:42CC=92h)
020A:5A1C  EB 44				jmp	short loc_834		; (5A62)
020A:5A1E			loc_830:
020A:5A1E  3C 54				cmp	al,54h			; 'T'
020A:5A20  77 24				ja	loc_832			; Jump if above
020A:5A22  80 3E 2EBD 00			cmp	data_403,0		; (020A:2EBD=54h)
020A:5A27  74 39				je	loc_834			; Jump if equal
020A:5A29  2C 51				sub	al,51h			; 'Q'
020A:5A2B  B3 04				mov	bl,4
020A:5A2D  8A C8				mov	cl,al
020A:5A2F  D2 CB				ror	bl,cl			; Rotate
020A:5A31  8A 16 430B				mov	dl,data_477		; (020A:430B=0FFh)
020A:5A35  0A D3				or	dl,bl
020A:5A37  F6 C4 20				test	ah,20h			; ' '
020A:5A3A  74 04				jz	loc_831			; Jump if zero
020A:5A3C  F6 D3				not	bl
020A:5A3E  22 D3				and	dl,bl
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 184

020A:5A40			loc_831:
020A:5A40  88 16 430B				mov	data_477,dl		; (020A:430B=0FFh)
020A:5A44  77 1C				ja	loc_834			; Jump if above
020A:5A46			loc_832:
020A:5A46  2C 55				sub	al,55h			; 'U'
020A:5A48  BB 0080				mov	bx,80h
020A:5A4B  8A C8				mov	cl,al
020A:5A4D  D3 CB				ror	bx,cl			; Rotate
020A:5A4F  8B 16 42CE				mov	dx,data_474		; (020A:42CE=3000h)
020A:5A53  0B D3				or	dx,bx
020A:5A55  F6 C4 20				test	ah,20h			; ' '
020A:5A58  74 04				jz	loc_833			; Jump if zero
020A:5A5A  F7 D3				not	bx
020A:5A5C  23 D3				and	dx,bx
020A:5A5E			loc_833:
020A:5A5E  89 16 42CE				mov	data_474,dx		; (020A:42CE=3000h)
020A:5A62			loc_834:
020A:5A62  46					inc	si
020A:5A63  EB 85				jmp	short loc_828		; (59EA)
020A:5A65			loc_835:
020A:5A65  A0 263D				mov	al,byte ptr ds:[263Dh]	; (020A:263D=99h)
020A:5A68  F6 06 430B 07			test	data_477,7		; (020A:430B=0FFh)
020A:5A6D  74 0C				jz	loc_836			; Jump if zero
020A:5A6F  80 3E 263D 0A			cmp	byte ptr ds:[263Dh],0Ah	; (020A:263D=99h)
020A:5A74  73 05				jae	loc_836			; Jump if above or =
020A:5A76  B0 0A				mov	al,0Ah
020A:5A78  E8 3159				call	sub_125			; (8BD4)
020A:5A7B			loc_836:
020A:5A7B  E8 2CAA				call	sub_118			; (8728)
020A:5A7E  F7 06 42CC 0001			test	data_473,1		; (020A:42CC=92h)
020A:5A84  74 07				jz	loc_837			; Jump if zero
020A:5A86  B0 01				mov	al,1
020A:5A88  9A 16BF:12D0		;*		call	far ptr sub_207		;*(16BF:12D0)
020A:5A88  9A D0 12 BF 16			db	 9Ah,0D0h, 12h,0BFh, 16h
020A:5A8D			loc_837:
020A:5A8D  C3					retn
020A:5A8E  87 DB				xchg	bx,bx
020A:5A90  89 36 44FC				mov	data_489,si		; (020A:44FC=2600h)
020A:5A94  01 1E 44FC				add	data_489,bx		; (020A:44FC=2600h)
020A:5A98  E8 FCE9				call	sub_85			; (5784)
020A:5A9B  72 15				jc	loc_838			; Jump if carry Set
020A:5A9D  E8 3DD6				call	sub_148			; (9876)
020A:5AA0  05 1000				add	ax,1000h
020A:5AA3  3B D0				cmp	dx,ax
020A:5AA5  72 0B				jb	loc_838			; Jump if below
020A:5AA7  89 16 2A22				mov	word ptr ds:[2A22h],dx	; (9B68:2A22=0AEADh)
020A:5AAB  2E: 89 16 4867			mov	cs:data_509,dx		; (020A:4867=0E825h)
020A:5AB0  EB 05				jmp	short loc_839		; (5AB7)
020A:5AB2			loc_838:
020A:5AB2  C6 06 4457 31			mov	byte ptr ds:[4457h],31h	; (9B68:4457=0) '1'
020A:5AB7			loc_839:
020A:5AB7  C3					retn
020A:5AB8  B4 01				mov	ah,1
020A:5ABA  3C 46				cmp	al,46h			; 'F'
020A:5ABC  74 25				je	loc_840			; Jump if equal
020A:5ABE  FE C4				inc	ah
020A:5AC0  3C 43				cmp	al,43h			; 'C'
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 185

020A:5AC2  74 1F				je	loc_840			; Jump if equal
020A:5AC4  FE C4				inc	ah
020A:5AC6  3C 45				cmp	al,45h			; 'E'
020A:5AC8  74 19				je	loc_840			; Jump if equal
020A:5ACA  FE C4				inc	ah
020A:5ACC  3C 5A				cmp	al,5Ah			; 'Z'
020A:5ACE  74 13				je	loc_840			; Jump if equal
020A:5AD0  FE C4				inc	ah
020A:5AD2  3C 44				cmp	al,44h			; 'D'
020A:5AD4  74 0D				je	loc_840			; Jump if equal
020A:5AD6  FE C4				inc	ah
020A:5AD8  3C 4F				cmp	al,4Fh			; 'O'
020A:5ADA  74 07				je	loc_840			; Jump if equal
020A:5ADC  C6 06 4457 09			mov	data_486,9		; (020A:4457=3Dh)
020A:5AE1  EB 0C				jmp	short loc_841		; (5AEF)
020A:5AE3			loc_840:
020A:5AE3  88 26 2C40				mov	byte ptr data_378,ah	; (020A:2C40=41h)
020A:5AE7  E8 065A				call	sub_90			; (6144)
020A:5AEA  9A 16BF:066C		;*		call	far ptr sub_189		;*(16BF:066C)
020A:5AEA  9A 6C 06 BF 16			db	 9Ah, 6Ch, 06h,0BFh, 16h
020A:5AEF			loc_841:
020A:5AEF  C3					retn
020A:5AF0  3C 41				cmp	al,41h			; 'A'
020A:5AF2  72 2C				jb	loc_842			; Jump if below
020A:5AF4  3C 5A				cmp	al,5Ah			; 'Z'
020A:5AF6  77 28				ja	loc_842			; Jump if above
020A:5AF8  8A D0				mov	dl,al
020A:5AFA  80 EA 41				sub	dl,41h			; 'A'
020A:5AFD  8A DA				mov	bl,dl
020A:5AFF  B4 19				mov	ah,19h
020A:5B01  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:5B03  50					push	ax
020A:5B04  B4 0E				mov	ah,0Eh
020A:5B06  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:5B08  B4 19				mov	ah,19h
020A:5B0A  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:5B0C  A2 2A94				mov	byte ptr ds:[2A94h],al	; (020A:2A94=8Dh)
020A:5B0F  04 61				add	al,61h			; 'a'
020A:5B11  A2 064E				mov	byte ptr ds:[64Eh],al	; (020A:064E=0B8h)
020A:5B14  E8 26C5				call	sub_108			; (81DC)
020A:5B17  58					pop	ax
020A:5B18  8A D0				mov	dl,al
020A:5B1A  B4 0E				mov	ah,0Eh
020A:5B1C  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:5B1E  EB 05				jmp	short loc_843		; (5B25)
020A:5B20			loc_842:
020A:5B20  C6 06 4457 09			mov	data_486,9		; (020A:4457=3Dh)
020A:5B25			loc_843:
020A:5B25  C3					retn
020A:5B26  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 186

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_87		proc	near
020A:5B28  50					push	ax
020A:5B29  BF 034A				mov	di,34Ah
020A:5B2C  B9 0009				mov	cx,9
020A:5B2F  B0 2E				mov	al,2Eh			; '.'
020A:5B31  FC					cld				; Clear direction
020A:5B32  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:5B34  4F					dec	di
020A:5B35  58					pop	ax
020A:5B36  3C 4C				cmp	al,4Ch			; 'L'
020A:5B38  74 0C				je	loc_844			; Jump if equal
020A:5B3A  3C 41				cmp	al,41h			; 'A'
020A:5B3C  74 0A				je	loc_845			; Jump if equal
020A:5B3E  C6 06 4457 09			mov	byte ptr ds:[4457h],9	; (9B68:4457=0)
020A:5B43  E9 00D0				jmp	loc_851			; (5C16)
020A:5B46			loc_844:
020A:5B46  EB 74				jmp	short loc_849		; (5BBC)
020A:5B48			loc_845:
020A:5B48  C6 06 2EBD 00			mov	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:5B4D  9A 16BF:0420		;*		call	far ptr sub_184		;*(16BF:0420)
020A:5B4D  9A 20 04 BF 16			db	 9Ah, 20h, 04h,0BFh, 16h
020A:5B52  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:5B56  C6 47 30 00				mov	byte ptr [bx+30h],0
020A:5B5A  C6 47 33 00				mov	byte ptr [bx+33h],0
020A:5B5E  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:5B62  C6 47 65 00				mov	byte ptr [bx+65h],0
020A:5B66  C6 47 66 00				mov	byte ptr [bx+66h],0
020A:5B6A  C6 47 69 00				mov	byte ptr [bx+69h],0
020A:5B6E  C6 47 6A 00				mov	byte ptr [bx+6Ah],0
020A:5B72  C6 47 6B 00				mov	byte ptr [bx+6Bh],0
020A:5B76  C6 47 6C 00				mov	byte ptr [bx+6Ch],0
020A:5B7A  C6 47 70 00				mov	byte ptr [bx+70h],0
020A:5B7E  C6 47 71 00				mov	byte ptr [bx+71h],0
020A:5B82  C6 47 7B 00				mov	byte ptr [bx+7Bh],0
020A:5B86  C6 06 430B 00			mov	byte ptr ds:[430Bh],0	; (9B68:430B=0)
020A:5B8B  B9 0008				mov	cx,8
020A:5B8E  BF 13A1				mov	di,13A1h
020A:5B91  A0 139E				mov	al,byte ptr ds:[139Eh]	; (9B68:139E=20h)
  
020A:5B94			locloop_846:
020A:5B94  3A 05				cmp	al,[di]
020A:5B96  74 05				je	loc_847			; Jump if equal
020A:5B98  83 C7 0F				add	di,0Fh
020A:5B9B  E2 F7				loop	locloop_846		; Loop if cx > 0
  
020A:5B9D			loc_847:
020A:5B9D  81 7D 01 4F4E			cmp	word ptr [di+1],4F4Eh
020A:5BA2  75 16				jne	loc_848			; Jump if not equal
020A:5BA4  BF 13A1				mov	di,13A1h
020A:5BA7  8A 05				mov	al,[di]
020A:5BA9  A2 139E				mov	byte ptr ds:[139Eh],al	; (9B68:139E=20h)
020A:5BAC  8B 45 0D				mov	ax,[di+0Dh]
020A:5BAF  A3 139F				mov	word ptr ds:[139Fh],ax	; (9B68:139F=2E5Bh)
020A:5BB2  9A 16BF:0648		;*		call	far ptr sub_188		;*(16BF:0648)
020A:5BB2  9A 48 06 BF 16			db	 9Ah, 48h, 06h,0BFh, 16h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 187

020A:5BB7  E8 24C6				call	sub_103			; (8080)
020A:5BBA			loc_848:
020A:5BBA  EB 49				jmp	short loc_850		; (5C05)
020A:5BBC			loc_849:
020A:5BBC  C6 06 2EBD 01			mov	byte ptr ds:[2EBDh],1	; (9B68:2EBD=0EEh)
020A:5BC1  9A 16BF:0420		;*		call	far ptr sub_184		;*(16BF:0420)
020A:5BC1  9A 20 04 BF 16			db	 9Ah, 20h, 04h,0BFh, 16h
020A:5BC6  A0 11E9				mov	al,byte ptr ds:[11E9h]	; (9B68:11E9=20h)
020A:5BC9  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:5BCD  C6 47 30 0F				mov	byte ptr [bx+30h],0Fh
020A:5BD1  C6 47 33 0F				mov	byte ptr [bx+33h],0Fh
020A:5BD5  C6 47 34 0F				mov	byte ptr [bx+34h],0Fh
020A:5BD9  88 47 65				mov	[bx+65h],al
020A:5BDC  C6 47 66 07				mov	byte ptr [bx+66h],7
020A:5BE0  C6 47 69 07				mov	byte ptr [bx+69h],7
020A:5BE4  C6 47 6A 07				mov	byte ptr [bx+6Ah],7
020A:5BE8  C6 47 6C 07				mov	byte ptr [bx+6Ch],7
020A:5BEC  88 47 70				mov	[bx+70h],al
020A:5BEF  C6 47 71 07				mov	byte ptr [bx+71h],7
020A:5BF3  C6 47 7B 07				mov	byte ptr [bx+7Bh],7
020A:5BF7  E8 2B2E				call	sub_118			; (8728)
020A:5BFA  80 3E 2EBC 00			cmp	byte ptr ds:[2EBCh],0	; (9B68:2EBC=0A0h)
020A:5BFF  74 04				je	loc_850			; Jump if equal
020A:5C01  C6 47 6B 07				mov	byte ptr [bx+6Bh],7
020A:5C05			loc_850:
020A:5C05  BF 2BF5				mov	di,2BF5h
020A:5C08  B9 003F				mov	cx,3Fh
020A:5C0B  B0 2E				mov	al,2Eh			; '.'
020A:5C0D  FC					cld				; Clear direction
020A:5C0E  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:5C10  4F					dec	di
020A:5C11  9A 16BF:0420		;*		call	far ptr sub_184		;*(16BF:0420)
020A:5C11  9A 20 04 BF 16			db	 9Ah, 20h, 04h,0BFh, 16h
020A:5C16			loc_851:
020A:5C16  C3					retn
				sub_87		endp
  
020A:5C17  90					nop
020A:5C18  C6 06 4392 01			mov	byte ptr ds:[4392h],1	; (9B68:4392=0)
020A:5C1D  C3					retn
020A:5C1E  87 DB				xchg	bx,bx
020A:5C20  80 3E 2EBD 00			cmp	data_403,0		; (020A:2EBD=54h)
020A:5C25  74 1B				je	loc_853			; Jump if equal
020A:5C27  BF 0358				mov	di,358h
020A:5C2A  B9 0021				mov	cx,21h
020A:5C2D  B0 20				mov	al,20h			; ' '
020A:5C2F  FC					cld				; Clear direction
020A:5C30  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:5C32  B9 0020				mov	cx,20h
020A:5C35  83 FB 20				cmp	bx,20h
020A:5C38  77 02				ja	loc_852			; Jump if above
020A:5C3A  8B CB				mov	cx,bx
020A:5C3C			loc_852:
020A:5C3C  BF 0358				mov	di,358h
020A:5C3F  FC					cld				; Clear direction
020A:5C40  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5C42			loc_853:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 188

020A:5C42  C3					retn
020A:5C43  90					nop
020A:5C44  83 FB 00				cmp	bx,0
020A:5C47  75 08				jne	loc_854			; Jump if not equal
020A:5C49  C6 06 4457 09			mov	data_486,9		; (020A:4457=3Dh)
020A:5C4E  E9 00B6				jmp	loc_864			; (5D07)
020A:5C51			loc_854:
020A:5C51  80 3C 3F				cmp	byte ptr [si],3Fh	; '?'
020A:5C54  74 21				je	loc_856			; Jump if equal
020A:5C56  8B FE				mov	di,si
020A:5C58  B0 00				mov	al,0
020A:5C5A  9A 16BF:04A4		;*		call	far ptr sub_185		;*(16BF:04A4)
020A:5C5A  9A A4 04 BF 16			db	 9Ah,0A4h, 04h,0BFh, 16h
020A:5C5F  9A 16BF:0510		;*		call	far ptr sub_186		;*(16BF:0510)
020A:5C5F  9A 10 05 BF 16			db	 9Ah, 10h, 05h,0BFh, 16h
020A:5C64  A2 2C3F				mov	data_377,al		; (020A:2C3F=4Dh)
020A:5C67  3C 01				cmp	al,1
020A:5C69  76 04				jbe	loc_855			; Jump if below or =
020A:5C6B  3C 0B				cmp	al,0Bh
020A:5C6D  76 12				jbe	loc_857			; Jump if below or =
020A:5C6F			loc_855:
020A:5C6F  C6 06 4457 09			mov	data_486,9		; (020A:4457=3Dh)
020A:5C74  E9 0090				jmp	loc_864			; (5D07)
020A:5C77			loc_856:
020A:5C77  80 3E 2C3F 01			cmp	data_377,1		; (020A:2C3F=4Dh)
020A:5C7C  77 25				ja	loc_858			; Jump if above
020A:5C7E  E9 0093				jmp	loc_865			; (5D14)
020A:5C81			loc_857:
020A:5C81  BF 2BB2				mov	di,2BB2h
020A:5C84  B9 0040				mov	cx,40h
020A:5C87  B0 00				mov	al,0
020A:5C89  FC					cld				; Clear direction
020A:5C8A  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:5C8C  BF 0629				mov	di,629h
020A:5C8F  B9 000C				mov	cx,0Ch
020A:5C92  B0 20				mov	al,20h			; ' '
020A:5C94  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:5C96  BF 2BB2				mov	di,2BB2h
020A:5C99  8B CB				mov	cx,bx
020A:5C9B  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5C9D  4F					dec	di
020A:5C9E  9A 16BF:1740		;*		call	far ptr sub_208		;*(16BF:1740)
020A:5C9E  9A 40 17 BF 16			db	 9Ah, 40h, 17h,0BFh, 16h
020A:5CA3			loc_858:
020A:5CA3  80 3E 2A1E 03			cmp	data_341,3		; (020A:2A1E=0A4h)
020A:5CA8  75 05				jne	loc_859			; Jump if not equal
020A:5CAA  C6 06 2A1E 04			mov	data_341,4		; (020A:2A1E=0A4h)
020A:5CAF			loc_859:
020A:5CAF  E8 5942				call	sub_162			; (B5F4)
020A:5CB2  73 05				jnc	loc_860			; Jump if carry=0
020A:5CB4  A2 4457				mov	data_486,al		; (020A:4457=3Dh)
020A:5CB7  EB 4E				jmp	short loc_864		; (5D07)
020A:5CB9			loc_860:
020A:5CB9  80 3E 263A 01			cmp	data_282,1		; (020A:263A=0)
020A:5CBE  74 05				je	loc_861			; Jump if equal
020A:5CC0  B0 0A				mov	al,0Ah
020A:5CC2  E8 2F0F				call	sub_125			; (8BD4)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 189

020A:5CC5			loc_861:
020A:5CC5  E8 3B8D				call	sub_142			; (9855)
020A:5CC8  BE 0000				mov	si,0
020A:5CCB  BB 28F3				mov	bx,28F3h
020A:5CCE  B9 00FA				mov	cx,0FAh
020A:5CD1  32 D2				xor	dl,dl			; Zero register
  
020A:5CD3			locloop_862:
020A:5CD3  26: 8B 04				mov	ax,es:[si]
020A:5CD6  26: 89 07				mov	es:[bx],ax
020A:5CD9  3D FFFF				cmp	ax,0FFFFh
020A:5CDC  74 02				je	loc_863			; Jump if equal
020A:5CDE  FE C2				inc	dl
020A:5CE0			loc_863:
020A:5CE0  83 C6 15				add	si,15h
020A:5CE3  43					inc	bx
020A:5CE4  43					inc	bx
020A:5CE5  E2 EC				loop	locloop_862		; Loop if cx > 0
  
020A:5CE7  88 16 2A2D				mov	byte ptr ds:[2A2Dh],dl	; (020A:2A2D=0ADh)
020A:5CEB  80 3E 2A1E 04			cmp	data_341,4		; (020A:2A1E=0A4h)
020A:5CF0  75 15				jne	loc_864			; Jump if not equal
020A:5CF2  FE 0E 2A1E				dec	data_341		; (020A:2A1E=0A4h)
020A:5CF6  BF 0000				mov	di,0
020A:5CF9  B8 00FF				mov	ax,0FFh
020A:5CFC  B9 0015				mov	cx,15h
020A:5CFF  FC					cld				; Clear direction
020A:5D00  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:5D02  C6 06 2A2B 00			mov	byte ptr ds:[2A2Bh],0	; (020A:2A2B=0A5h)
020A:5D07			loc_864:
020A:5D07  E8 3B54				call	sub_145			; (985E)
020A:5D0A  51					push	cx
020A:5D0B  B4 2A				mov	ah,2Ah			; '*'
020A:5D0D  E8 26D8				call	sub_112			; (83E8)
020A:5D10  E8 236D				call	sub_103			; (8080)
020A:5D13  59					pop	cx
020A:5D14			loc_865:
020A:5D14  C3					retn
020A:5D15  87 DB				xchg	bx,bx
020A:5D17  90					nop
020A:5D18  89 36 44FC				mov	data_489,si		; (020A:44FC=2600h)
020A:5D1C  01 1E 44FC				add	data_489,bx		; (020A:44FC=2600h)
020A:5D20  E8 FA61				call	sub_85			; (5784)
020A:5D23  72 2A				jc	loc_866			; Jump if carry Set
020A:5D25  89 16 2EC4				mov	data_405,dx		; (020A:2EC4=444Eh)
020A:5D29  89 16 2EC6				mov	data_406,dx		; (020A:2EC6=574Fh)
020A:5D2D  83 26 2EC6 E7			and	data_406,0FFE7h		; (020A:2EC6=574Fh)
020A:5D32  88 36 47B1				mov	data_501,dh		; (020A:47B1=53h)
020A:5D36  F7 06 2EC4 0002			test	data_405,2		; (020A:2EC4=444Eh)
020A:5D3C  74 16				jz	loc_867			; Jump if zero
020A:5D3E  BF 2D1C				mov	di,2D1Ch
020A:5D41  83 EF 04				sub	di,4
020A:5D44  B9 0004				mov	cx,4
020A:5D47  2B F9				sub	di,cx
020A:5D49  B0 58				mov	al,58h			; 'X'
020A:5D4B  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:5D4D  EB 05				jmp	short loc_867		; (5D54)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 190

020A:5D4F			loc_866:
020A:5D4F  C6 06 4457 09			mov	data_486,9		; (020A:4457=3Dh)
020A:5D54			loc_867:
020A:5D54  C3					retn
020A:5D55  87 DB				xchg	bx,bx
020A:5D57  90					nop
020A:5D58  80 3E 2A2B 00			cmp	byte ptr ds:[2A2Bh],0	; (020A:2A2B=0A5h)
020A:5D5D  74 2A				je	loc_868			; Jump if equal
020A:5D5F  B4 12				mov	ah,12h
020A:5D61  E8 2684				call	sub_112			; (83E8)
020A:5D64  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (020A:1306=0)
020A:5D68  A0 11E8				mov	al,data_211		; (020A:11E8=0)
020A:5D6B  88 47 52				mov	[bx+52h],al
020A:5D6E  E8 230F				call	sub_103			; (8080)
020A:5D71  9A 16BF:0340		;*		call	far ptr sub_180		;*(16BF:0340)
020A:5D71  9A 40 03 BF 16			db	 9Ah, 40h, 03h,0BFh, 16h
020A:5D76  B4 2A				mov	ah,2Ah			; '*'
020A:5D78  E8 266D				call	sub_112			; (83E8)
020A:5D7B  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (020A:1306=0)
020A:5D7F  B0 0F				mov	al,0Fh
020A:5D81  88 47 52				mov	[bx+52h],al
020A:5D84  E8 22F9				call	sub_103			; (8080)
020A:5D87  B0 42				mov	al,42h			; 'B'
020A:5D89			loc_868:
020A:5D89  B4 01				mov	ah,1
020A:5D8B  3C 46				cmp	al,46h			; 'F'
020A:5D8D  74 16				je	loc_869			; Jump if equal
020A:5D8F  FE C4				inc	ah
020A:5D91  3C 42				cmp	al,42h			; 'B'
020A:5D93  74 10				je	loc_869			; Jump if equal
020A:5D95  FE C4				inc	ah
020A:5D97  3C 44				cmp	al,44h			; 'D'
020A:5D99  74 0A				je	loc_869			; Jump if equal
020A:5D9B  2C 31				sub	al,31h			; '1'
020A:5D9D  3C 02				cmp	al,2
020A:5D9F  77 0E				ja	loc_870			; Jump if above
020A:5DA1  FE C0				inc	al
020A:5DA3  8A E0				mov	ah,al
020A:5DA5			loc_869:
020A:5DA5  88 26 2A1E				mov	data_341,ah		; (020A:2A1E=0A4h)
020A:5DA9  88 26 2A1F				mov	data_342,ah		; (020A:2A1F=0A5h)
020A:5DAD  EB 05				jmp	short loc_871		; (5DB4)
020A:5DAF			loc_870:
020A:5DAF  C6 06 4457 09			mov	data_486,9		; (020A:4457=3Dh)
020A:5DB4			loc_871:
020A:5DB4  C3					retn
020A:5DB5  87 DB				xchg	bx,bx
020A:5DB7  90					nop
020A:5DB8  32 E4				xor	ah,ah			; Zero register
020A:5DBA  3C 44				cmp	al,44h			; 'D'
020A:5DBC  74 19				je	loc_872			; Jump if equal
020A:5DBE  FE C4				inc	ah
020A:5DC0  3C 5A				cmp	al,5Ah			; 'Z'
020A:5DC2  74 13				je	loc_872			; Jump if equal
020A:5DC4  FE C4				inc	ah
020A:5DC6  3C 53				cmp	al,53h			; 'S'
020A:5DC8  74 0D				je	loc_872			; Jump if equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 191

020A:5DCA  FE C4				inc	ah
020A:5DCC  3C 4C				cmp	al,4Ch			; 'L'
020A:5DCE  74 07				je	loc_872			; Jump if equal
020A:5DD0  C6 06 4457 09			mov	data_486,9		; (020A:4457=3Dh)
020A:5DD5  EB 0A				jmp	short loc_873		; (5DE1)
020A:5DD7			loc_872:
020A:5DD7  88 26 14AD				mov	data_222,ah		; (020A:14AD=0)
020A:5DDB  E8 298E				call	sub_119			; (876C)
020A:5DDE  E8 02D0				call	sub_88			; (60B1)
020A:5DE1			loc_873:
020A:5DE1  C3					retn
020A:5DE2  87 DB				xchg	bx,bx
020A:5DE4  C6 06 2A79 01			mov	data_363,1		; (020A:2A79=0E0h)
020A:5DE9  E9 01D8				jmp	loc_898			; (5FC4)
020A:5DEC  C3					retn
020A:5DED  87 DB				xchg	bx,bx
020A:5DEF  90					nop
020A:5DF0  83 FB 00				cmp	bx,0
020A:5DF3  75 08				jne	loc_874			; Jump if not equal
020A:5DF5  C6 06 4457 09			mov	data_486,9		; (020A:4457=3Dh)
020A:5DFA  E9 008F				jmp	loc_880			; (5E8C)
020A:5DFD			loc_874:
020A:5DFD  FC					cld				; Clear direction
020A:5DFE  BF 2BF5				mov	di,2BF5h
020A:5E01  B9 0029				mov	cx,29h
020A:5E04  B0 00				mov	al,0
020A:5E06  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:5E08  BF 034A				mov	di,34Ah
020A:5E0B  B9 000C				mov	cx,0Ch
020A:5E0E  B0 20				mov	al,20h			; ' '
020A:5E10  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:5E12  BF 2BF5				mov	di,2BF5h
020A:5E15  8B CB				mov	cx,bx
  
020A:5E17			locloop_875:
020A:5E17  80 3C 2E				cmp	byte ptr [si],2Eh	; '.'
020A:5E1A  74 03				je	loc_876			; Jump if equal
020A:5E1C  A4					movsb				; Mov [si] to es:[di]
020A:5E1D  E2 F8				loop	locloop_875		; Loop if cx > 0
  
020A:5E1F			loc_876:
020A:5E1F  2B D9				sub	bx,cx
020A:5E21  9A 16BF:0420		;*		call	far ptr sub_184		;*(16BF:0420)
020A:5E21  9A 20 04 BF 16			db	 9Ah, 20h, 04h,0BFh, 16h
020A:5E26  83 C3 04				add	bx,4
020A:5E29  47					inc	di
020A:5E2A  8B CB				mov	cx,bx
020A:5E2C			loc_877:
020A:5E2C  8A 05				mov	al,[di]
020A:5E2E  3C 3A				cmp	al,3Ah			; ':'
020A:5E30  74 0D				je	loc_878			; Jump if equal
020A:5E32  3C 5C				cmp	al,5Ch			; '\'
020A:5E34  74 09				je	loc_878			; Jump if equal
020A:5E36  83 F9 01				cmp	cx,1
020A:5E39  76 05				jbe	loc_879			; Jump if below or =
020A:5E3B  49					dec	cx
020A:5E3C  4F					dec	di
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 192

020A:5E3D  EB ED				jmp	short loc_877		; (5E2C)
020A:5E3F			loc_878:
020A:5E3F  47					inc	di
020A:5E40			loc_879:
020A:5E40  2B D9				sub	bx,cx
020A:5E42  8B CB				mov	cx,bx
020A:5E44  41					inc	cx
020A:5E45  83 F9 0C				cmp	cx,0Ch
020A:5E48  77 42				ja	loc_880			; Jump if above
020A:5E4A  8B F7				mov	si,di
020A:5E4C  BF 034A				mov	di,34Ah
020A:5E4F  FC					cld				; Clear direction
020A:5E50  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5E52  80 3E 2BF6 3A			cmp	data_374,3Ah		; (020A:2BF6=0) ':'
020A:5E57  75 33				jne	loc_880			; Jump if not equal
020A:5E59  A0 2BF5				mov	al,byte ptr ds:[2BF5h]	; (020A:2BF5=0)
020A:5E5C  24 5F				and	al,5Fh			; '_'
020A:5E5E  3C 41				cmp	al,41h			; 'A'
020A:5E60  72 2A				jb	loc_880			; Jump if below
020A:5E62  3C 5A				cmp	al,5Ah			; 'Z'
020A:5E64  77 26				ja	loc_880			; Jump if above
020A:5E66  8A D0				mov	dl,al
020A:5E68  80 EA 41				sub	dl,41h			; 'A'
020A:5E6B  8A DA				mov	bl,dl
020A:5E6D  B4 19				mov	ah,19h
020A:5E6F  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:5E71  50					push	ax
020A:5E72  B4 0E				mov	ah,0Eh
020A:5E74  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:5E76  B4 19				mov	ah,19h
020A:5E78  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:5E7A  A2 2A94				mov	byte ptr ds:[2A94h],al	; (020A:2A94=8Dh)
020A:5E7D  04 61				add	al,61h			; 'a'
020A:5E7F  A2 064E				mov	byte ptr ds:[64Eh],al	; (020A:064E=0B8h)
020A:5E82  E8 2357				call	sub_108			; (81DC)
020A:5E85  58					pop	ax
020A:5E86  8A D0				mov	dl,al
020A:5E88  B4 0E				mov	ah,0Eh
020A:5E8A  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:5E8C			loc_880:
020A:5E8C  C3					retn
020A:5E8D  87 DB				xchg	bx,bx
020A:5E8F  90					nop
020A:5E90  2C 32				sub	al,32h			; '2'
020A:5E92  3C 07				cmp	al,7
020A:5E94  77 0E				ja	loc_881			; Jump if above
020A:5E96  04 02				add	al,2
020A:5E98  D0 E0				shl	al,1			; Shift w/zeros fill
020A:5E9A  E8 2D37				call	sub_125			; (8BD4)
020A:5E9D  C6 06 263A 01			mov	data_282,1		; (020A:263A=0)
020A:5EA2  EB 05				jmp	short loc_882		; (5EA9)
020A:5EA4			loc_881:
020A:5EA4  C6 06 4457 09			mov	data_486,9		; (020A:4457=3Dh)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 193

020A:5EA9			loc_882:
020A:5EA9  C3					retn
020A:5EAA  87 DB				xchg	bx,bx
020A:5EAC  32 E4				xor	ah,ah			; Zero register
020A:5EAE  3C 4E				cmp	al,4Eh			; 'N'
020A:5EB0  74 3E				je	loc_884			; Jump if equal
020A:5EB2  FE C4				inc	ah
020A:5EB4  3C 44				cmp	al,44h			; 'D'
020A:5EB6  74 38				je	loc_884			; Jump if equal
020A:5EB8  FE C4				inc	ah
020A:5EBA  3C 49				cmp	al,49h			; 'I'
020A:5EBC  74 32				je	loc_884			; Jump if equal
020A:5EBE  B4 04				mov	ah,4
020A:5EC0  3C 4F				cmp	al,4Fh			; 'O'
020A:5EC2  74 2C				je	loc_884			; Jump if equal
020A:5EC4  B4 07				mov	ah,7
020A:5EC6  3C 41				cmp	al,41h			; 'A'
020A:5EC8  74 26				je	loc_884			; Jump if equal
020A:5ECA  3C 45				cmp	al,45h			; 'E'
020A:5ECC  75 2B				jne	loc_885			; Jump if not equal
020A:5ECE			loc_883:
020A:5ECE  46					inc	si
020A:5ECF  4B					dec	bx
020A:5ED0  74 27				jz	loc_885			; Jump if zero
020A:5ED2  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:5ED5  75 F7				jne	loc_883			; Jump if not equal
020A:5ED7  46					inc	si
020A:5ED8  4B					dec	bx
020A:5ED9  74 1E				jz	loc_885			; Jump if zero
020A:5EDB  B4 06				mov	ah,6
020A:5EDD  80 3C 44				cmp	byte ptr [si],44h	; 'D'
020A:5EE0  74 0E				je	loc_884			; Jump if equal
020A:5EE2  FE CC				dec	ah
020A:5EE4  80 3C 49				cmp	byte ptr [si],49h	; 'I'
020A:5EE7  74 07				je	loc_884			; Jump if equal
020A:5EE9  B4 03				mov	ah,3
020A:5EEB  80 3C 4F				cmp	byte ptr [si],4Fh	; 'O'
020A:5EEE  75 09				jne	loc_885			; Jump if not equal
020A:5EF0			loc_884:
020A:5EF0  88 26 152A				mov	data_223,ah		; (020A:152A=0)
020A:5EF4  E8 28BD				call	sub_120			; (87B4)
020A:5EF7  EB 05				jmp	short loc_886		; (5EFE)
020A:5EF9			loc_885:
020A:5EF9  C6 06 4457 09			mov	data_486,9		; (020A:4457=3Dh)
020A:5EFE			loc_886:
020A:5EFE  C3					retn
020A:5EFF  90					nop
020A:5F00  80 3E 2EBD 00			cmp	data_403,0		; (020A:2EBD=54h)
020A:5F05  74 0D				je	loc_887			; Jump if equal
020A:5F07  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (020A:1306=0)
020A:5F0B  C6 06 2EBC 00			mov	data_402,0		; (020A:2EBC=4Fh)
020A:5F10  C6 47 6B 00				mov	byte ptr [bx+6Bh],0
020A:5F14			loc_887:
020A:5F14  C3					retn
020A:5F15  87 DB				xchg	bx,bx
020A:5F17  90					nop
020A:5F18  BF 13A1				mov	di,13A1h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 194

020A:5F1B  8A 05				mov	al,[di]
020A:5F1D  A2 139E				mov	data_219,al		; (020A:139E=0)
020A:5F20  33 ED				xor	bp,bp			; Zero register
020A:5F22  8D 55 0D				lea	dx,[di+0Dh]		; Load effective addr
020A:5F25  8D 4D 01				lea	cx,[di+1]		; Load effective addr
020A:5F28  2B D1				sub	dx,cx
020A:5F2A  8B CA				mov	cx,dx
020A:5F2C  33 DB				xor	bx,bx			; Zero register
020A:5F2E  56					push	si
  
020A:5F2F			locloop_888:
020A:5F2F  8A 04				mov	al,[si]
020A:5F31  3C 00				cmp	al,0
020A:5F33  74 35				je	loc_892			; Jump if equal
020A:5F35  3C 20				cmp	al,20h			; ' '
020A:5F37  74 06				je	loc_889			; Jump if equal
020A:5F39  3C 09				cmp	al,9
020A:5F3B  74 02				je	loc_889			; Jump if equal
020A:5F3D  EB 03				jmp	short loc_890		; (5F42)
020A:5F3F			loc_889:
020A:5F3F  46					inc	si
020A:5F40  EB ED				jmp	short locloop_888	; (5F2F)
020A:5F42			loc_890:
020A:5F42  38 41 01				cmp	[bx+di+1],al
020A:5F45  75 12				jne	loc_891			; Jump if not equal
020A:5F47  43					inc	bx
020A:5F48  46					inc	si
020A:5F49  80 79 01 2E				cmp	byte ptr [bx+di+1],2Eh	; '.'
020A:5F4D  74 21				je	loc_893			; Jump if equal
020A:5F4F  80 79 01 20				cmp	byte ptr [bx+di+1],20h	; ' '
020A:5F53  74 1B				je	loc_893			; Jump if equal
020A:5F55  E2 D8				loop	locloop_888		; Loop if cx > 0
  
020A:5F57  E3 17				jcxz	loc_893			; Jump if cx=0
020A:5F59			loc_891:
020A:5F59  5E					pop	si
020A:5F5A  56					push	si
020A:5F5B  45					inc	bp
020A:5F5C  83 FD 08				cmp	bp,8
020A:5F5F  73 09				jae	loc_892			; Jump if above or =
020A:5F61  8B CA				mov	cx,dx
020A:5F63  83 C7 0F				add	di,0Fh
020A:5F66  33 DB				xor	bx,bx			; Zero register
020A:5F68  EB C5				jmp	short locloop_888	; (5F2F)
020A:5F6A			loc_892:
020A:5F6A  5E					pop	si
020A:5F6B  B4 36				mov	ah,36h			; '6'
020A:5F6D  E9 DA8C		;*		jmp	loc_404			;*(39FC)
020A:5F6D  E9 8C DA				db	0E9h, 8Ch,0DAh
020A:5F70			loc_893:
020A:5F70  8A 05				mov	al,[di]
020A:5F72  A2 139E				mov	data_219,al		; (020A:139E=0)
020A:5F75  8B 45 0D				mov	ax,[di+0Dh]
020A:5F78  A3 139F				mov	data_220,ax		; (020A:139F=0)
020A:5F7B  9A 16BF:0648		;*		call	far ptr sub_188		;*(16BF:0648)
020A:5F7B  9A 48 06 BF 16			db	 9Ah, 48h, 06h,0BFh, 16h
020A:5F80  E8 20FD				call	sub_103			; (8080)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 195

020A:5F83  5E					pop	si
020A:5F84  C3					retn
020A:5F85  87 DB				xchg	bx,bx
020A:5F87  90					nop
020A:5F88  8B 04				mov	ax,[si]
020A:5F8A  8A 5C 02				mov	bl,[si+2]
020A:5F8D  BF 4413				mov	di,4413h
020A:5F90			loc_894:
020A:5F90  3B 05				cmp	ax,[di]
020A:5F92  75 05				jne	loc_895			; Jump if not equal
020A:5F94  3A 5D 02				cmp	bl,[di+2]
020A:5F97  74 10				je	loc_896			; Jump if equal
020A:5F99			loc_895:
020A:5F99  83 C7 04				add	di,4
020A:5F9C  81 FF 4457				cmp	di,4457h
020A:5FA0  72 EE				jb	loc_894			; Jump if below
020A:5FA2  C6 06 4457 09			mov	data_486,9		; (020A:4457=3Dh)
020A:5FA7  EB 57				jmp	short loc_902		; (6000)
020A:5FA9			loc_896:
020A:5FA9  8A 45 03				mov	al,[di+3]
020A:5FAC  3C 80				cmp	al,80h
020A:5FAE  74 50				je	loc_902			; Jump if equal
020A:5FB0  8A 36 2A77				mov	dh,byte ptr ds:[2A77h]	; (020A:2A77=0A5h)
020A:5FB4  3C 40				cmp	al,40h			; '@'
020A:5FB6  75 09				jne	loc_897			; Jump if not equal
020A:5FB8  A0 2A78				mov	al,data_362		; (020A:2A78=20h)
020A:5FBB  A8 F0				test	al,0F0h
020A:5FBD  74 02				jz	loc_897			; Jump if zero
020A:5FBF  0C 08				or	al,8
020A:5FC1			loc_897:
020A:5FC1  A2 2A77				mov	byte ptr ds:[2A77h],al	; (020A:2A77=0A5h)
020A:5FC4			loc_898:
020A:5FC4  A0 2A77				mov	al,byte ptr ds:[2A77h]	; (020A:2A77=0A5h)
020A:5FC7  F6 06 2A79 0F			test	data_363,0Fh		; (020A:2A79=0E0h)
020A:5FCC  74 1B				jz	loc_900			; Jump if zero
020A:5FCE  C6 06 2A79 01			mov	data_363,1		; (020A:2A79=0E0h)
020A:5FD3  A8 10				test	al,10h
020A:5FD5  74 07				jz	loc_899			; Jump if zero
020A:5FD7  C6 06 2A79 02			mov	data_363,2		; (020A:2A79=0E0h)
020A:5FDC  EB 1D				jmp	short loc_901		; (5FFB)
020A:5FDE			loc_899:
020A:5FDE  A8 20				test	al,20h			; ' '
020A:5FE0  74 07				jz	loc_900			; Jump if zero
020A:5FE2  C6 06 2A79 04			mov	data_363,4		; (020A:2A79=0E0h)
020A:5FE7  EB 12				jmp	short loc_901		; (5FFB)
020A:5FE9			loc_900:
020A:5FE9  A8 C0				test	al,0C0h
020A:5FEB  74 0E				jz	loc_901			; Jump if zero
020A:5FED  C6 06 2A79 0C			mov	data_363,0Ch		; (020A:2A79=0E0h)
020A:5FF2  A8 80				test	al,80h
020A:5FF4  74 05				jz	loc_901			; Jump if zero
020A:5FF6  C6 06 2A79 14			mov	data_363,14h		; (020A:2A79=0E0h)
020A:5FFB			loc_901:
020A:5FFB  B6 01				mov	dh,1
020A:5FFD  E8 2294				call	sub_109			; (8294)
020A:6000			loc_902:
020A:6000  C3					retn
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 196

020A:6001  87 DB				xchg	bx,bx
020A:6003  90					nop
020A:6004  55					push	bp
020A:6005  8B EB				mov	bp,bx
020A:6007  33 DB				xor	bx,bx			; Zero register
020A:6009  32 C9				xor	cl,cl			; Zero register
020A:600B  8A 1C				mov	bl,[si]
020A:600D  80 EB 30				sub	bl,30h			; '0'
020A:6010  80 FB 09				cmp	bl,9
020A:6013  76 03				jbe	loc_903			; Jump if below or =
020A:6015  E9 008F				jmp	loc_909			; (60A7)
020A:6018			loc_903:
020A:6018  8A C3				mov	al,bl
020A:601A  46					inc	si
020A:601B  4D					dec	bp
020A:601C  FE C1				inc	cl
020A:601E  8A 1C				mov	bl,[si]
020A:6020  80 EB 30				sub	bl,30h			; '0'
020A:6023  80 FB 09				cmp	bl,9
020A:6026  76 04				jbe	loc_904			; Jump if below or =
020A:6028  8A D8				mov	bl,al
020A:602A  EB 22				jmp	short loc_905		; (604E)
020A:602C			loc_904:
020A:602C  B5 0A				mov	ch,0Ah
020A:602E  F6 E5				mul	ch			; ax = reg * al
020A:6030  03 D8				add	bx,ax
020A:6032  46					inc	si
020A:6033  4D					dec	bp
020A:6034  FE C1				inc	cl
020A:6036  8A 14				mov	dl,[si]
020A:6038  80 EA 30				sub	dl,30h			; '0'
020A:603B  80 FA 09				cmp	dl,9
020A:603E  77 0E				ja	loc_905			; Jump if above
020A:6040  46					inc	si
020A:6041  4D					dec	bp
020A:6042  FE C1				inc	cl
020A:6044  8B C3				mov	ax,bx
020A:6046  F6 E5				mul	ch			; ax = reg * al
020A:6048  32 F6				xor	dh,dh			; Zero register
020A:604A  03 C2				add	ax,dx
020A:604C  8B D8				mov	bx,ax
020A:604E			loc_905:
020A:604E  83 FB 00				cmp	bx,0
020A:6051  74 0B				je	loc_906			; Jump if equal
020A:6053  83 FB 0A				cmp	bx,0Ah
020A:6056  72 4F				jb	loc_909			; Jump if below
020A:6058  81 FB 00FF				cmp	bx,0FFh
020A:605C  77 49				ja	loc_909			; Jump if above
020A:605E			loc_906:
020A:605E  88 1E 2EBF				mov	byte ptr ds:[2EBFh],bl	; (020A:2EBF=43h)
020A:6062  80 FB 00				cmp	bl,0
020A:6065  74 40				je	loc_909			; Jump if equal
020A:6067  BF 4BF3				mov	di,4BF3h
020A:606A  C7 45 FF 2020			mov	word ptr [di-1],2020h
020A:606F  56					push	si
020A:6070  4E					dec	si
020A:6071  32 ED				xor	ch,ch			; Zero register
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 197

020A:6073  FD					std				; Set direction flag
020A:6074  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:6076  FC					cld				; Clear direction
020A:6077  5E					pop	si
020A:6078  83 FD 02				cmp	bp,2
020A:607B  72 2A				jb	loc_909			; Jump if below
020A:607D  83 FD 32				cmp	bp,32h
020A:6080  77 25				ja	loc_909			; Jump if above
020A:6082			loc_907:
020A:6082  80 3C 2C				cmp	byte ptr [si],2Ch	; ','
020A:6085  74 06				je	loc_908			; Jump if equal
020A:6087  4D					dec	bp
020A:6088  74 1D				jz	loc_909			; Jump if zero
020A:608A  46					inc	si
020A:608B  EB F5				jmp	short loc_907		; (6082)
020A:608D			loc_908:
020A:608D  46					inc	si
020A:608E  4D					dec	bp
020A:608F  74 16				jz	loc_909			; Jump if zero
020A:6091  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:6094  74 F7				je	loc_908			; Jump if equal
020A:6096  80 3C 43				cmp	byte ptr [si],43h	; 'C'
020A:6099  75 0C				jne	loc_909			; Jump if not equal
020A:609B  46					inc	si
020A:609C  8A 04				mov	al,[si]
020A:609E  2C 30				sub	al,30h			; '0'
020A:60A0  3C 03				cmp	al,3
020A:60A2  77 03				ja	loc_909			; Jump if above
020A:60A4  A2 2EBA				mov	data_401,al		; (020A:2EBA=52h)
020A:60A7			loc_909:
020A:60A7  5D					pop	bp
020A:60A8  C3					retn
020A:60A9  87 DB				xchg	bx,bx
020A:60AB  90					nop
020A:60AC  C6 06 2EB8 00			mov	data_400,0		; (020A:2EB8=45h)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_88		proc	near
020A:60B1  BE 03B0				mov	si,3B0h
020A:60B4  BA 0003				mov	dx,3
020A:60B7			loc_910:
020A:60B7  B9 0017				mov	cx,17h
020A:60BA  E8 2E63				call	sub_127			; (8F20)
020A:60BD  83 C6 39				add	si,39h
020A:60C0  4A					dec	dx
020A:60C1  75 F4				jnz	loc_910			; Jump if not zero
020A:60C3  B9 3429				mov	cx,3429h
020A:60C6  81 E9 2F0C				sub	cx,2F0Ch
020A:60CA  BE 2F0C				mov	si,2F0Ch
020A:60CD  E8 2E50				call	sub_127			; (8F20)
020A:60D0  B9 5030				mov	cx,5030h
020A:60D3  81 E9 4CDE				sub	cx,4CDEh
020A:60D7  BE 4CDE				mov	si,4CDEh
020A:60DA  E8 2E43				call	sub_127			; (8F20)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 198

020A:60DD  C3					retn
				sub_88		endp
  
020A:60DE  87 DB				xchg	bx,bx
020A:60E0  80 3E 2EBD 00			cmp	data_403,0		; (020A:2EBD=54h)
020A:60E5  74 35				je	loc_914			; Jump if equal
020A:60E7  83 FB 02				cmp	bx,2
020A:60EA  72 0F				jb	loc_911			; Jump if below
020A:60EC  8A 44 01				mov	al,[si+1]
020A:60EF  B3 07				mov	bl,7
020A:60F1  3C 4E				cmp	al,4Eh			; 'N'
020A:60F3  74 0D				je	loc_912			; Jump if equal
020A:60F5  32 DB				xor	bl,bl			; Zero register
020A:60F7  3C 46				cmp	al,46h			; 'F'
020A:60F9  74 07				je	loc_912			; Jump if equal
020A:60FB			loc_911:
020A:60FB  C6 06 4457 09			mov	data_486,9		; (020A:4457=3Dh)
020A:6100  EB 1A				jmp	short loc_914		; (611C)
020A:6102			loc_912:
020A:6102  88 1E 430B				mov	data_477,bl		; (020A:430B=0FFh)
020A:6106  80 FB 00				cmp	bl,0
020A:6109  74 0E				je	loc_913			; Jump if equal
020A:610B  80 3E 263D 0A			cmp	byte ptr ds:[263Dh],0Ah	; (020A:263D=99h)
020A:6110  73 0A				jae	loc_914			; Jump if above or =
020A:6112  B0 0A				mov	al,0Ah
020A:6114  E8 2ABD				call	sub_125			; (8BD4)
020A:6117  EB 03				jmp	short loc_914		; (611C)
020A:6119			loc_913:
020A:6119  E8 260C				call	sub_118			; (8728)
020A:611C			loc_914:
020A:611C  C3					retn
020A:611D  87 DB				xchg	bx,bx
020A:611F  90					nop
020A:6120  2C 30				sub	al,30h			; '0'
020A:6122  3C 1F				cmp	al,1Fh
020A:6124  77 03				ja	loc_915			; Jump if above
020A:6126  A2 2EB1				mov	byte ptr ds:[2EB1h],al	; (020A:2EB1=43h)
020A:6129			loc_915:
020A:6129  C3					retn
020A:612A  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_89		proc	near
020A:612C  24 DF				and	al,0DFh
020A:612E			loc_916:
020A:612E  80 3F 00				cmp	byte ptr [bx],0
020A:6131  74 0F				je	loc_918			; Jump if equal
020A:6133  3A 07				cmp	al,[bx]
020A:6135  74 05				je	loc_917			; Jump if equal
020A:6137  83 C3 03				add	bx,3
020A:613A  EB F2				jmp	short loc_916		; (612E)
020A:613C			loc_917:
020A:613C  58					pop	ax
020A:613D  8B 47 01				mov	ax,[bx+1]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 199

020A:6140  50					push	ax
020A:6141  C3					retn
020A:6142			loc_918:
020A:6142  C3					retn
				sub_89		endp
  
020A:6143  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_90		proc	near
020A:6144  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:6149  06					push	es
020A:614A  8A 36 2C40				mov	dh,byte ptr ds:[2C40h]	; (9B68:2C40=0E3h)
020A:614E  80 FE 02				cmp	dh,2
020A:6151  75 32				jne	loc_919			; Jump if not equal
020A:6153  E8 36FF				call	sub_142			; (9855)
020A:6156  26: 83 3E 0000 50			cmp	word ptr es:[0],50h	; (A0AF:0000=0)
020A:615C  76 50				jbe	loc_920			; Jump if below or =
020A:615E  26: 83 3E 0002 00			cmp	word ptr es:[2],0	; (A0AF:0002=0)
020A:6164  75 48				jne	loc_920			; Jump if not equal
020A:6166  26: C7 06 0002 0100			mov	word ptr es:[2],100h	; (A0AF:0002=0)
020A:616D  26: 83 2E 0000 10			sub	word ptr es:[0],10h	; (A0AF:0000=0)
020A:6173  26: 81 3E 0004 FE00			cmp	word ptr es:[4],0FE00h	; (A0AF:0004=0)
020A:617A  73 32				jae	loc_920			; Jump if above or =
020A:617C  26: 81 06 0004 0100			add	word ptr es:[4],100h	; (A0AF:0004=0)
020A:6183  EB 29				jmp	short loc_920		; (61AE)
020A:6185			loc_919:
020A:6185  E8 36CD				call	sub_142			; (9855)
020A:6188  26: 81 3E 0002 0100			cmp	word ptr es:[2],100h	; (A0AF:0002=0)
020A:618F  75 1D				jne	loc_920			; Jump if not equal
020A:6191  26: C7 06 0002 0000			mov	word ptr es:[2],0	; (A0AF:0002=0)
020A:6198  26: 83 06 0000 10			add	word ptr es:[0],10h	; (A0AF:0000=0)
020A:619E  26: 81 3E 0004 0100			cmp	word ptr es:[4],100h	; (A0AF:0004=0)
020A:61A5  76 07				jbe	loc_920			; Jump if below or =
020A:61A7  26: 81 2E 0004 0100			sub	word ptr es:[4],100h	; (A0AF:0004=0)
020A:61AE			loc_920:
020A:61AE  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:61B3  5A					pop	dx
020A:61B4  8E C2				mov	es,dx
020A:61B6  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:61BB  5A					pop	dx
020A:61BC  75 0A				jnz	loc_921			; Jump if not zero
020A:61BE  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:61C3  74 03				je	loc_921			; Jump if equal
020A:61C5  E8 396C				call	sub_151			; (9B34)
020A:61C8			loc_921:
020A:61C8  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:61CD  C3					retn
				sub_90		endp
  
020A:61CE  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 200

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_91		proc	near
020A:61D0  53					push	bx
020A:61D1  51					push	cx
020A:61D2  56					push	si
020A:61D3  1E					push	ds
020A:61D4  06					push	es
020A:61D5  E8 3686				call	sub_145			; (985E)
020A:61D8  BE 1551				mov	si,1551h
020A:61DB  0E					push	cs
020A:61DC  1F					pop	ds
020A:61DD  B9 0016				mov	cx,16h
020A:61E0  B3 70				mov	bl,70h			; 'p'
020A:61E2  FC					cld				; Clear direction
  
020A:61E3			locloop_922:
020A:61E3  AC					lodsb				; String [si] to al
020A:61E4  2A C3				sub	al,bl
020A:61E6  AA					stosb				; Store al to es:[di]
020A:61E7  FE C3				inc	bl
020A:61E9  E2 F8				loop	locloop_922		; Loop if cx > 0
  
020A:61EB  07					pop	es
020A:61EC  1F					pop	ds
020A:61ED  5E					pop	si
020A:61EE  59					pop	cx
020A:61EF  5B					pop	bx
020A:61F0  C3					retn
				sub_91		endp
  
020A:61F1  C6					db	0C6h
020A:61F2  91					xchg	ax,cx
020A:61F3  B5 C2				mov	ch,0C2h
020A:61F5  C1					db	0C1h
020A:61F6  C2 C5CB				retn	0C5CBh
020A:61F9  C1					db	0C1h
020A:61FA  BC CFBB				mov	sp,0CFBBh
020A:61FD  C5					db	0C5h
020A:61FE  CC					int	3			; Debug breakpoint
020A:61FF  CC					int	3			; Debug breakpoint
020A:6200  D2 AC CBA1				shr	byte ptr ds:[0CBA1h][si],cl	; (020A:CBA1=40h) Shift w/zeros fill
020A:6204  D1 C7				rol	di,1			; Rotate
020A:6206  B3 00				mov	bl,0
020A:6208  0008[00]				db	8 dup (0)
020A:6210			loc_923:
020A:6210  BE 42F0				mov	si,42F0h
020A:6213  80 3E 2C3E 00			cmp	data_376,0		; (020A:2C3E=4Dh)
020A:6218  74 03				je	loc_924			; Jump if equal
020A:621A  E9 EE58				jmp	loc_707			; (5075)
020A:621D			loc_924:
020A:621D  B6 01				mov	dh,1
020A:621F  B2 37				mov	dl,37h			; '7'
020A:6221  E8 78D0				call	$+78D3h
020A:6224  0A F6				or	dh,dh			; Zero ?
020A:6226  74 09				jz	loc_925			; Jump if zero
020A:6228  83 4C D6 04				or	word ptr [si-2Ah],4
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 201

020A:622C  B2 25				mov	dl,25h			; '%'
020A:622E  E8 78C3				call	$+78C6h
020A:6231			loc_925:
020A:6231  A1 42CC				mov	ax,data_473		; (020A:42CC=92h)
020A:6234  A3 42C8				mov	word ptr ds:[42C8h],ax	; (020A:42C8=8F60h)
020A:6237  A1 42CE				mov	ax,data_474		; (020A:42CE=3000h)
020A:623A  A3 42CA				mov	data_472,ax		; (020A:42CA=3030h)
020A:623D  F7 06 42CC 0002			test	data_473,2		; (020A:42CC=92h)
020A:6243  74 07				jz	loc_926			; Jump if zero
020A:6245  B0 01				mov	al,1
020A:6247  9A 16BF:12D0		;*		call	far ptr sub_207		;*(16BF:12D0)
020A:6247  9A D0 12 BF 16			db	 9Ah,0D0h, 12h,0BFh, 16h
020A:624C			loc_926:
020A:624C  8A 16 2A94				mov	dl,byte ptr ds:[2A94h]	; (020A:2A94=8Dh)
020A:6250  80 C2 61				add	dl,61h			; 'a'
020A:6253  88 16 2BF3				mov	data_372,dl		; (020A:2BF3=0)
020A:6257  BA 386F				mov	dx,386Fh
020A:625A  B4 1A				mov	ah,1Ah
020A:625C  CD 21				int	21h			; DOS Services  ah=function 1Ah
										;  set DTA to ds:dx
020A:625E  BA 2BF5				mov	dx,2BF5h
020A:6261  80 3E 2BF6 3A			cmp	data_374,3Ah		; (020A:2BF6=0) ':'
020A:6266  74 03				je	loc_927			; Jump if equal
020A:6268  BA 2BF3				mov	dx,2BF3h
020A:626B			loc_927:
020A:626B  B9 0000				mov	cx,0
020A:626E  B4 4E				mov	ah,4Eh			; 'N'
020A:6270  CD 21				int	21h			; DOS Services  ah=function 4Eh
										;  find 1st filenam match @ds:dx
020A:6272  72 51				jc	loc_930			; Jump if carry Set
020A:6274  B4 02				mov	ah,2
020A:6276  32 FF				xor	bh,bh			; Zero register
020A:6278  BA 174B				mov	dx,174Bh
020A:627B  E8 25C6				call	sub_121			; (8844)
020A:627E  E8 2423				call	sub_116			; (86A4)
020A:6281  E8 2108				call	sub_110			; (838C)
020A:6284  A0 11E8				mov	al,data_211		; (020A:11E8=0)
020A:6287  88 47 52				mov	[bx+52h],al
020A:628A  B4 19				mov	ah,19h
020A:628C  E8 2159				call	sub_112			; (83E8)
020A:628F  E8 1DEE				call	sub_103			; (8080)
020A:6292			loc_928:
020A:6292  F7 06 2EC4 0004			test	data_405,4		; (020A:2EC4=444Eh)
020A:6298  75 2B				jnz	loc_930			; Jump if not zero
020A:629A  9A 16BF:0340		;*		call	far ptr sub_180		;*(16BF:0340)
020A:629A  9A 40 03 BF 16			db	 9Ah, 40h, 03h,0BFh, 16h
020A:629F  24 DF				and	al,0DFh
020A:62A1  3C 59				cmp	al,59h			; 'Y'
020A:62A3  74 20				je	loc_930			; Jump if equal
020A:62A5  3C 4E				cmp	al,4Eh			; 'N'
020A:62A7  74 07				je	loc_929			; Jump if equal
020A:62A9  9A 16BF:0628		;*		call	far ptr sub_187		;*(16BF:0628)
020A:62A9  9A 28 06 BF 16			db	 9Ah, 28h, 06h,0BFh, 16h
020A:62AE  EB E2				jmp	short loc_928		; (6292)
020A:62B0			loc_929:
020A:62B0  8A 16 2A93				mov	dl,byte ptr ds:[2A93h]	; (020A:2A93=14h)
020A:62B4  B4 0E				mov	ah,0Eh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 202

020A:62B6  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:62B8  E8 23DD				call	sub_115			; (8698)
020A:62BB  E8 20F6				call	sub_111			; (83B4)
020A:62BE  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:62C2  E9 EDB0				jmp	loc_707			; (5075)
020A:62C5			loc_930:
020A:62C5  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (020A:1306=0)
020A:62C9  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:62CD  E8 23C8				call	sub_115			; (8698)
020A:62D0  E8 358B				call	sub_145			; (985E)
020A:62D3  B9 000C				mov	cx,0Ch
020A:62D6  BE 034A				mov	si,34Ah
020A:62D9  BF 2CD0				mov	di,2CD0h
  
020A:62DC			locloop_931:
020A:62DC  80 3C 00				cmp	byte ptr [si],0
020A:62DF  74 09				je	loc_932			; Jump if equal
020A:62E1  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:62E4  74 04				je	loc_932			; Jump if equal
020A:62E6  FC					cld				; Clear direction
020A:62E7  A4					movsb				; Mov [si] to es:[di]
020A:62E8  E2 F2				loop	locloop_931		; Loop if cx > 0
  
020A:62EA			loc_932:
020A:62EA  BB 4298				mov	bx,4298h
020A:62ED  B9 0020				mov	cx,20h
020A:62F0  BE 0358				mov	si,358h
020A:62F3  BF 2CE0				mov	di,2CE0h
020A:62F6  FC					cld				; Clear direction
020A:62F7  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:62F9  F7 47 2E 0002			test	word ptr [bx+2Eh],2
020A:62FE  74 03				jz	loc_933			; Jump if zero
020A:6300  E9 D699		;*		jmp	loc_399			;*(399C)
020A:6300  E9 99 D6				db	0E9h, 99h,0D6h
020A:6303			loc_933:
020A:6303  F7 06 42CE 0020			test	word ptr ds:[42CEh],20h	; (9B68:42CE=0)
020A:6309  75 0A				jnz	loc_934			; Jump if not zero
020A:630B  C6 06 587F 2A			mov	byte ptr ds:[587Fh],2Ah	; (9B68:587F=0) '*'
020A:6310  C6 06 5A95 2A			mov	byte ptr ds:[5A95h],2Ah	; (9B68:5A95=0) '*'
020A:6315			loc_934:
020A:6315  83 3E 2A24 00			cmp	word ptr ds:[2A24h],0	; (9B68:2A24=0AEA3h)
020A:631A  75 3E				jne	loc_937			; Jump if not equal
020A:631C  8B 1E 263F				mov	bx,word ptr ds:[263Fh]	; (9B68:263F=0E0A5h)
020A:6320  8C C8				mov	ax,cs
020A:6322  2D 0010				sub	ax,10h
020A:6325  06					push	es
020A:6326  8E C0				mov	es,ax
020A:6328  B4 4A				mov	ah,4Ah			; 'J'
020A:632A  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change mem allocation, bx=siz
020A:632C  07					pop	es
020A:632D  73 06				jnc	loc_935			; Jump if carry=0
020A:632F  B8 0008				mov	ax,8
020A:6332  E9 D5F4		;*		jmp	loc_398			;*(3929)
020A:6332  E9 F4 D5				db	0E9h,0F4h,0D5h
020A:6335			loc_935:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 203

020A:6335  E8 353E				call	sub_148			; (9876)
020A:6338  8C CB				mov	bx,cs
020A:633A  2B C3				sub	ax,bx
020A:633C  2B 06 263F				sub	ax,word ptr ds:[263Fh]	; (9B68:263F=0E0A5h)
020A:6340  B9 FFFF				mov	cx,0FFFFh
020A:6343  3D 1000				cmp	ax,1000h
020A:6346  73 0A				jae	loc_936			; Jump if above or =
020A:6348  8B C8				mov	cx,ax
020A:634A  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:634C  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:634E  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:6350  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:6352			loc_936:
020A:6352  89 0E 430E				mov	word ptr ds:[430Eh],cx	; (9B68:430E=0)
020A:6356  D1 E9				shr	cx,1			; Shift w/zeros fill
020A:6358  EB 26				jmp	short loc_939		; (6380)
020A:635A			loc_937:
020A:635A  E8 3504				call	sub_146			; (9861)
020A:635D  8C C0				mov	ax,es
020A:635F  8B 0E 2A24				mov	cx,word ptr ds:[2A24h]	; (9B68:2A24=0AEA3h)
020A:6363  2B C8				sub	cx,ax
020A:6365  81 F9 1000				cmp	cx,1000h
020A:6369  76 03				jbe	loc_938			; Jump if below or =
020A:636B  B9 1000				mov	cx,1000h
020A:636E			loc_938:
020A:636E  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:6370  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:6372  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:6374  89 0E 430E				mov	word ptr ds:[430Eh],cx	; (9B68:430E=0)
020A:6378  FF 0E 430E				dec	word ptr ds:[430Eh]	; (9B68:430E=0)
020A:637C  D1 26 430E				shl	word ptr ds:[430Eh],1	; (9B68:430E=0) Shift w/zeros fill
020A:6380			loc_939:
020A:6380  E8 34DE				call	sub_146			; (9861)
020A:6383  B8 FFFF				mov	ax,0FFFFh
020A:6386  33 FF				xor	di,di			; Zero register
020A:6388  FC					cld				; Clear direction
020A:6389  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:638B  E8 34D0				call	sub_145			; (985E)
020A:638E  B4 2C				mov	ah,2Ch			; ','
020A:6390  CD 21				int	21h			; DOS Services  ah=function 2Ch
										;  get time, cx=hrs/min, dh=sec
020A:6392  89 0E 42FF				mov	word ptr ds:[42FFh],cx	; (9B68:42FF=0)
020A:6396  89 16 4301				mov	word ptr ds:[4301h],dx	; (9B68:4301=0)
020A:639A  E8 1FEF				call	sub_110			; (838C)
020A:639D  A0 11E7				mov	al,byte ptr ds:[11E7h]	; (9B68:11E7=0A8h)
020A:63A0  88 47 4C				mov	[bx+4Ch],al
020A:63A3  C6 47 4E 07				mov	byte ptr [bx+4Eh],7
020A:63A7  C6 47 3F 00				mov	byte ptr [bx+3Fh],0
020A:63AB  C6 47 40 00				mov	byte ptr [bx+40h],0
020A:63AF  C6 47 56 00				mov	byte ptr [bx+56h],0
020A:63B3  C6 47 70 00				mov	byte ptr [bx+70h],0
020A:63B7  C6 47 71 00				mov	byte ptr [bx+71h],0
020A:63BB  C6 47 72 00				mov	byte ptr [bx+72h],0
020A:63BF  C6 47 73 00				mov	byte ptr [bx+73h],0
020A:63C3  C6 47 74 00				mov	byte ptr [bx+74h],0
020A:63C7  C6 47 75 00				mov	byte ptr [bx+75h],0
020A:63CB  C6 47 34 00				mov	byte ptr [bx+34h],0
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 204

020A:63CF  C6 47 35 00				mov	byte ptr [bx+35h],0
020A:63D3  C6 47 36 00				mov	byte ptr [bx+36h],0
020A:63D7  E8 35AE				call	sub_150			; (9988)
020A:63DA  B2 00				mov	dl,0
020A:63DC			loc_940:
020A:63DC  E8 3476				call	sub_142			; (9855)
020A:63DF  B8 0015				mov	ax,15h
020A:63E2  F6 E2				mul	dl			; ax = reg * al
020A:63E4  05 0000				add	ax,0
020A:63E7  8B D8				mov	bx,ax
020A:63E9  26: 8B 47 0A				mov	ax,es:[bx+0Ah]
020A:63ED  24 03				and	al,3
020A:63EF  3C 02				cmp	al,2
020A:63F1  77 1D				ja	loc_942			; Jump if above
020A:63F3  26: 8B 07				mov	ax,es:[bx]
020A:63F6  26: 8B 7F 02				mov	di,es:[bx+2]
020A:63FA  26: 8B 4F 04				mov	cx,es:[bx+4]
020A:63FE  8E C0				mov	es,ax
020A:6400  2B CF				sub	cx,di
020A:6402  81 F9 03E8				cmp	cx,3E8h
020A:6406  72 03				jb	loc_941			; Jump if below
020A:6408  B9 03E8				mov	cx,3E8h
020A:640B			loc_941:
020A:640B  E8 2B36				call	sub_128			; (8F44)
020A:640E  72 08				jc	loc_943			; Jump if carry Set
020A:6410			loc_942:
020A:6410  FE C2				inc	dl
020A:6412  3A 16 2A2B				cmp	dl,byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:6416  76 C4				jbe	loc_940			; Jump if below or =
020A:6418			loc_943:
020A:6418  E9 9F25				jmp	$-60D8h
020A:641B  80 3E 2EBD 00			cmp	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:6420  74 5A				je	loc_944			; Jump if equal
020A:6422  E8 3439				call	sub_145			; (985E)
020A:6425  BF 0358				mov	di,358h
020A:6428  B9 0021				mov	cx,21h
020A:642B  B0 20				mov	al,20h			; ' '
020A:642D  FC					cld				; Clear direction
020A:642E  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:6430  E8 1F59				call	sub_110			; (838C)
020A:6433  C6 47 52 00				mov	byte ptr [bx+52h],0
020A:6437  C6 47 69 0F				mov	byte ptr [bx+69h],0Fh
020A:643B  C6 47 33 0F				mov	byte ptr [bx+33h],0Fh
020A:643F  C6 47 66 0F				mov	byte ptr [bx+66h],0Fh
020A:6443  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:6447  B4 02				mov	ah,2
020A:6449  32 FF				xor	bh,bh			; Zero register
020A:644B  BA 0912				mov	dx,912h
020A:644E  E8 23F3				call	sub_121			; (8844)
020A:6451  E8 2250				call	sub_116			; (86A4)
020A:6454  E8 1C29				call	sub_103			; (8080)
020A:6457  BE 0358				mov	si,358h
020A:645A  B1 20				mov	cl,20h			; ' '
020A:645C  B3 01				mov	bl,1
020A:645E  9A 16BF:02B0		;*		call	far ptr sub_179		;*(16BF:02B0)
020A:645E  9A B0 02 BF 16			db	 9Ah,0B0h, 02h,0BFh, 16h
020A:6463  E8 1F4E				call	sub_111			; (83B4)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 205

020A:6466  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:646A  C6 47 69 07				mov	byte ptr [bx+69h],7
020A:646E  C6 47 66 07				mov	byte ptr [bx+66h],7
020A:6472  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:6476  E8 221F				call	sub_115			; (8698)
020A:6479  E8 1CB0				call	sub_104			; (812C)
020A:647C			loc_944:
020A:647C  E9 EC14				jmp	loc_708			; (5093)
020A:647F  2E: 80 3E 4CE7 00			cmp	byte ptr cs:data_526+47h,0	; (020A:4CE7=42h)
020A:6485  74 08				je	loc_945			; Jump if equal
020A:6487  9A 16BF:0628		;*		call	far ptr sub_187		;*(16BF:0628)
020A:6487  9A 28 06 BF 16			db	 9Ah, 28h, 06h,0BFh, 16h
020A:648C  E9 EC04				jmp	loc_708			; (5093)
020A:648F			loc_945:
020A:648F  E8 0016				call	sub_92			; (64A8)
020A:6492  80 3E 2BB2 00			cmp	byte ptr ds:[2BB2h],0	; (9B68:2BB2=0A4h)
020A:6497  74 03				je	loc_946			; Jump if equal
020A:6499  E8 34EC				call	sub_150			; (9988)
020A:649C			loc_946:
020A:649C  E8 1F15				call	sub_111			; (83B4)
020A:649F  E8 1C8A				call	sub_104			; (812C)
020A:64A2  E9 EBEE				jmp	loc_708			; (5093)
020A:64A5  87 DB				xchg	bx,bx
020A:64A7  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_92		proc	near
020A:64A8  E8 1EE1				call	sub_110			; (838C)
020A:64AB  C6 47 53 00				mov	byte ptr [bx+53h],0
020A:64AF  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:64B3  B4 02				mov	ah,2
020A:64B5  E8 1F30				call	sub_112			; (83E8)
020A:64B8  B4 02				mov	ah,2
020A:64BA  32 FF				xor	bh,bh			; Zero register
020A:64BC  BA 171A				mov	dx,171Ah
020A:64BF  E8 2382				call	sub_121			; (8844)
020A:64C2  E8 21DF				call	sub_116			; (86A4)
020A:64C5  E8 1BB8				call	sub_103			; (8080)
020A:64C8  B1 28				mov	cl,28h			; '('
020A:64CA  B3 01				mov	bl,1
020A:64CC  BE 07C0				mov	si,7C0h
020A:64CF  9A 16BF:02B0		;*		call	far ptr sub_179		;*(16BF:02B0)
020A:64CF  9A B0 02 BF 16			db	 9Ah,0B0h, 02h,0BFh, 16h
020A:64D4  B3 28				mov	bl,28h			; '('
020A:64D6  2A D9				sub	bl,cl
020A:64D8  32 FF				xor	bh,bh			; Zero register
020A:64DA  83 FB 00				cmp	bx,0
020A:64DD  75 02				jne	loc_947			; Jump if not equal
020A:64DF  EB 78				jmp	short loc_951		; (6559)
020A:64E1			loc_947:
020A:64E1  3C 1B				cmp	al,1Bh
020A:64E3  75 02				jne	loc_948			; Jump if not equal
020A:64E5  EB 72				jmp	short loc_951		; (6559)
020A:64E7			loc_948:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 206

020A:64E7  E8 3374				call	sub_145			; (985E)
020A:64EA  BF 07C0				mov	di,7C0h
020A:64ED  B0 20				mov	al,20h			; ' '
020A:64EF  8B CB				mov	cx,bx
020A:64F1  FC					cld				; Clear direction
020A:64F2  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:64F4  74 63				jz	loc_951			; Jump if zero
020A:64F6  BF 07C0				mov	di,7C0h
020A:64F9  B0 20				mov	al,20h			; ' '
020A:64FB  9A 16BF:04A4		;*		call	far ptr sub_185		;*(16BF:04A4)
020A:64FB  9A A4 04 BF 16			db	 9Ah,0A4h, 04h,0BFh, 16h
020A:6500  9A 16BF:0510		;*		call	far ptr sub_186		;*(16BF:0510)
020A:6500  9A 10 05 BF 16			db	 9Ah, 10h, 05h,0BFh, 16h
020A:6505  A2 2C3F				mov	byte ptr ds:[2C3Fh],al	; (9B68:2C3F=0ABh)
020A:6508  3C 01				cmp	al,1
020A:650A  76 04				jbe	loc_949			; Jump if below or =
020A:650C  3C 0B				cmp	al,0Bh
020A:650E  76 1C				jbe	loc_950			; Jump if below or =
020A:6510			loc_949:
020A:6510  B4 10				mov	ah,10h
020A:6512  E8 1ED3				call	sub_112			; (83E8)
020A:6515  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:6519  A0 11E8				mov	al,byte ptr ds:[11E8h]	; (9B68:11E8=0A5h)
020A:651C  88 47 52				mov	[bx+52h],al
020A:651F  E8 2176				call	sub_115			; (8698)
020A:6522  E8 1B5B				call	sub_103			; (8080)
020A:6525  9A 16BF:0340		;*		call	far ptr sub_180		;*(16BF:0340)
020A:6525  9A 40 03 BF 16			db	 9Ah, 40h, 03h,0BFh, 16h
020A:652A  EB 2D				jmp	short loc_951		; (6559)
020A:652C			loc_950:
020A:652C  BF 2BB2				mov	di,2BB2h
020A:652F  B9 0040				mov	cx,40h
020A:6532  B0 00				mov	al,0
020A:6534  FC					cld				; Clear direction
020A:6535  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:6537  BF 0629				mov	di,629h
020A:653A  B9 000C				mov	cx,0Ch
020A:653D  B0 20				mov	al,20h			; ' '
020A:653F  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:6541  BE 07C0				mov	si,7C0h
020A:6544  BF 2BB2				mov	di,2BB2h
020A:6547  8B CB				mov	cx,bx
020A:6549  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:654B  4F					dec	di
020A:654C  9A 16BF:1740		;*		call	far ptr sub_208		;*(16BF:1740)
020A:654C  9A 40 17 BF 16			db	 9Ah, 40h, 17h,0BFh, 16h
020A:6551  E8 50A0				call	sub_162			; (B5F4)
020A:6554  73 03				jnc	loc_951			; Jump if carry=0
020A:6556  E9 D3D0		;*		jmp	loc_398			;*(3929)
020A:6556  E9 D0 D3				db	0E9h,0D0h,0D3h
020A:6559			loc_951:
020A:6559  8A 26 2C3E				mov	ah,byte ptr ds:[2C3Eh]	; (9B68:2C3E=0E1h)
020A:655D  E8 1E88				call	sub_112			; (83E8)
020A:6560  E8 1E51				call	sub_111			; (83B4)
020A:6563  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:6567  C6 47 53 07				mov	byte ptr [bx+53h],7
020A:656B  C6 47 67 00				mov	byte ptr [bx+67h],0
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 207

020A:656F  E8 2126				call	sub_115			; (8698)
020A:6572  E8 1BB7				call	sub_104			; (812C)
020A:6575  C3					retn
				sub_92		endp
  
020A:6576  80 3E 14AC 01			cmp	byte ptr ds:[14ACh],1	; (020A:14AC=0)
020A:657B  75 07				jne	loc_952			; Jump if not equal
020A:657D  80 36 14AD 01			xor	data_222,1		; (020A:14AD=0)
020A:6582  EB 09				jmp	short loc_953		; (658D)
020A:6584			loc_952:
020A:6584  FE 06 14AD				inc	data_222		; (020A:14AD=0)
020A:6588  80 26 14AD 03			and	data_222,3		; (020A:14AD=0)
020A:658D			loc_953:
020A:658D  E8 21DC				call	sub_119			; (876C)
020A:6590  E8 FB1E				call	sub_88			; (60B1)
020A:6593  E8 1B96				call	sub_104			; (812C)
020A:6596  E9 EAFA				jmp	loc_708			; (5093)
020A:6599  F6 06 2A77 C0			test	byte ptr ds:[2A77h],0C0h	; (020A:2A77=0A5h)
020A:659E  75 23				jnz	loc_956			; Jump if not zero
020A:65A0  8A 36 2A79				mov	dh,data_363		; (020A:2A79=0E0h)
020A:65A4  F6 C6 0F				test	dh,0Fh
020A:65A7  74 04				jz	loc_954			; Jump if zero
020A:65A9  B6 00				mov	dh,0
020A:65AB  EB 25				jmp	short loc_958		; (65D2)
020A:65AD			loc_954:
020A:65AD  B6 01				mov	dh,1
020A:65AF  F6 06 2A77 10			test	byte ptr ds:[2A77h],10h	; (020A:2A77=0A5h)
020A:65B4  74 02				jz	loc_955			; Jump if zero
020A:65B6  B6 02				mov	dh,2
020A:65B8			loc_955:
020A:65B8  F6 06 2A77 20			test	byte ptr ds:[2A77h],20h	; (020A:2A77=0A5h) ' '
020A:65BD  74 13				jz	loc_958			; Jump if zero
020A:65BF  B6 04				mov	dh,4
020A:65C1  EB 0F				jmp	short loc_958		; (65D2)
020A:65C3			loc_956:
020A:65C3  F6 06 2A77 40			test	byte ptr ds:[2A77h],40h	; (020A:2A77=0A5h) '@'
020A:65C8  74 04				jz	loc_957			; Jump if zero
020A:65CA  B6 0C				mov	dh,0Ch
020A:65CC  EB 04				jmp	short loc_958		; (65D2)
020A:65CE			loc_957:
020A:65CE  B6 14				mov	dh,14h
020A:65D0  EB 00				jmp	short loc_958		; (65D2)
020A:65D2			loc_958:
020A:65D2  88 36 2A79				mov	data_363,dh		; (020A:2A79=0E0h)
020A:65D6  B6 01				mov	dh,1
020A:65D8  E8 1CB9				call	sub_109			; (8294)
020A:65DB  E9 EAB5				jmp	loc_708			; (5093)
020A:65DE  E8 1DAB				call	sub_110			; (838C)
020A:65E1  C6 47 68 00				mov	byte ptr [bx+68h],0
020A:65E5  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:65E9  B4 03				mov	ah,3
020A:65EB  E8 1DFA				call	sub_112			; (83E8)
020A:65EE  B4 02				mov	ah,2
020A:65F0  32 FF				xor	bh,bh			; Zero register
020A:65F2  BA 171A				mov	dx,171Ah
020A:65F5  E8 224C				call	sub_121			; (8844)
020A:65F8  E8 20A9				call	sub_116			; (86A4)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 208

020A:65FB  E8 1A82				call	sub_103			; (8080)
020A:65FE  B1 28				mov	cl,28h			; '('
020A:6600  B3 03				mov	bl,3
020A:6602  BE 07C0				mov	si,7C0h
020A:6605  9A 16BF:02B0		;*		call	far ptr sub_179		;*(16BF:02B0)
020A:6605  9A B0 02 BF 16			db	 9Ah,0B0h, 02h,0BFh, 16h
020A:660A  B3 28				mov	bl,28h			; '('
020A:660C  2A D9				sub	bl,cl
020A:660E  32 FF				xor	bh,bh			; Zero register
020A:6610  83 FB 00				cmp	bx,0
020A:6613  74 13				je	loc_959			; Jump if equal
020A:6615  3C 1B				cmp	al,1Bh
020A:6617  74 0F				je	loc_959			; Jump if equal
020A:6619  E8 3242				call	sub_145			; (985E)
020A:661C  BF 07C0				mov	di,7C0h
020A:661F  B0 20				mov	al,20h			; ' '
020A:6621  8B CB				mov	cx,bx
020A:6623  FC					cld				; Clear direction
020A:6624  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:6626  75 03				jnz	loc_960			; Jump if not zero
020A:6628			loc_959:
020A:6628  E9 0086				jmp	loc_964			; (66B1)
020A:662B			loc_960:
020A:662B  FC					cld				; Clear direction
020A:662C  BF 2BF5				mov	di,2BF5h
020A:662F  B9 0029				mov	cx,29h
020A:6632  B0 00				mov	al,0
020A:6634  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:6636  BF 034A				mov	di,34Ah
020A:6639  B9 000C				mov	cx,0Ch
020A:663C  B0 20				mov	al,20h			; ' '
020A:663E  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:6640  BE 07C0				mov	si,7C0h
020A:6643  BF 2BF5				mov	di,2BF5h
020A:6646  8B CB				mov	cx,bx
020A:6648  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:664A  9A 16BF:0420		;*		call	far ptr sub_184		;*(16BF:0420)
020A:664A  9A 20 04 BF 16			db	 9Ah, 20h, 04h,0BFh, 16h
020A:664F  83 C3 04				add	bx,4
020A:6652  47					inc	di
020A:6653  8B CB				mov	cx,bx
020A:6655			loc_961:
020A:6655  8A 05				mov	al,[di]
020A:6657  3C 3A				cmp	al,3Ah			; ':'
020A:6659  74 0D				je	loc_962			; Jump if equal
020A:665B  3C 5C				cmp	al,5Ch			; '\'
020A:665D  74 09				je	loc_962			; Jump if equal
020A:665F  83 F9 01				cmp	cx,1
020A:6662  76 05				jbe	loc_963			; Jump if below or =
020A:6664  49					dec	cx
020A:6665  4F					dec	di
020A:6666  EB ED				jmp	short loc_961		; (6655)
020A:6668			loc_962:
020A:6668  47					inc	di
020A:6669			loc_963:
020A:6669  2B D9				sub	bx,cx
020A:666B  8B CB				mov	cx,bx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 209

020A:666D  41					inc	cx
020A:666E  83 F9 0C				cmp	cx,0Ch
020A:6671  77 3E				ja	loc_964			; Jump if above
020A:6673  8B F7				mov	si,di
020A:6675  BF 034A				mov	di,34Ah
020A:6678  FC					cld				; Clear direction
020A:6679  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:667B  80 3E 2BF6 3A			cmp	byte ptr ds:[2BF6h],3Ah	; (9B68:2BF6=0A5h) ':'
020A:6680  75 2F				jne	loc_964			; Jump if not equal
020A:6682  A0 2BF5				mov	al,byte ptr ds:[2BF5h]	; (9B68:2BF5=0A0h)
020A:6685  24 5F				and	al,5Fh			; '_'
020A:6687  3C 41				cmp	al,41h			; 'A'
020A:6689  72 26				jb	loc_964			; Jump if below
020A:668B  3C 5A				cmp	al,5Ah			; 'Z'
020A:668D  77 22				ja	loc_964			; Jump if above
020A:668F  8A D0				mov	dl,al
020A:6691  80 EA 41				sub	dl,41h			; 'A'
020A:6694  8A DA				mov	bl,dl
020A:6696  B4 0E				mov	ah,0Eh
020A:6698  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:669A  B4 19				mov	ah,19h
020A:669C  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:669E  A2 2A94				mov	byte ptr ds:[2A94h],al	; (9B68:2A94=20h)
020A:66A1  04 61				add	al,61h			; 'a'
020A:66A3  A2 064E				mov	byte ptr ds:[64Eh],al	; (9B68:064E=0D8h)
020A:66A6  E8 1B33				call	sub_108			; (81DC)
020A:66A9  8A 16 2A93				mov	dl,byte ptr ds:[2A93h]	; (9B68:2A93=0A0h)
020A:66AD  B4 0E				mov	ah,0Eh
020A:66AF  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:66B1			loc_964:
020A:66B1  E8 1D00				call	sub_111			; (83B4)
020A:66B4  C6 47 68 07				mov	byte ptr [bx+68h],7
020A:66B8  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:66BC  8A 26 2C3E				mov	ah,byte ptr ds:[2C3Eh]	; (9B68:2C3E=0E1h)
020A:66C0  E8 1D25				call	sub_112			; (83E8)
020A:66C3  E8 1FD2				call	sub_115			; (8698)
020A:66C6  E8 1A63				call	sub_104			; (812C)
020A:66C9  E9 E9C7				jmp	loc_708			; (5093)
020A:66CC  A0 263D				mov	al,byte ptr ds:[263Dh]	; (9B68:263D=0AEh)
020A:66CF  04 02				add	al,2
020A:66D1  3C 14				cmp	al,14h
020A:66D3  72 02				jb	loc_965			; Jump if below
020A:66D5  B0 04				mov	al,4
020A:66D7			loc_965:
020A:66D7  E8 24FA				call	sub_125			; (8BD4)
020A:66DA  E9 E9B6				jmp	loc_708			; (5093)
020A:66DD			loc_966:
020A:66DD  B4 11				mov	ah,11h
020A:66DF  E9 D31A		;*		jmp	loc_404			;*(39FC)
020A:66DF  E9 1A D3				db	0E9h, 1Ah,0D3h
020A:66E2  A0 152A				mov	al,byte ptr ds:[152Ah]	; (9B68:152A=20h)
020A:66E5  BB 152C				mov	bx,152Ch
020A:66E8  D7					xlat				; al=[al+[bx]] table
020A:66E9  A2 152A				mov	byte ptr ds:[152Ah],al	; (9B68:152A=20h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 210

020A:66EC  E8 20C5				call	sub_120			; (87B4)
020A:66EF  E8 1A3A				call	sub_104			; (812C)
020A:66F2  E9 E99E				jmp	loc_708			; (5093)
020A:66F5  80 3E 2EBD 00			cmp	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:66FA  74 22				je	loc_969			; Jump if equal
020A:66FC  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:6700  80 3E 2EBC 00			cmp	byte ptr ds:[2EBCh],0	; (9B68:2EBC=0A0h)
020A:6705  74 0B				je	loc_967			; Jump if equal
020A:6707  C6 06 2EBC 00			mov	byte ptr ds:[2EBCh],0	; (9B68:2EBC=0A0h)
020A:670C  C6 47 6B 00				mov	byte ptr [bx+6Bh],0
020A:6710  EB 09				jmp	short loc_968		; (671B)
020A:6712			loc_967:
020A:6712  C6 06 2EBC 01			mov	byte ptr ds:[2EBCh],1	; (9B68:2EBC=0A0h)
020A:6717  C6 47 6B 07				mov	byte ptr [bx+6Bh],7
020A:671B			loc_968:
020A:671B  E8 1A0E				call	sub_104			; (812C)
020A:671E			loc_969:
020A:671E  E9 E972				jmp	loc_708			; (5093)
020A:6721  BF 13A1				mov	di,13A1h
020A:6724  A0 139E				mov	al,byte ptr ds:[139Eh]	; (9B68:139E=20h)
020A:6727  32 C9				xor	cl,cl			; Zero register
020A:6729			loc_970:
020A:6729  3A 05				cmp	al,[di]
020A:672B  74 0C				je	loc_971			; Jump if equal
020A:672D  FE C1				inc	cl
020A:672F  80 F9 08				cmp	cl,8
020A:6732  73 05				jae	loc_971			; Jump if above or =
020A:6734  83 C7 0F				add	di,0Fh
020A:6737  EB F0				jmp	short loc_970		; (6729)
020A:6739			loc_971:
020A:6739  80 F9 07				cmp	cl,7
020A:673C  72 03				jb	loc_972			; Jump if below
020A:673E  BF 1392				mov	di,1392h
020A:6741			loc_972:
020A:6741  83 C7 0F				add	di,0Fh
020A:6744  8A 05				mov	al,[di]
020A:6746  A2 139E				mov	byte ptr ds:[139Eh],al	; (9B68:139E=20h)
020A:6749  8B 45 0D				mov	ax,[di+0Dh]
020A:674C  A3 139F				mov	word ptr ds:[139Fh],ax	; (9B68:139F=2E5Bh)
020A:674F  9A 16BF:0648		;*		call	far ptr sub_188		;*(16BF:0648)
020A:674F  9A 48 06 BF 16			db	 9Ah, 48h, 06h,0BFh, 16h
020A:6754  E8 19D5				call	sub_104			; (812C)
020A:6757  E9 E939				jmp	loc_708			; (5093)
020A:675A  01 02				add	[bp+si],ax
020A:675C  04 10				add	al,10h
020A:675E  18 20				sbb	[bx+si],ah
020A:6760  28 40 48				sub	[bx+si+48h],al
020A:6763  00 80 8A88				add	byte ptr ds:[8A88h][bx+si],al	; (9B68:8A88=0)
020A:6767  36					db	36h
020A:6768  77 2A				ja	loc_976			; Jump if above
020A:676A  B8 0000				mov	ax,0
020A:676D  56					push	si
020A:676E  BE 1ABA				mov	si,1ABAh
020A:6771			loc_973:
020A:6771  2E: 3A 34				cmp	dh,cs:[si]
020A:6774  74 11				je	loc_975			; Jump if equal
020A:6776  46					inc	si
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 211

020A:6777  2E: 80 3C 00				cmp	byte ptr cs:[si],0
020A:677B  74 02				je	loc_974			; Jump if equal
020A:677D  EB F2				jmp	short loc_973		; (6771)
020A:677F			loc_974:
020A:677F  B6 01				mov	dh,1
020A:6781  C6 06 2A79 00			mov	byte ptr ds:[2A79h],0	; (9B68:2A79=20h)
020A:6786  4E					dec	si
020A:6787			loc_975:
020A:6787  46					inc	si
020A:6788  2E: 80 3C 00				cmp	byte ptr cs:[si],0
020A:678C  75 08				jne	loc_977			; Jump if not equal
020A:678E  BE 1ABA				mov	si,1ABAh
020A:6791  C6 06 2A79 00			mov	byte ptr ds:[2A79h],0	; (9B68:2A79=20h)
020A:6796			loc_977:
020A:6796  2E: 8A 34				mov	dh,cs:[si]
020A:6799  5E					pop	si
020A:679A  88 36 2A77				mov	byte ptr ds:[2A77h],dh	; (9B68:2A77=0ABh)
020A:679E  F6 06 2A79 0F			test	byte ptr ds:[2A79h],0Fh	; (9B68:2A79=20h)
020A:67A3  74 1D				jz	loc_979			; Jump if zero
020A:67A5  C6 06 2A79 01			mov	byte ptr ds:[2A79h],1	; (9B68:2A79=20h)
020A:67AA  F6 C6 10				test	dh,10h
020A:67AD  74 07				jz	loc_978			; Jump if zero
020A:67AF  C6 06 2A79 02			mov	byte ptr ds:[2A79h],2	; (9B68:2A79=20h)
020A:67B4  EB 0C				jmp	short loc_979		; (67C2)
020A:67B6			loc_978:
020A:67B6  F6 C6 20				test	dh,20h			; ' '
020A:67B9  74 07				jz	loc_979			; Jump if zero
020A:67BB  C6 06 2A79 04			mov	byte ptr ds:[2A79h],4	; (9B68:2A79=20h)
020A:67C0  EB 18				jmp	short loc_980		; (67DA)
020A:67C2			loc_979:
020A:67C2  F6 06 2A77 C0			test	byte ptr ds:[2A77h],0C0h	; (9B68:2A77=0ABh)
020A:67C7  74 11				jz	loc_980			; Jump if zero
020A:67C9  C6 06 2A79 0C			mov	byte ptr ds:[2A79h],0Ch	; (9B68:2A79=20h)
020A:67CE  F6 06 2A77 80			test	byte ptr ds:[2A77h],80h	; (9B68:2A77=0ABh)
020A:67D3  74 05				jz	loc_980			; Jump if zero
020A:67D5  C6 06 2A79 14			mov	byte ptr ds:[2A79h],14h	; (9B68:2A79=20h)
020A:67DA			loc_980:
020A:67DA  B6 01				mov	dh,1
020A:67DC  E8 1AB5				call	sub_109			; (8294)
020A:67DF  E9 E8B1				jmp	loc_708			; (5093)
020A:67E2  80 3E 2EB8 00			cmp	byte ptr ds:[2EB8h],0	; (9B68:2EB8=0AAh)
020A:67E7  74 07				je	loc_981			; Jump if equal
020A:67E9  C6 06 2EB8 00			mov	byte ptr ds:[2EB8h],0	; (9B68:2EB8=0AAh)
020A:67EE  EB 05				jmp	short loc_982		; (67F5)
020A:67F0			loc_981:
020A:67F0  C6 06 2EB8 60			mov	byte ptr ds:[2EB8h],60h	; (9B68:2EB8=0AAh) '`'
020A:67F5			loc_982:
020A:67F5  E8 F8B9				call	sub_88			; (60B1)
020A:67F8  E8 1931				call	sub_104			; (812C)
020A:67FB  E9 E895				jmp	loc_708			; (5093)
020A:67FE  80 3E 2EBD 00			cmp	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:6803  74 23				je	loc_985			; Jump if equal
020A:6805  8A 1E 430B				mov	bl,byte ptr ds:[430Bh]	; (9B68:430B=0)
020A:6809  F6 C3 07				test	bl,7
020A:680C  74 07				jz	loc_983			; Jump if zero
020A:680E  C6 06 430B 00			mov	byte ptr ds:[430Bh],0	; (9B68:430B=0)
020A:6813  EB 0D				jmp	short loc_984		; (6822)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 212

020A:6815			loc_983:
020A:6815  80 0E 430B 07			or	byte ptr ds:[430Bh],7	; (9B68:430B=0)
020A:681A  B0 0A				mov	al,0Ah
020A:681C  E8 23B5				call	sub_125			; (8BD4)
020A:681F  E9 E871				jmp	loc_708			; (5093)
020A:6822			loc_984:
020A:6822  E8 1F03				call	sub_118			; (8728)
020A:6825  E9 E86B				jmp	loc_708			; (5093)
020A:6828			loc_985:
020A:6828  E9 E8B4				jmp	loc_713			; (50DF)
020A:682B  E8 1B5E				call	sub_110			; (838C)
020A:682E  B4 18				mov	ah,18h
020A:6830  E8 1BB5				call	sub_112			; (83E8)
020A:6833  E8 18F6				call	sub_104			; (812C)
020A:6836  9A 16BF:0340		;*		call	far ptr sub_180		;*(16BF:0340)
020A:6836  9A 40 03 BF 16			db	 9Ah, 40h, 03h,0BFh, 16h
020A:683B  2C 30				sub	al,30h			; '0'
020A:683D  3C 3F				cmp	al,3Fh			; '?'
020A:683F  77 2F				ja	loc_986			; Jump if above
020A:6841  A2 2EB1				mov	byte ptr ds:[2EB1h],al	; (9B68:2EB1=0A0h)
020A:6844  50					push	ax
020A:6845  51					push	cx
020A:6846  57					push	di
020A:6847  06					push	es
020A:6848  1E					push	ds
020A:6849  07					pop	es
020A:684A  B9 001D				mov	cx,1Dh
020A:684D  B0 20				mov	al,20h			; ' '
020A:684F  BF 06E8				mov	di,6E8h
020A:6852  FC					cld				; Clear direction
020A:6853  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:6855  BD 06FC				mov	bp,6FCh
020A:6858  A1 430E				mov	ax,word ptr ds:[430Eh]	; (9B68:430E=0)
020A:685B  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:685B  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:6860  8B 3E 1306				mov	di,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:6864  C6 45 5D 07				mov	byte ptr [di+5Dh],7
020A:6868  07					pop	es
020A:6869  5F					pop	di
020A:686A  59					pop	cx
020A:686B  58					pop	ax
020A:686C  A8 08				test	al,8
020A:686E  75 03				jnz	loc_987			; Jump if not zero
020A:6870			loc_986:
020A:6870  E9 008F				jmp	loc_988			; (6902)
020A:6873			loc_987:
020A:6873  80 26 2EB1 F7			and	byte ptr ds:[2EB1h],0F7h	; (9B68:2EB1=0A0h)
020A:6878  B4 23				mov	ah,23h			; '#'
020A:687A  E8 1B6B				call	sub_112			; (83E8)
020A:687D  B4 02				mov	ah,2
020A:687F  32 FF				xor	bh,bh			; Zero register
020A:6881  BA 1710				mov	dx,1710h
020A:6884  E8 1FBD				call	sub_121			; (8844)
020A:6887  E8 1E1A				call	sub_116			; (86A4)
020A:688A  E8 17F3				call	sub_103			; (8080)
020A:688D  9A 16BF:0340		;*		call	far ptr sub_180		;*(16BF:0340)
020A:688D  9A 40 03 BF 16			db	 9Ah, 40h, 03h,0BFh, 16h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 213

020A:6892  8A D0				mov	dl,al
020A:6894  2C 30				sub	al,30h			; '0'
020A:6896  3C 10				cmp	al,10h
020A:6898  77 68				ja	loc_988			; Jump if above
020A:689A  D0 E0				shl	al,1			; Shift w/zeros fill
020A:689C  A2 2EB2				mov	byte ptr ds:[2EB2h],al	; (9B68:2EB2=0A1h)
020A:689F  9A 16BF:0350		;*		call	far ptr sub_181		;*(16BF:0350)
020A:689F  9A 50 03 BF 16			db	 9Ah, 50h, 03h,0BFh, 16h
020A:68A4  B4 02				mov	ah,2
020A:68A6  32 FF				xor	bh,bh			; Zero register
020A:68A8  BA 1727				mov	dx,1727h
020A:68AB  E8 1F96				call	sub_121			; (8844)
020A:68AE  B1 04				mov	cl,4
020A:68B0  B3 02				mov	bl,2
020A:68B2  BE 07CD				mov	si,7CDh
020A:68B5  9A 16BF:02B0		;*		call	far ptr sub_179		;*(16BF:02B0)
020A:68B5  9A B0 02 BF 16			db	 9Ah,0B0h, 02h,0BFh, 16h
020A:68BA  3C 1B				cmp	al,1Bh
020A:68BC  74 44				je	loc_988			; Jump if equal
020A:68BE  80 F9 00				cmp	cl,0
020A:68C1  75 3F				jne	loc_988			; Jump if not equal
020A:68C3  B9 0080				mov	cx,80h
020A:68C6  BF 07CD				mov	di,7CDh
020A:68C9  E8 ECBC				call	sub_82			; (5588)
020A:68CC  73 34				jnc	loc_988			; Jump if carry=0
020A:68CE  89 16 2EB3				mov	word ptr ds:[2EB3h],dx	; (9B68:2EB3=0E0AEh)
020A:68D2  B2 3A				mov	dl,3Ah			; ':'
020A:68D4  9A 16BF:0350		;*		call	far ptr sub_181		;*(16BF:0350)
020A:68D4  9A 50 03 BF 16			db	 9Ah, 50h, 03h,0BFh, 16h
020A:68D9  B1 04				mov	cl,4
020A:68DB  B3 02				mov	bl,2
020A:68DD  BE 07D2				mov	si,7D2h
020A:68E0  9A 16BF:02B0		;*		call	far ptr sub_179		;*(16BF:02B0)
020A:68E0  9A B0 02 BF 16			db	 9Ah,0B0h, 02h,0BFh, 16h
020A:68E5  3C 1B				cmp	al,1Bh
020A:68E7  74 19				je	loc_988			; Jump if equal
020A:68E9  80 F9 00				cmp	cl,0
020A:68EC  75 14				jne	loc_988			; Jump if not equal
020A:68EE  B9 0080				mov	cx,80h
020A:68F1  BF 07D2				mov	di,7D2h
020A:68F4  E8 EC91				call	sub_82			; (5588)
020A:68F7  73 09				jnc	loc_988			; Jump if carry=0
020A:68F9  89 16 2EB5				mov	word ptr ds:[2EB5h],dx	; (9B68:2EB5=202Ch)
020A:68FD  80 0E 2EB1 08			or	byte ptr ds:[2EB1h],8	; (9B68:2EB1=0A0h)
020A:6902			loc_988:
020A:6902  E8 1D93				call	sub_115			; (8698)
020A:6905  E8 1AAC				call	sub_111			; (83B4)
020A:6908  E9 E76A				jmp	loc_707			; (5075)
020A:690B			loc_989:
020A:690B  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:6910  06					push	es
020A:6911  80 3E 1309 01			cmp	byte ptr ds:[1309h],1	; (9B68:1309=0A2h)
020A:6916  75 35				jne	loc_993			; Jump if not equal
020A:6918  B4 02				mov	ah,2
020A:691A  32 FF				xor	bh,bh			; Zero register
020A:691C  BA 0500				mov	dx,500h
020A:691F  E8 1F22				call	sub_121			; (8844)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 214

020A:6922  BE 0053				mov	si,53h
020A:6925  B9 0643				mov	cx,643h
020A:6928  81 E9 0053				sub	cx,53h
020A:692C  49					dec	cx
020A:692D  E8 2F31				call	sub_146			; (9861)
  
020A:6930			locloop_990:
020A:6930  26: 8A 14				mov	dl,es:[si]
020A:6933  80 EA 24				sub	dl,24h			; '$'
020A:6936  80 FA 23				cmp	dl,23h			; '#'
020A:6939  74 05				je	loc_991			; Jump if equal
020A:693B  80 FA 40				cmp	dl,40h			; '@'
020A:693E  75 02				jne	loc_992			; Jump if not equal
020A:6940			loc_991:
020A:6940  B2 20				mov	dl,20h			; ' '
020A:6942			loc_992:
020A:6942  9A 16BF:0350		;*		call	far ptr sub_181		;*(16BF:0350)
020A:6942  9A 50 03 BF 16			db	 9Ah, 50h, 03h,0BFh, 16h
020A:6947  46					inc	si
020A:6948  E2 E6				loop	locloop_990		; Loop if cx > 0
  
020A:694A  E9 00AD				jmp	loc_1001		; (69FA)
020A:694D			loc_993:
020A:694D  8B 16 12FB				mov	dx,word ptr ds:[12FBh]	; (9B68:12FB=0A0AFh)
020A:6951  8E C2				mov	es,dx
020A:6953  BF 0320				mov	di,320h
020A:6956  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:695A  BE 0053				mov	si,53h
020A:695D  B9 0643				mov	cx,643h
020A:6960  81 E9 0053				sub	cx,53h
020A:6964  E8 17D9				call	sub_105			; (8140)
020A:6967  B0 20				mov	al,20h			; ' '
020A:6969  B7 07				mov	bh,7
020A:696B  E8 2EDE				call	sub_141			; (984C)
  
020A:696E			locloop_994:
020A:696E  8A DF				mov	bl,bh
020A:6970  80 3C 64				cmp	byte ptr [si],64h	; 'd'
020A:6973  75 06				jne	loc_995			; Jump if not equal
020A:6975  B7 0F				mov	bh,0Fh
020A:6977  8A DF				mov	bl,bh
020A:6979  EB 0E				jmp	short loc_996		; (6989)
020A:697B			loc_995:
020A:697B  80 3C 47				cmp	byte ptr [si],47h	; 'G'
020A:697E  75 13				jne	loc_997			; Jump if not equal
020A:6980  1E					push	ds
020A:6981  E8 2EC5				call	sub_140			; (9849)
020A:6984  8A 1E 11E7				mov	bl,byte ptr ds:[11E7h]	; (9B68:11E7=0A8h)
020A:6988  1F					pop	ds
020A:6989			loc_996:
020A:6989  FC					cld				; Clear direction
020A:698A  AA					stosb				; Store al to es:[di]
020A:698B  46					inc	si
020A:698C  26: 88 1D				mov	es:[di],bl
020A:698F  47					inc	di
020A:6990  49					dec	cx
020A:6991  EB 0E				jmp	short loc_998		; (69A1)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 215

020A:6993			loc_997:
020A:6993  80 3C A4				cmp	byte ptr [si],0A4h
020A:6996  72 09				jb	loc_998			; Jump if below
020A:6998  1E					push	ds
020A:6999  E8 2EAD				call	sub_140			; (9849)
020A:699C  8A 1E 11E6				mov	bl,byte ptr ds:[11E6h]	; (9B68:11E6=0ADh)
020A:69A0  1F					pop	ds
020A:69A1			loc_998:
020A:69A1  FC					cld				; Clear direction
020A:69A2  50					push	ax
020A:69A3  AC					lodsb				; String [si] to al
020A:69A4  2C 24				sub	al,24h			; '$'
020A:69A6  AA					stosb				; Store al to es:[di]
020A:69A7  58					pop	ax
020A:69A8  26: 88 1D				mov	es:[di],bl
020A:69AB  47					inc	di
020A:69AC  E2 C0				loop	locloop_994		; Loop if cx > 0
  
020A:69AE  BE 0021				mov	si,21h
020A:69B1  B9 003A				mov	cx,3Ah
020A:69B4  81 E9 0021				sub	cx,21h
020A:69B8  BF 014B				mov	di,14Bh
020A:69BB  81 EF 0076				sub	di,76h
020A:69BF  D1 E7				shl	di,1			; Shift w/zeros fill
020A:69C1  1E					push	ds
020A:69C2  E8 2E84				call	sub_140			; (9849)
020A:69C5  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:69C9  1F					pop	ds
020A:69CA  FC					cld				; Clear direction
  
020A:69CB			locloop_999:
020A:69CB  A4					movsb				; Mov [si] to es:[di]
020A:69CC  47					inc	di
020A:69CD  E2 FC				loop	locloop_999		; Loop if cx > 0
  
020A:69CF  BE 003A				mov	si,3Ah
020A:69D2  B9 003A				mov	cx,3Ah
020A:69D5  81 E9 0021				sub	cx,21h
020A:69D9  BF 014B				mov	di,14Bh
020A:69DC  81 EF 0076				sub	di,76h
020A:69E0  D1 E7				shl	di,1			; Shift w/zeros fill
020A:69E2  81 C7 00A0				add	di,0A0h
020A:69E6  1E					push	ds
020A:69E7  E8 2E5F				call	sub_140			; (9849)
020A:69EA  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:69EE  1F					pop	ds
020A:69EF  FC					cld				; Clear direction
  
020A:69F0			locloop_1000:
020A:69F0  A4					movsb				; Mov [si] to es:[di]
020A:69F1  47					inc	di
020A:69F2  E2 FC				loop	locloop_1000		; Loop if cx > 0
  
020A:69F4  E8 2E52				call	sub_140			; (9849)
020A:69F7  E8 176A				call	sub_106			; (8164)
020A:69FA			loc_1001:
020A:69FA  9A 16BF:0340		;*		call	far ptr sub_180		;*(16BF:0340)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 216

020A:69FA  9A 40 03 BF 16			db	 9Ah, 40h, 03h,0BFh, 16h
020A:69FF  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6A04  5A					pop	dx
020A:6A05  8E C2				mov	es,dx
020A:6A07  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:6A0C  5A					pop	dx
020A:6A0D  75 0A				jnz	loc_1002		; Jump if not zero
020A:6A0F  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:6A14  74 03				je	loc_1002		; Jump if equal
020A:6A16  E8 311B				call	sub_151			; (9B34)
020A:6A19			loc_1002:
020A:6A19  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6A1E  E9 E654				jmp	loc_707			; (5075)
020A:6A21  000F[00]				db	15 dup (0)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_93		proc	near
020A:6A30  F7 06 2EC4 0008			test	word ptr ds:[2EC4h],8	; (9B68:2EC4=0ADA8h)
020A:6A36  75 02				jnz	loc_1003		; Jump if not zero
020A:6A38  EB 71				jmp	short loc_1007		; (6AAB)
020A:6A3A			loc_1003:
020A:6A3A  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:6A40  75 08				jne	loc_1004		; Jump if not equal
020A:6A42  2E: 80 3E 4CE7 00			cmp	byte ptr cs:data_526+47h,0	; (020A:4CE7=42h)
020A:6A48  74 61				je	loc_1007		; Jump if equal
020A:6A4A			loc_1004:
020A:6A4A  50					push	ax
020A:6A4B  53					push	bx
020A:6A4C  51					push	cx
020A:6A4D  52					push	dx
020A:6A4E  56					push	si
020A:6A4F  57					push	di
020A:6A50  55					push	bp
020A:6A51  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:6A56  1E					push	ds
020A:6A57  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:6A5C  06					push	es
020A:6A5D  BB 1E0C				mov	bx,1E0Ch
020A:6A60  BA 0007				mov	dx,7
020A:6A63  E8 DAAA		;*		call	sub_47			;*(4510)
020A:6A63  E8 AA DA				db	0E8h,0AAh,0DAh
020A:6A66  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6A6B  5A					pop	dx
020A:6A6C  8E C2				mov	es,dx
020A:6A6E  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:6A73  5A					pop	dx
020A:6A74  75 0A				jnz	loc_1005		; Jump if not zero
020A:6A76  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:6A7B  74 03				je	loc_1005		; Jump if equal
020A:6A7D  E8 30B4				call	sub_151			; (9B34)
020A:6A80			loc_1005:
020A:6A80  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6A85  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6A8A  5A					pop	dx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 217

020A:6A8B  8E DA				mov	ds,dx
020A:6A8D  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:6A92  5A					pop	dx
020A:6A93  75 0A				jnz	loc_1006		; Jump if not zero
020A:6A95  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:6A9A  74 03				je	loc_1006		; Jump if equal
020A:6A9C  E8 3095				call	sub_151			; (9B34)
020A:6A9F			loc_1006:
020A:6A9F  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6AA4  5D					pop	bp
020A:6AA5  5F					pop	di
020A:6AA6  5E					pop	si
020A:6AA7  5A					pop	dx
020A:6AA8  59					pop	cx
020A:6AA9  5B					pop	bx
020A:6AAA  58					pop	ax
020A:6AAB			loc_1007:
020A:6AAB  C3					retn
				sub_93		endp
  
020A:6AAC  50					push	ax
020A:6AAD  53					push	bx
020A:6AAE  51					push	cx
020A:6AAF  52					push	dx
020A:6AB0  56					push	si
020A:6AB1  57					push	di
020A:6AB2  55					push	bp
020A:6AB3  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:6AB8  1E					push	ds
020A:6AB9  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:6ABE  06					push	es
020A:6ABF  26: 8B 2E 0000			mov	bp,word ptr es:[0]	; (D233:0000=0)
020A:6AC4  BE 0008				mov	si,8
020A:6AC7  E8 2D7F				call	sub_140			; (9849)
020A:6ACA  83 3E 2A82 06			cmp	word ptr ds:[2A82h],6	; (9B68:2A82=0A5A2h)
020A:6ACF  76 02				jbe	loc_1008		; Jump if below or =
020A:6AD1  EB 77				jmp	short loc_1017		; (6B4A)
020A:6AD3			loc_1008:
020A:6AD3  BF 6C4B				mov	di,6C4Bh
020A:6AD6  BB 377F				mov	bx,377Fh
020A:6AD9  26: 8A 44 05				mov	al,es:[si+5]
020A:6ADD  25 000F				and	ax,0Fh
020A:6AE0  D7					xlat				; al=[al+[bx]] table
020A:6AE1  0A C0				or	al,al			; Zero ?
020A:6AE3  75 04				jnz	loc_1009		; Jump if not zero
020A:6AE5  26: 8A 44 06				mov	al,es:[si+6]
020A:6AE9			loc_1009:
020A:6AE9  3D 0006				cmp	ax,6
020A:6AEC  77 03				ja	loc_1010		; Jump if above
020A:6AEE  E9 009F				jmp	loc_1020		; (6B90)
020A:6AF1			loc_1010:
020A:6AF1  8B C8				mov	cx,ax
020A:6AF3  26: 8A 44 05				mov	al,es:[si+5]
020A:6AF7  24 0C				and	al,0Ch
020A:6AF9  83 FE 08				cmp	si,8
020A:6AFC  75 02				jne	loc_1011		; Jump if not equal
020A:6AFE  8A D0				mov	dl,al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 218

020A:6B00			loc_1011:
020A:6B00  BF 6C5A				mov	di,6C5Ah
020A:6B03  3A C2				cmp	al,dl
020A:6B05  74 03				je	loc_1012		; Jump if equal
020A:6B07  E9 0086				jmp	loc_1020		; (6B90)
020A:6B0A			loc_1012:
020A:6B0A  3C 08				cmp	al,8
020A:6B0C  74 0A				je	loc_1013		; Jump if equal
020A:6B0E  3C 04				cmp	al,4
020A:6B10  74 06				je	loc_1013		; Jump if equal
020A:6B12  3C 00				cmp	al,0
020A:6B14  74 02				je	loc_1013		; Jump if equal
020A:6B16  EB 78				jmp	short loc_1020		; (6B90)
020A:6B18			loc_1013:
020A:6B18  BF 6C2D				mov	di,6C2Dh
020A:6B1B  26: 8B 1C				mov	bx,es:[si]
020A:6B1E  26: 8B 44 02				mov	ax,es:[si+2]
020A:6B22  83 FB FF				cmp	bx,0FFFFh
020A:6B25  75 07				jne	loc_1014		; Jump if not equal
020A:6B27  3D FFFF				cmp	ax,0FFFFh
020A:6B2A  75 02				jne	loc_1014		; Jump if not equal
020A:6B2C  EB 13				jmp	short loc_1016		; (6B41)
020A:6B2E			loc_1014:
020A:6B2E  03 F1				add	si,cx
020A:6B30  26: 3B 1C				cmp	bx,es:[si]
020A:6B33  72 0A				jb	loc_1015		; Jump if below
020A:6B35  77 59				ja	loc_1020		; Jump if above
020A:6B37  26: 3B 44 02				cmp	ax,es:[si+2]
020A:6B3B  76 02				jbe	loc_1015		; Jump if below or =
020A:6B3D  77 51				ja	loc_1020		; Jump if above
020A:6B3F			loc_1015:
020A:6B3F  EB 92				jmp	short loc_1008		; (6AD3)
020A:6B41			loc_1016:
020A:6B41  BF 6C3C				mov	di,6C3Ch
020A:6B44  03 F1				add	si,cx
020A:6B46  3B F5				cmp	si,bp
020A:6B48  75 46				jne	loc_1020		; Jump if not equal
020A:6B4A			loc_1017:
020A:6B4A  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6B4F  5A					pop	dx
020A:6B50  8E C2				mov	es,dx
020A:6B52  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:6B57  5A					pop	dx
020A:6B58  75 0A				jnz	loc_1018		; Jump if not zero
020A:6B5A  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:6B5F  74 03				je	loc_1018		; Jump if equal
020A:6B61  E8 2FD0				call	sub_151			; (9B34)
020A:6B64			loc_1018:
020A:6B64  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6B69  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6B6E  5A					pop	dx
020A:6B6F  8E DA				mov	ds,dx
020A:6B71  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:6B76  5A					pop	dx
020A:6B77  75 0A				jnz	loc_1019		; Jump if not zero
020A:6B79  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:6B7E  74 03				je	loc_1019		; Jump if equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 219

020A:6B80  E8 2FB1				call	sub_151			; (9B34)
020A:6B83			loc_1019:
020A:6B83  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6B88  5D					pop	bp
020A:6B89  5F					pop	di
020A:6B8A  5E					pop	si
020A:6B8B  5A					pop	dx
020A:6B8C  59					pop	cx
020A:6B8D  5B					pop	bx
020A:6B8E  58					pop	ax
020A:6B8F  C3					retn
020A:6B90			loc_1020:
020A:6B90  E8 2CB6				call	sub_140			; (9849)
020A:6B93  56					push	si
020A:6B94  BD 2432				mov	bp,2432h
020A:6B97  80 FA 08				cmp	dl,8
020A:6B9A  74 0F				je	loc_1021		; Jump if equal
020A:6B9C  80 FA 04				cmp	dl,4
020A:6B9F  74 0F				je	loc_1022		; Jump if equal
020A:6BA1  80 FA 00				cmp	dl,0
020A:6BA4  74 0F				je	loc_1023		; Jump if equal
020A:6BA6  BE 6C01				mov	si,6C01h
020A:6BA9  EB 0F				jmp	short loc_1024		; (6BBA)
020A:6BAB			loc_1021:
020A:6BAB  BE 6BF6				mov	si,6BF6h
020A:6BAE  EB 0A				jmp	short loc_1024		; (6BBA)
020A:6BB0			loc_1022:
020A:6BB0  BE 6BE0				mov	si,6BE0h
020A:6BB3  EB 05				jmp	short loc_1024		; (6BBA)
020A:6BB5			loc_1023:
020A:6BB5  BE 6BEB				mov	si,6BEBh
020A:6BB8  EB 00				jmp	short loc_1024		; (6BBA)
020A:6BBA			loc_1024:
020A:6BBA  9A 16BF:1004		;*		call	far ptr sub_197		;*(16BF:1004)
020A:6BBA  9A 04 10 BF 16			db	 9Ah, 04h, 10h,0BFh, 16h
020A:6BBF  BD 243D				mov	bp,243Dh
020A:6BC2  8C C0				mov	ax,es
020A:6BC4  2E: 3B 06 4861			cmp	ax,cs:data_506		; (020A:4861=0D233h)
020A:6BC9  75 09				jne	loc_1025		; Jump if not equal
020A:6BCB  BE 6C17				mov	si,6C17h
020A:6BCE  2E: A1 4863				mov	ax,cs:data_507		; (020A:4863=0B9E8h)
020A:6BD2  EB 03				jmp	short loc_1026		; (6BD7)
020A:6BD4			loc_1025:
020A:6BD4  BE 6C22				mov	si,6C22h
020A:6BD7			loc_1026:
020A:6BD7  50					push	ax
020A:6BD8  9A 16BF:1004		;*		call	far ptr sub_197		;*(16BF:1004)
020A:6BD8  9A 04 10 BF 16			db	 9Ah, 04h, 10h,0BFh, 16h
020A:6BDD  58					pop	ax
020A:6BDE  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:6BDE  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:6BE3  5E					pop	si
020A:6BE4  8B C6				mov	ax,si
020A:6BE6  BD 2457				mov	bp,2457h
020A:6BE9  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:6BE9  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:6BEE  BD 245E				mov	bp,245Eh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 220

020A:6BF1  A0 263B				mov	al,data_283		; (020A:263B=3Eh)
020A:6BF4  9A 16BF:0078		;*		call	far ptr sub_173		;*(16BF:0078)
020A:6BF4  9A 78 00 BF 16			db	 9Ah, 78h, 00h,0BFh, 16h
020A:6BF9  8B F7				mov	si,di
020A:6BFB  BD 2461				mov	bp,2461h
020A:6BFE  9A 16BF:1004		;*		call	far ptr sub_197		;*(16BF:1004)
020A:6BFE  9A 04 10 BF 16			db	 9Ah, 04h, 10h,0BFh, 16h
020A:6C03  E9 CDDD				jmp	loc_402			; (39E3)
020A:6C06  87 DB				xchg	bx,bx
020A:6C08  C3					retn
020A:6C09  0007[00]				db	7 dup (0)
020A:6C10			loc_1027:
020A:6C10  B4 2A				mov	ah,2Ah			; '*'
020A:6C12  E8 17D3				call	sub_112			; (83E8)
020A:6C15  E8 1468				call	sub_103			; (8080)
020A:6C18  BA 37AA				mov	dx,37AAh
020A:6C1B  B4 3D				mov	ah,3Dh			; '='
020A:6C1D  B0 00				mov	al,0
020A:6C1F  B9 0000				mov	cx,0
020A:6C22  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:6C24  73 14				jnc	loc_1030		; Jump if carry=0
020A:6C26  80 3E 2C3F 01			cmp	data_377,1		; (020A:2C3F=4Dh)
020A:6C2B  77 0A				ja	loc_1029		; Jump if above
020A:6C2D  75 05				jnz	loc_1028		; Jump if not zero
020A:6C2F  B3 01				mov	bl,1
020A:6C31  E9 CC11				jmp	loc_375			; (3845)
020A:6C34			loc_1028:
020A:6C34  E9 E43E				jmp	loc_707			; (5075)
020A:6C37			loc_1029:
020A:6C37  E9 E433				jmp	loc_706			; (506D)
020A:6C3A			loc_1030:
020A:6C3A  A3 37EA				mov	word ptr ds:[37EAh],ax	; (020A:37EA=0FE3h)
020A:6C3D  C6 06 2A2B 00			mov	byte ptr ds:[2A2Bh],0	; (020A:2A2B=0A5h)
020A:6C42  C6 06 38AE FF			mov	byte ptr ds:[38AEh],0FFh	; (020A:38AE=3)
020A:6C47  FF 06 38AC				inc	word ptr ds:[38ACh]	; (020A:38AC=7480h)
020A:6C4B  E8 2C10				call	sub_145			; (985E)
020A:6C4E			loc_1031:
020A:6C4E  80 3E 386E 01			cmp	byte ptr ds:[386Eh],1	; (9B68:386E=0)
020A:6C53  74 24				je	loc_1033		; Jump if equal
020A:6C55  C6 06 386E 00			mov	byte ptr ds:[386Eh],0	; (9B68:386E=0)
020A:6C5A  B4 3F				mov	ah,3Fh			; '?'
020A:6C5C  8B 1E 37EA				mov	bx,word ptr ds:[37EAh]	; (9B68:37EA=3002h)
020A:6C60  B9 0080				mov	cx,80h
020A:6C63  BA 37EE				mov	dx,37EEh
020A:6C66  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, cx=bytes, to ds:dx
020A:6C68  73 05				jnc	loc_1032		; Jump if carry=0
020A:6C6A  B3 0E				mov	bl,0Eh
020A:6C6C  E9 0C12				jmp	loc_1206		; (7881)
020A:6C6F			loc_1032:
020A:6C6F  3D 0080				cmp	ax,80h
020A:6C72  74 44				je	loc_1036		; Jump if equal
020A:6C74  3D 0000				cmp	ax,0
020A:6C77  75 03				jne	loc_1034		; Jump if not equal
020A:6C79			loc_1033:
020A:6C79  E9 0C0B				jmp	loc_1208		; (7887)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 221

020A:6C7C			loc_1034:
020A:6C7C  C6 06 386E 01			mov	byte ptr ds:[386Eh],1	; (9B68:386E=0)
020A:6C81  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:6C86  06					push	es
020A:6C87  E8 2BD4				call	sub_145			; (985E)
020A:6C8A  BF 37EE				mov	di,37EEh
020A:6C8D  03 F8				add	di,ax
020A:6C8F  B9 0080				mov	cx,80h
020A:6C92  2B C8				sub	cx,ax
020A:6C94  B0 20				mov	al,20h			; ' '
020A:6C96  FC					cld				; Clear direction
020A:6C97  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:6C99  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6C9E  5A					pop	dx
020A:6C9F  8E C2				mov	es,dx
020A:6CA1  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:6CA6  5A					pop	dx
020A:6CA7  75 0A				jnz	loc_1035		; Jump if not zero
020A:6CA9  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:6CAE  74 03				je	loc_1035		; Jump if equal
020A:6CB0  E8 2E81				call	sub_151			; (9B34)
020A:6CB3			loc_1035:
020A:6CB3  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6CB8			loc_1036:
020A:6CB8  BF 37EE				mov	di,37EEh
020A:6CBB  80B9			data_544	dw	80B9h
020A:6CBD  8000			data_545	dw	8000h
020A:6CBF  AE3E			data_546	dw	0AE3Eh
020A:6CC1  38 FF				cmp	bh,bh
020A:6CC3  75 06				jne	loc_1038		; Jump if not equal
020A:6CC5  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:6CC9  EB 3A				jmp	short loc_1041		; (6D05)
020A:6CCB			loc_1038:
020A:6CCB  B0 0A				mov	al,0Ah
020A:6CCD  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:6CD2  06					push	es
020A:6CD3  E8 2B88				call	sub_145			; (985E)
020A:6CD6  FC					cld				; Clear direction
020A:6CD7  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:6CD9  9C					pushf				; Push flags
020A:6CDA  5D					pop	bp
020A:6CDB  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6CE0  5A					pop	dx
020A:6CE1  8E C2				mov	es,dx
020A:6CE3  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:6CE8  5A					pop	dx
020A:6CE9  75 0A				jnz	loc_1039		; Jump if not zero
020A:6CEB  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:6CF0  74 03				je	loc_1039		; Jump if equal
020A:6CF2  E8 2E3F				call	sub_151			; (9B34)
020A:6CF5			loc_1039:
020A:6CF5  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6CFA  55					push	bp
020A:6CFB  9D					popf				; Pop flags
020A:6CFC  74 03				jz	loc_1040		; Jump if zero
020A:6CFE  E9 FF4D				jmp	loc_1031		; (6C4E)
020A:6D01			loc_1040:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 222

020A:6D01  FF 06 38AC				inc	word ptr ds:[38ACh]	; (9B68:38AC=152h)
020A:6D05			loc_1041:
020A:6D05  51					push	cx
020A:6D06  57					push	di
020A:6D07  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:6D0C  06					push	es
020A:6D0D  A1 38AC				mov	ax,word ptr ds:[38ACh]	; (9B68:38AC=152h)
020A:6D10  B3 01				mov	bl,1
020A:6D12  BD 21F3				mov	bp,21F3h
020A:6D15  9A 16BF:00D4		;*		call	far ptr sub_175		;*(16BF:00D4)
020A:6D15  9A D4 00 BF 16			db	 9Ah,0D4h, 00h,0BFh, 16h
020A:6D1A  B9 0005				mov	cx,5
020A:6D1D  8E 06 12FB				mov	es,word ptr ds:[12FBh]	; (9B68:12FB=0A0AFh)
020A:6D21  BD 21F3				mov	bp,21F3h
020A:6D24  BF 07A9				mov	di,7A9h
020A:6D27  81 EF 0076				sub	di,76h
020A:6D2B  81 C7 21F3				add	di,21F3h
020A:6D2F  81 EF 21D5				sub	di,21D5h
020A:6D33  D1 E7				shl	di,1			; Shift w/zeros fill
  
020A:6D35			locloop_1042:
020A:6D35  1E					push	ds
020A:6D36  E8 2B10				call	sub_140			; (9849)
020A:6D39  3E: 8A 66 00				mov	ah,ds:[bp]
020A:6D3D  1F					pop	ds
020A:6D3E  E8 143F				call	sub_107			; (8180)
020A:6D41  45					inc	bp
020A:6D42  47					inc	di
020A:6D43  47					inc	di
020A:6D44  E2 EF				loop	locloop_1042		; Loop if cx > 0
  
020A:6D46  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6D4B  5A					pop	dx
020A:6D4C  8E C2				mov	es,dx
020A:6D4E  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:6D53  5A					pop	dx
020A:6D54  75 0A				jnz	loc_1043		; Jump if not zero
020A:6D56  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:6D5B  74 03				je	loc_1043		; Jump if equal
020A:6D5D  E8 2DD4				call	sub_151			; (9B34)
020A:6D60			loc_1043:
020A:6D60  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6D65  5F					pop	di
020A:6D66  59					pop	cx
020A:6D67  81 FF 386E				cmp	di,386Eh
020A:6D6B  72 11				jb	loc_1044		; Jump if below
020A:6D6D  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:6D6D  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:6D72  73 0A				jnc	loc_1044		; Jump if carry=0
020A:6D74  80 3E 38AE 01			cmp	byte ptr ds:[38AEh],1	; (9B68:38AE=0)
020A:6D79  73 19				jae	loc_1045		; Jump if above or =
020A:6D7B  E9 0AFE				jmp	loc_1205		; (787C)
020A:6D7E			loc_1044:
020A:6D7E  80 3D 20				cmp	byte ptr [di],20h	; ' '
020A:6D81  74 14				je	loc_1046		; Jump if equal
020A:6D83  80 3D 09				cmp	byte ptr [di],9
020A:6D86  74 0F				je	loc_1046		; Jump if equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 223

020A:6D88  80 3D 0D				cmp	byte ptr [di],0Dh
020A:6D8B  74			data_550	db	74h
020A:6D8C  0A 80 1A3D				or	al,byte ptr ds:[1A3Dh][bx+si]	; (9B68:1A3D=0Ah)
020A:6D90  74 02				jz	loc_1045		; Jump if zero
020A:6D92  EB 36				jmp	short loc_1051		; (6DCA)
020A:6D94			loc_1045:
020A:6D94  E9 0AF0				jmp	loc_1208		; (7887)
020A:6D97			loc_1046:
020A:6D97  80 3E 4507 02			cmp	byte ptr ds:[4507h],2	; (9B68:4507=0)
020A:6D9C  72 03				jb	loc_1047		; Jump if below
020A:6D9E  E9 0881				jmp	loc_1172		; (7622)
020A:6DA1			loc_1047:
020A:6DA1  80 3E 38AE 14			cmp	byte ptr ds:[38AEh],14h	; (9B68:38AE=0)
020A:6DA6  74 0E				je	loc_1048		; Jump if equal
020A:6DA8  80 3E 38AE 03			cmp	byte ptr ds:[38AEh],3	; (9B68:38AE=0)
020A:6DAD  74 14				je	loc_1050		; Jump if equal
020A:6DAF  80 3E 38AE 01			cmp	byte ptr ds:[38AEh],1	; (9B68:38AE=0)
020A:6DB4  74 03				je	loc_1049		; Jump if equal
020A:6DB6			loc_1048:
020A:6DB6  E9 FF05		;*		jmp	loc_1037		;*(6CBE)
020A:6DB6  E9 05 FF				db	0E9h, 05h,0FFh
020A:6DB9			loc_1049:
020A:6DB9  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:6DBD  E8 2A95				call	sub_142			; (9855)
020A:6DC0  E9 FEFB		;*		jmp	loc_1037		;*(6CBE)
020A:6DC0  E9 FB FE				db	0E9h,0FBh,0FEh
020A:6DC3			loc_1050:
020A:6DC3  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:6DC7  E9 FEF4		;*		jmp	loc_1037		;*(6CBE)
020A:6DC7  E9 F4 FE				db	0E9h,0F4h,0FEh
020A:6DCA			loc_1051:
020A:6DCA  80 3E 38AE 01			cmp	byte ptr ds:[38AEh],1	; (9B68:38AE=0)
020A:6DCF  76 2B				jbe	loc_1056		; Jump if below or =
020A:6DD1  80 3E 38AE 02			cmp	byte ptr ds:[38AEh],2	; (9B68:38AE=0)
020A:6DD6  75 03				jne	loc_1052		; Jump if not equal
020A:6DD8  E9 0117				jmp	loc_1072		; (6EF2)
020A:6DDB			loc_1052:
020A:6DDB  80 3E 38AE 03			cmp	byte ptr ds:[38AEh],3	; (9B68:38AE=0)
020A:6DE0  75 03				jne	loc_1053		; Jump if not equal
020A:6DE2  E9 0111				jmp	loc_1073		; (6EF6)
020A:6DE5			loc_1053:
020A:6DE5  80 3E 38AE 04			cmp	byte ptr ds:[38AEh],4	; (9B68:38AE=0)
020A:6DEA  75 03				jne	loc_1054		; Jump if not equal
020A:6DEC  E9 0265				jmp	loc_1087		; (7054)
020A:6DEF			loc_1054:
020A:6DEF  80 3E 4507 02			cmp	byte ptr ds:[4507h],2	; (9B68:4507=0)
020A:6DF4  72 03				jb	loc_1055		; Jump if below
020A:6DF6  E9 0829				jmp	loc_1172		; (7622)
020A:6DF9			loc_1055:
020A:6DF9  E9 02AE				jmp	loc_1089		; (70AA)
020A:6DFC			loc_1056:
020A:6DFC  8A 05				mov	al,[di]
020A:6DFE  A2 4319				mov	byte ptr ds:[4319h],al	; (9B68:4319=0)
020A:6E01  80 3E 38AE 01			cmp	byte ptr ds:[38AEh],1	; (9B68:38AE=0)
020A:6E06  74 04				je	loc_1057		; Jump if equal
020A:6E08  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:6E0C			loc_1057:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 224

020A:6E0C  E8 2A4F				call	sub_145			; (985E)
020A:6E0F  C6 06 4500 01			mov	byte ptr ds:[4500h],1	; (9B68:4500=0)
020A:6E14  A0 4319				mov	al,byte ptr ds:[4319h]	; (9B68:4319=0)
020A:6E17  24 DF				and	al,0DFh
020A:6E19  51					push	cx
020A:6E1A  57					push	di
020A:6E1B  B9 4332				mov	cx,4332h
020A:6E1E  81 E9 431A				sub	cx,431Ah
020A:6E22  BF 431A				mov	di,431Ah
020A:6E25  FC					cld				; Clear direction
020A:6E26  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:6E28  0B C9				or	cx,cx			; Zero ?
020A:6E2A  75 07				jnz	loc_1058		; Jump if not zero
020A:6E2C  5F					pop	di
020A:6E2D  59					pop	cx
020A:6E2E  B0 01				mov	al,1
020A:6E30  E9 0A42				jmp	loc_1204		; (7875)
020A:6E33			loc_1058:
020A:6E33  4F					dec	di
020A:6E34  81 EF 431A				sub	di,431Ah
020A:6E38  D1 E7				shl	di,1			; Shift w/zeros fill
020A:6E3A  D1 E7				shl	di,1			; Shift w/zeros fill
020A:6E3C  81 C7 4332				add	di,4332h
020A:6E40  8B 45 02				mov	ax,[di+2]
020A:6E43  A3 4390				mov	word ptr ds:[4390h],ax	; (9B68:4390=0)
020A:6E46  8B 05				mov	ax,[di]
020A:6E48  A3 438E				mov	word ptr ds:[438Eh],ax	; (9B68:438E=0)
020A:6E4B  5F					pop	di
020A:6E4C  59					pop	cx
020A:6E4D  BE 4393				mov	si,4393h
020A:6E50  BB 4413				mov	bx,4413h
020A:6E53  81 EB 4393				sub	bx,4393h
020A:6E57  4B					dec	bx
020A:6E58  F6 C4 10				test	ah,10h
020A:6E5B  75 5D				jnz	loc_1067		; Jump if not zero
020A:6E5D			loc_1059:
020A:6E5D  8A 05				mov	al,[di]
020A:6E5F  3C 0D				cmp	al,0Dh
020A:6E61  74 4A				je	loc_1066		; Jump if equal
020A:6E63  3C 1A				cmp	al,1Ah
020A:6E65  74 46				je	loc_1066		; Jump if equal
020A:6E67  F6 C4 01				test	ah,1
020A:6E6A  75 09				jnz	loc_1060		; Jump if not zero
020A:6E6C  3C 3D				cmp	al,3Dh			; '='
020A:6E6E  75 31				jne	loc_1065		; Jump if not equal
020A:6E70  80 CC 01				or	ah,1
020A:6E73  EB 2C				jmp	short loc_1065		; (6EA1)
020A:6E75			loc_1060:
020A:6E75  F6 C4 02				test	ah,2
020A:6E78  74 05				jz	loc_1061		; Jump if zero
020A:6E7A  F6 C4 40				test	ah,40h			; '@'
020A:6E7D  75 08				jnz	loc_1062		; Jump if not zero
020A:6E7F			loc_1061:
020A:6E7F  3C 20				cmp	al,20h			; ' '
020A:6E81  74 1E				je	loc_1065		; Jump if equal
020A:6E83  3C 09				cmp	al,9
020A:6E85  74 1A				je	loc_1065		; Jump if equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 225

020A:6E87			loc_1062:
020A:6E87  3C 09				cmp	al,9
020A:6E89  75 02				jne	loc_1063		; Jump if not equal
020A:6E8B  B0 20				mov	al,20h			; ' '
020A:6E8D			loc_1063:
020A:6E8D  80 CC 02				or	ah,2
020A:6E90  F6 C4 20				test	ah,20h			; ' '
020A:6E93  74 06				jz	loc_1064		; Jump if zero
020A:6E95  A8 40				test	al,40h			; '@'
020A:6E97  74 02				jz	loc_1064		; Jump if zero
020A:6E99  24 DF				and	al,0DFh
020A:6E9B			loc_1064:
020A:6E9B  88 04				mov	[si],al
020A:6E9D  46					inc	si
020A:6E9E  4B					dec	bx
020A:6E9F  74 19				jz	loc_1067		; Jump if zero
020A:6EA1			loc_1065:
020A:6EA1  50					push	ax
020A:6EA2  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:6EA2  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:6EA7  58					pop	ax
020A:6EA8  73 B3				jnc	loc_1059		; Jump if carry=0
020A:6EAA  E9 09C8				jmp	loc_1204		; (7875)
020A:6EAD			loc_1066:
020A:6EAD  50					push	ax
020A:6EAE  B8 4413				mov	ax,4413h
020A:6EB1  2D 4393				sub	ax,4393h
020A:6EB4  48					dec	ax
020A:6EB5  3B D8				cmp	bx,ax
020A:6EB7  58					pop	ax
020A:6EB8  74 2A				jz	loc_1068		; Jump if zero
020A:6EBA			loc_1067:
020A:6EBA  C6 04 00				mov	byte ptr [si],0
020A:6EBD  B8 4413				mov	ax,4413h
020A:6EC0  2D 4393				sub	ax,4393h
020A:6EC3  48					dec	ax
020A:6EC4  2B C3				sub	ax,bx
020A:6EC6  8B D8				mov	bx,ax
020A:6EC8  51					push	cx
020A:6EC9  57					push	di
020A:6ECA  E8 2991				call	sub_145			; (985E)
020A:6ECD  C6 06 4457 00			mov	byte ptr ds:[4457h],0	; (9B68:4457=0)
020A:6ED2  BE 4393				mov	si,4393h
020A:6ED5  8A 04				mov	al,[si]
020A:6ED7  FF 16 4390				call	word ptr ds:[4390h]	; (9B68:4390=0)
020A:6EDB  5F					pop	di
020A:6EDC  59					pop	cx
020A:6EDD  80 3E 4457 00			cmp	byte ptr ds:[4457h],0	; (9B68:4457=0)
020A:6EE2  74 05				je	loc_1069		; Jump if equal
020A:6EE4			loc_1068:
020A:6EE4  B0 01				mov	al,1
020A:6EE6  E9 098C				jmp	loc_1204		; (7875)
020A:6EE9			loc_1069:
020A:6EE9  E9 FDD2		;*		jmp	loc_1037		;*(6CBE)
020A:6EE9  E9 D2 FD				db	0E9h,0D2h,0FDh
020A:6EEC			loc_1070:
020A:6EEC  E9 0986				jmp	loc_1204		; (7875)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 226

020A:6EEF			loc_1071:
020A:6EEF  E9 098A				jmp	loc_1205		; (787C)
020A:6EF2			loc_1072:
020A:6EF2  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:6EF6			loc_1073:
020A:6EF6  80 3E 2A1E 01			cmp	byte ptr ds:[2A1Eh],1	; (9B68:2A1E=0A0h)
020A:6EFB  75 03				jne	loc_1074		; Jump if not equal
020A:6EFD  E9 FDBE		;*		jmp	loc_1037		;*(6CBE)
020A:6EFD  E9 BE FD				db	0E9h,0BEh,0FDh
020A:6F00			loc_1074:
020A:6F00  B8 0015				mov	ax,15h
020A:6F03  8A 1E 2A2B				mov	bl,byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:6F07  F6 E3				mul	bl			; ax = reg * al
020A:6F09  05 0000				add	ax,0
020A:6F0C  8B D8				mov	bx,ax
020A:6F0E  E8 E687				call	sub_83			; (5598)
020A:6F11  73 D9				jnc	loc_1070		; Jump if carry=0
020A:6F13  80 3E 2A1C 01			cmp	byte ptr ds:[2A1Ch],1	; (9B68:2A1C=20h)
020A:6F18  75 03				jne	loc_1075		; Jump if not equal
020A:6F1A  E9 FDA1		;*		jmp	loc_1037		;*(6CBE)
020A:6F1A  E9 A1 FD				db	0E9h,0A1h,0FDh
020A:6F1D			loc_1075:
020A:6F1D  26: 89 17				mov	es:[bx],dx
020A:6F20  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:6F20  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:6F25  72 C8				jc	loc_1071		; Jump if carry Set
020A:6F27  E8 E65E				call	sub_82			; (5588)
020A:6F2A  73 C0				jnc	loc_1070		; Jump if carry=0
020A:6F2C  26: 89 57 02				mov	es:[bx+2],dx
020A:6F30  E8 E8C9				call	sub_86			; (57FC)
020A:6F33  72 BA				jc	loc_1071		; Jump if carry Set
020A:6F35  E8 E650				call	sub_82			; (5588)
020A:6F38  73 B2				jnc	loc_1070		; Jump if carry=0
020A:6F3A  26: 89 57 04				mov	es:[bx+4],dx
020A:6F3E  E8 E8BB				call	sub_86			; (57FC)
020A:6F41  72 AC				jc	loc_1071		; Jump if carry Set
020A:6F43  26: 3B 57 02				cmp	dx,es:[bx+2]
020A:6F47  75 03				jne	loc_1076		; Jump if not equal
020A:6F49  E9 0929				jmp	loc_1204		; (7875)
020A:6F4C			loc_1076:
020A:6F4C  E8 E649				call	sub_83			; (5598)
020A:6F4F  73 9B				jnc	loc_1070		; Jump if carry=0
020A:6F51  26: 89 57 06				mov	es:[bx+6],dx
020A:6F55  89 16 2A40				mov	word ptr ds:[2A40h],dx	; (9B68:2A40=2020h)
020A:6F59  E8 E8A0				call	sub_86			; (57FC)
020A:6F5C  72 91				jc	loc_1071		; Jump if carry Set
020A:6F5E  E8 E637				call	sub_83			; (5598)
020A:6F61  73 89				jnc	loc_1070		; Jump if carry=0
020A:6F63  26: 89 57 08				mov	es:[bx+8],dx
020A:6F67  E8 E892				call	sub_86			; (57FC)
020A:6F6A  72 83				jc	loc_1071		; Jump if carry Set
020A:6F6C  8A 05				mov	al,[di]
020A:6F6E  2C 30				sub	al,30h			; '0'
020A:6F70  3C 05				cmp	al,5
020A:6F72  76 4B				jbe	loc_1079		; Jump if below or =
020A:6F74  8A 15				mov	dl,[di]
020A:6F76  80 E2 DF				and	dl,0DFh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 227

020A:6F79  32 C0				xor	al,al			; Zero register
020A:6F7B  80 FA 41				cmp	dl,41h			; 'A'
020A:6F7E  74 3F				je	loc_1079		; Jump if equal
020A:6F80  FE C0				inc	al
020A:6F82  80 FA 43				cmp	dl,43h			; 'C'
020A:6F85  74 38				je	loc_1079		; Jump if equal
020A:6F87  FE C0				inc	al
020A:6F89  80 FA 44				cmp	dl,44h			; 'D'
020A:6F8C  74 31				je	loc_1079		; Jump if equal
020A:6F8E  FE C0				inc	al
020A:6F90  80 FA 53				cmp	dl,53h			; 'S'
020A:6F93  74 2A				je	loc_1079		; Jump if equal
020A:6F95  FE C0				inc	al
020A:6F97  80 FA 52				cmp	dl,52h			; 'R'
020A:6F9A  74 03				je	loc_1077		; Jump if equal
020A:6F9C  E9 00AF				jmp	loc_1085		; (704E)
020A:6F9F			loc_1077:
020A:6F9F  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:6F9F  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:6FA4  73 03				jnc	loc_1078		; Jump if carry=0
020A:6FA6  E9 00A8				jmp	loc_1086		; (7051)
020A:6FA9			loc_1078:
020A:6FA9  B0 04				mov	al,4
020A:6FAB  8A 15				mov	dl,[di]
020A:6FAD  80 E2 DF				and	dl,0DFh
020A:6FB0  80 FA 41				cmp	dl,41h			; 'A'
020A:6FB3  74 0A				je	loc_1079		; Jump if equal
020A:6FB5  FE C0				inc	al
020A:6FB7  80 FA 43				cmp	dl,43h			; 'C'
020A:6FBA  74 03				je	loc_1079		; Jump if equal
020A:6FBC  E9 008F				jmp	loc_1085		; (704E)
020A:6FBF			loc_1079:
020A:6FBF  B4 01				mov	ah,1
020A:6FC1  26: 89 47 0A				mov	es:[bx+0Ah],ax
020A:6FC5  26: C6 47 0E 00			mov	byte ptr es:[bx+0Eh],0
020A:6FCA			loc_1080:
020A:6FCA  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:6FCA  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:6FCF  73 02				jnc	loc_1081		; Jump if carry=0
020A:6FD1  EB 7E				jmp	short loc_1086		; (7051)
020A:6FD3			loc_1081:
020A:6FD3  8A 15				mov	dl,[di]
020A:6FD5  80 FA 0D				cmp	dl,0Dh
020A:6FD8  74 4D				je	loc_1082		; Jump if equal
020A:6FDA  80 FA 0A				cmp	dl,0Ah
020A:6FDD  74 48				je	loc_1082		; Jump if equal
020A:6FDF  80 FA 3B				cmp	dl,3Bh			; ';'
020A:6FE2  74 43				je	loc_1082		; Jump if equal
020A:6FE4  80 E2 DF				and	dl,0DFh
020A:6FE7  80 FA 55				cmp	dl,55h			; 'U'
020A:6FEA  75 DE				jne	loc_1080		; Jump if not equal
020A:6FEC  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:6FEC  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:6FF1  8A 15				mov	dl,[di]
020A:6FF3  80 E2 DF				and	dl,0DFh
020A:6FF6  80 FA 53				cmp	dl,53h			; 'S'
020A:6FF9  75 CF				jne	loc_1080		; Jump if not equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 228

020A:6FFB  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:6FFB  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:7000  8A 15				mov	dl,[di]
020A:7002  80 E2 DF				and	dl,0DFh
020A:7005  80 FA 45				cmp	dl,45h			; 'E'
020A:7008  75 1D				jne	loc_1082		; Jump if not equal
020A:700A  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:700A  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:700F  8A 15				mov	dl,[di]
020A:7011  80 FA 33				cmp	dl,33h			; '3'
020A:7014  75 11				jne	loc_1082		; Jump if not equal
020A:7016  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:7016  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:701B  8A 15				mov	dl,[di]
020A:701D  80 FA 32				cmp	dl,32h			; '2'
020A:7020  75 05				jne	loc_1082		; Jump if not equal
020A:7022  26: 80 4F 0E 01			or	byte ptr es:[bx+0Eh],1
020A:7027			loc_1082:
020A:7027  3C 03				cmp	al,3
020A:7029  75 12				jne	loc_1083		; Jump if not equal
020A:702B  C6 06 2A26 01			mov	byte ptr ds:[2A26h],1	; (9B68:2A26=20h)
020A:7030  26: 8B 07				mov	ax,es:[bx]
020A:7033  A3 2A4C				mov	word ptr ds:[2A4Ch],ax	; (9B68:2A4C=0E1AAh)
020A:7036  26: 8B 47 04				mov	ax,es:[bx+4]
020A:703A  A3 2A4A				mov	word ptr ds:[2A4Ah],ax	; (9B68:2A4A=0A592h)
020A:703D			loc_1083:
020A:703D  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:7041  80 3E 2A2B FA			cmp	byte ptr ds:[2A2Bh],0FAh	; (9B68:2A2B=0A0h)
020A:7046  72 03				jb	loc_1084		; Jump if below
020A:7048  E9 C804		;*		jmp	loc_376			;*(384F)
020A:7048  E9 04 C8				db	0E9h, 04h,0C8h
020A:704B			loc_1084:
020A:704B  E9 FC70		;*		jmp	loc_1037		;*(6CBE)
020A:704B  E9 70 FC				db	0E9h, 70h,0FCh
020A:704E			loc_1085:
020A:704E  E9 0824				jmp	loc_1204		; (7875)
020A:7051			loc_1086:
020A:7051  E9 0828				jmp	loc_1205		; (787C)
020A:7054			loc_1087:
020A:7054  50					push	ax
020A:7055  53					push	bx
020A:7056  51					push	cx
020A:7057  52					push	dx
020A:7058  56					push	si
020A:7059  57					push	di
020A:705A  55					push	bp
020A:705B  E8 D382				call	sub_46			; (43E0)
020A:705E  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:7064  74 1F				je	loc_1088		; Jump if equal
020A:7066  E8 291F				call	sub_150			; (9988)
020A:7069  2E: 80 3E 4CE7 00			cmp	byte ptr cs:data_526+47h,0	; (020A:4CE7=42h)
020A:706F  75 14				jne	loc_1088		; Jump if not equal
020A:7071  E8 F434				call	sub_92			; (64A8)
020A:7074  E8 2911				call	sub_150			; (9988)
020A:7077  2E: 80 3E 4CE7 00			cmp	byte ptr cs:data_526+47h,0	; (020A:4CE7=42h)
020A:707D  75 06				jne	loc_1088		; Jump if not equal
020A:707F  BB 0002				mov	bx,2
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 229

020A:7082  E9 C8A4		;*		jmp	loc_398			;*(3929)
020A:7082  E9 A4 C8				db	0E9h,0A4h,0C8h
020A:7085			loc_1088:
020A:7085  B4 2A				mov	ah,2Ah			; '*'
020A:7087  E8 135E				call	sub_112			; (83E8)
020A:708A  E8 0FF3				call	sub_103			; (8080)
020A:708D  5D					pop	bp
020A:708E  5F					pop	di
020A:708F  5E					pop	si
020A:7090  5A					pop	dx
020A:7091  59					pop	cx
020A:7092  5B					pop	bx
020A:7093  58					pop	ax
020A:7094  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:7098  EB 00				jmp	short $+2		; delay for I/O
020A:709A  80 3E 4500 01			cmp	byte ptr ds:[4500h],1	; (9B68:4500=0)
020A:709F  75 09				jne	loc_1089		; Jump if not equal
020A:70A1  FE 06 4500				inc	byte ptr ds:[4500h]	; (9B68:4500=0)
020A:70A5  C6 06 38AE 14			mov	byte ptr ds:[38AEh],14h	; (9B68:38AE=0)
020A:70AA			loc_1089:
020A:70AA  E8 E4EB				call	sub_83			; (5598)
020A:70AD  73 3D				jnc	loc_1093		; Jump if carry=0
020A:70AF  80 3E 2A1C 01			cmp	byte ptr ds:[2A1Ch],1	; (9B68:2A1C=20h)
020A:70B4  75 03				jne	loc_1090		; Jump if not equal
020A:70B6  E9 07CE				jmp	loc_1208		; (7887)
020A:70B9			loc_1090:
020A:70B9  89 16 44FA				mov	word ptr ds:[44FAh],dx	; (9B68:44FA=0)
020A:70BD  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:70BD  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:70C2  72 2B				jc	loc_1094		; Jump if carry Set
020A:70C4  E8 E4C1				call	sub_82			; (5588)
020A:70C7  73 23				jnc	loc_1093		; Jump if carry=0
020A:70C9  89 16 44F8				mov	word ptr ds:[44F8h],dx	; (9B68:44F8=0)
020A:70CD			loc_1091:
020A:70CD  BB 0078				mov	bx,78h
020A:70D0  BE 4393				mov	si,4393h
020A:70D3			loc_1092:
020A:70D3  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:70D3  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:70D8  72 15				jc	loc_1094		; Jump if carry Set
020A:70DA  8A 05				mov	al,[di]
020A:70DC  3C 1A				cmp	al,1Ah
020A:70DE  74 12				je	loc_1095		; Jump if equal
020A:70E0  3C 0D				cmp	al,0Dh
020A:70E2  74 0E				je	loc_1095		; Jump if equal
020A:70E4  88 04				mov	[si],al
020A:70E6  46					inc	si
020A:70E7  4B					dec	bx
020A:70E8  75 E9				jnz	loc_1092		; Jump if not zero
020A:70EA  EB 06				jmp	short loc_1095		; (70F2)
020A:70EC			loc_1093:
020A:70EC  E9 0786				jmp	loc_1204		; (7875)
020A:70EF			loc_1094:
020A:70EF  E9 078A				jmp	loc_1205		; (787C)
020A:70F2			loc_1095:
020A:70F2  C7 04 0000				mov	word ptr [si],0
020A:70F6  89 36 44FC				mov	word ptr ds:[44FCh],si	; (9B68:44FC=0)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 230

020A:70FA  57					push	di
020A:70FB  51					push	cx
020A:70FC  BE 4393				mov	si,4393h
020A:70FF			loc_1096:
020A:70FF  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:7102  74 05				je	loc_1097		; Jump if equal
020A:7104  80 3C 09				cmp	byte ptr [si],9
020A:7107  75 0A				jne	loc_1098		; Jump if not equal
020A:7109			loc_1097:
020A:7109  46					inc	si
020A:710A  3B 36 44FC				cmp	si,word ptr ds:[44FCh]	; (9B68:44FC=0)
020A:710E  75 EF				jne	loc_1096		; Jump if not equal
020A:7110  E9 0755				jmp	loc_1202		; (7868)
020A:7113			loc_1098:
020A:7113  8A 14				mov	dl,[si]
020A:7115  80 E2 DF				and	dl,0DFh
020A:7118  8A C2				mov	al,dl
020A:711A  80 3E 4507 00			cmp	byte ptr ds:[4507h],0	; (9B68:4507=0)
020A:711F  74 04				je	loc_1099		; Jump if equal
020A:7121  3C 44				cmp	al,44h			; 'D'
020A:7123  75 07				jne	loc_1100		; Jump if not equal
020A:7125			loc_1099:
020A:7125  46					inc	si
020A:7126  BB 4459				mov	bx,4459h
020A:7129  E8 F000				call	sub_89			; (612C)
020A:712C			loc_1100:
020A:712C  E9 0739				jmp	loc_1202		; (7868)
020A:712F  BF 472B				mov	di,472Bh
020A:7132  A1 44FA				mov	ax,word ptr ds:[44FAh]	; (9B68:44FA=0)
020A:7135  89 05				mov	[di],ax
020A:7137  A1 44F8				mov	ax,word ptr ds:[44F8h]	; (9B68:44F8=0)
020A:713A  89 45 02				mov	[di+2],ax
020A:713D  C6 45 04 40				mov	byte ptr [di+4],40h	; '@'
020A:7141  C6 45 05 02				mov	byte ptr [di+5],2
020A:7145  C6 45 06 00				mov	byte ptr [di+6],0
020A:7149			loc_1101:
020A:7149  9A 16BF:03E4		;*		call	far ptr sub_183		;*(16BF:03E4)
020A:7149  9A E4 03 BF 16			db	 9Ah,0E4h, 03h,0BFh, 16h
020A:714E  72 3E				jc	loc_1104		; Jump if carry Set
020A:7150  46					inc	si
020A:7151  80 FA 46				cmp	dl,46h			; 'F'
020A:7154  75 08				jne	loc_1102		; Jump if not equal
020A:7156  C7 45 07 203F			mov	word ptr [di+7],203Fh
020A:715B  E9 0086				jmp	loc_1108		; (71E4)
020A:715E			loc_1102:
020A:715E  BB 4466				mov	bx,4466h
020A:7161  E8 EFC8				call	sub_89			; (612C)
020A:7164			loc_1103:
020A:7164  E9 0701				jmp	loc_1202		; (7868)
020A:7167  E8 E61A				call	sub_85			; (5784)
020A:716A  72 F8				jc	loc_1103		; Jump if carry Set
020A:716C  88 55 06				mov	[di+6],dl
020A:716F  C6 06 394F 01			mov	byte ptr ds:[394Fh],1	; (9B68:394F=0A4h)
020A:7174  EB D3				jmp	short loc_1101		; (7149)
020A:7176  80 4D 05 10				or	byte ptr [di+5],10h
020A:717A  EB CD				jmp	short loc_1101		; (7149)
020A:717C  80 4D 05 30				or	byte ptr [di+5],30h	; '0'
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 231

020A:7180  EB C7				jmp	short loc_1101		; (7149)
020A:7182  80 4D 05 20				or	byte ptr [di+5],20h	; ' '
020A:7186  EB C1				jmp	short loc_1101		; (7149)
020A:7188  80 65 04 BF				and	byte ptr [di+4],0BFh
020A:718C  EB BB				jmp	short loc_1101		; (7149)
020A:718E			loc_1104:
020A:718E  57					push	di
020A:718F  83 C7 07				add	di,7
020A:7192  9A 16BF:0EE0		;*		call	far ptr sub_194		;*(16BF:0EE0)
020A:7192  9A E0 0E BF 16			db	 9Ah,0E0h, 0Eh,0BFh, 16h
020A:7197  5F					pop	di
020A:7198  73 17				jnc	loc_1106		; Jump if carry=0
020A:719A  C6 06 14AC 01			mov	byte ptr ds:[14ACh],1	; (9B68:14AC=0E0h)
020A:719F  80 65 05 FC				and	byte ptr [di+5],0FCh
020A:71A3  80 3E 14AD 02			cmp	byte ptr ds:[14ADh],2	; (9B68:14AD=0E3h)
020A:71A8  73 04				jae	loc_1105		; Jump if above or =
020A:71AA  80 4D 05 01				or	byte ptr [di+5],1
020A:71AE			loc_1105:
020A:71AE  E9 0681				jmp	loc_1198		; (7832)
020A:71B1			loc_1106:
020A:71B1  57					push	di
020A:71B2  8B 45 07				mov	ax,[di+7]
020A:71B5  0D 6060				or	ax,6060h
020A:71B8  3D 7473				cmp	ax,7473h
020A:71BB  75 1B				jne	loc_1107		; Jump if not equal
020A:71BD  8B 45 09				mov	ax,[di+9]
020A:71C0  0D 6060				or	ax,6060h
020A:71C3  3D 7261				cmp	ax,7261h
020A:71C6  75 10				jne	loc_1107		; Jump if not equal
020A:71C8  8B 45 0B				mov	ax,[di+0Bh]
020A:71CB  0D 0060				or	ax,60h
020A:71CE  3D 2074				cmp	ax,2074h
020A:71D1  75 05				jne	loc_1107		; Jump if not equal
020A:71D3  C6 06 3BD9 01			mov	byte ptr ds:[3BD9h],1	; (9B68:3BD9=0)
020A:71D8			loc_1107:
020A:71D8  5F					pop	di
020A:71D9  B8 0016				mov	ax,16h
020A:71DC  9A 16BF:0F40		;*		call	far ptr sub_195		;*(16BF:0F40)
020A:71DC  9A 40 0F BF 16			db	 9Ah, 40h, 0Fh,0BFh, 16h
020A:71E1  E9 064E				jmp	loc_1198		; (7832)
020A:71E4			loc_1108:
020A:71E4  C6 45 04 5F				mov	byte ptr [di+4],5Fh	; '_'
020A:71E8  8A 5C 01				mov	bl,[si+1]
020A:71EB  80 E3 DF				and	bl,0DFh
020A:71EE  56					push	si
020A:71EF  BE 4206				mov	si,4206h
020A:71F2  32 ED				xor	ch,ch			; Zero register
020A:71F4  8A 0E 42B0				mov	cl,byte ptr ds:[42B0h]	; (9B68:42B0=0)
  
020A:71F8			locloop_1109:
020A:71F8  3B 04				cmp	ax,[si]
020A:71FA  75 0D				jne	loc_1110		; Jump if not equal
020A:71FC  80 7C 02 20				cmp	byte ptr [si+2],20h	; ' '
020A:7200  74 10				je	loc_1111		; Jump if equal
020A:7202  3A 5C 02				cmp	bl,[si+2]
020A:7205  75 02				jne	loc_1110		; Jump if not equal
020A:7207  EB 09				jmp	short loc_1111		; (7212)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 232

020A:7209			loc_1110:
020A:7209  83 C6 05				add	si,5
020A:720C  E2 EA				loop	locloop_1109		; Loop if cx > 0
  
020A:720E  5E					pop	si
020A:720F  E9 FF52				jmp	loc_1103		; (7164)
020A:7212			loc_1111:
020A:7212  8B 54 03				mov	dx,[si+3]
020A:7215  5E					pop	si
020A:7216  88 55 09				mov	[di+9],dl
020A:7219  80 FE 01				cmp	dh,1
020A:721C  75 03				jne	loc_1112		; Jump if not equal
020A:721E  E9 0119				jmp	loc_1136		; (733A)
020A:7221			loc_1112:
020A:7221  80 FE 03				cmp	dh,3
020A:7224  75 03				jne	loc_1113		; Jump if not equal
020A:7226  E9 00C8				jmp	loc_1129		; (72F1)
020A:7229			loc_1113:
020A:7229  80 FE 04				cmp	dh,4
020A:722C  75 03				jne	loc_1114		; Jump if not equal
020A:722E  E9 00E0				jmp	loc_1132		; (7311)
020A:7231			loc_1114:
020A:7231  80 FE 05				cmp	dh,5
020A:7234  74 22				je	loc_1117		; Jump if equal
020A:7236  80 FE 06				cmp	dh,6
020A:7239  74 03				je	loc_1115		; Jump if equal
020A:723B  E9 015B				jmp	loc_1139		; (7399)
020A:723E			loc_1115:
020A:723E  C6 45 05 02				mov	byte ptr [di+5],2
020A:7242  B8 0016				mov	ax,16h
020A:7245  57					push	di
020A:7246  9A 16BF:0F40		;*		call	far ptr sub_195		;*(16BF:0F40)
020A:7246  9A 40 0F BF 16			db	 9Ah, 40h, 0Fh,0BFh, 16h
020A:724B  5F					pop	di
020A:724C  80 7D 05 02				cmp	byte ptr [di+5],2
020A:7250  74 03				je	loc_1116		; Jump if equal
020A:7252  E9 05DD				jmp	loc_1198		; (7832)
020A:7255			loc_1116:
020A:7255  E9 05E2				jmp	loc_1199		; (783A)
020A:7258			loc_1117:
020A:7258  C7 45 0A 0000			mov	word ptr [di+0Ah],0
020A:725D  C6 45 0C 00				mov	byte ptr [di+0Ch],0
020A:7261  C7 45 0D FFFF			mov	word ptr [di+0Dh],0FFFFh
020A:7266  C6 45 0F FF				mov	byte ptr [di+0Fh],0FFh
020A:726A			loc_1118:
020A:726A  8A 04				mov	al,[si]
020A:726C  3C 3D				cmp	al,3Dh			; '='
020A:726E  74 09				je	loc_1120		; Jump if equal
020A:7270  3C 00				cmp	al,0
020A:7272  74 03				je	loc_1119		; Jump if equal
020A:7274  46					inc	si
020A:7275  EB F3				jmp	short loc_1118		; (726A)
020A:7277			loc_1119:
020A:7277  EB 75				jmp	short loc_1128		; (72EE)
020A:7279			loc_1120:
020A:7279  46					inc	si
020A:727A			loc_1121:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 233

020A:727A  8A 04				mov	al,[si]
020A:727C  8A E0				mov	ah,al
020A:727E  3C 00				cmp	al,0
020A:7280  74 6C				je	loc_1128		; Jump if equal
020A:7282  3C 20				cmp	al,20h			; ' '
020A:7284  74 65				je	loc_1127		; Jump if equal
020A:7286  3C 09				cmp	al,9
020A:7288  74 61				je	loc_1127		; Jump if equal
020A:728A  24 5F				and	al,5Fh			; '_'
020A:728C  3C 41				cmp	al,41h			; 'A'
020A:728E  72 5E				jb	loc_1128		; Jump if below
020A:7290  3C 5A				cmp	al,5Ah			; 'Z'
020A:7292  77 5A				ja	loc_1128		; Jump if above
020A:7294  80 FC 5A				cmp	ah,5Ah			; 'Z'
020A:7297  76 2B				jbe	loc_1124		; Jump if below or =
020A:7299  80 FC 70				cmp	ah,70h			; 'p'
020A:729C  77 11				ja	loc_1123		; Jump if above
020A:729E  80 EC 61				sub	ah,61h			; 'a'
020A:72A1  BB 8000				mov	bx,8000h
020A:72A4  8A CC				mov	cl,ah
020A:72A6  D3 CB				ror	bx,cl			; Rotate
020A:72A8  F7 D3				not	bx
020A:72AA  21 5D 0D				and	[di+0Dh],bx
020A:72AD			loc_1122:
020A:72AD  EB 3C				jmp	short loc_1127		; (72EB)
020A:72AF			loc_1123:
020A:72AF  80 FC 74				cmp	ah,74h			; 't'
020A:72B2  76 F9				jbe	loc_1122		; Jump if below or =
020A:72B4  80 EC 75				sub	ah,75h			; 'u'
020A:72B7  B3 80				mov	bl,80h
020A:72B9  8A CC				mov	cl,ah
020A:72BB  D2 CB				ror	bl,cl			; Rotate
020A:72BD  F6 D3				not	bl
020A:72BF  20 5D 0F				and	[di+0Fh],bl
020A:72C2  EB 27				jmp	short loc_1127		; (72EB)
020A:72C4			loc_1124:
020A:72C4  80 FC 50				cmp	ah,50h			; 'P'
020A:72C7  77 0F				ja	loc_1126		; Jump if above
020A:72C9  80 EC 41				sub	ah,41h			; 'A'
020A:72CC  BB 8000				mov	bx,8000h
020A:72CF  8A CC				mov	cl,ah
020A:72D1  D3 CB				ror	bx,cl			; Rotate
020A:72D3  09 5D 0A				or	[di+0Ah],bx
020A:72D6			loc_1125:
020A:72D6  EB 13				jmp	short loc_1127		; (72EB)
020A:72D8			loc_1126:
020A:72D8  80 FC 54				cmp	ah,54h			; 'T'
020A:72DB  76 F9				jbe	loc_1125		; Jump if below or =
020A:72DD  80 EC 55				sub	ah,55h			; 'U'
020A:72E0  B3 80				mov	bl,80h
020A:72E2  8A CC				mov	cl,ah
020A:72E4  D2 CB				ror	bl,cl			; Rotate
020A:72E6  08 5D 0C				or	[di+0Ch],bl
020A:72E9  EB 00				jmp	short loc_1127		; (72EB)
020A:72EB			loc_1127:
020A:72EB  46					inc	si
020A:72EC  EB 8C				jmp	short loc_1121		; (727A)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 234

020A:72EE			loc_1128:
020A:72EE  E9 0541				jmp	loc_1198		; (7832)
020A:72F1			loc_1129:
020A:72F1  46					inc	si
020A:72F2  46					inc	si
020A:72F3  46					inc	si
020A:72F4  81 3C 3233				cmp	word ptr [si],3233h
020A:72F8  74 09				je	loc_1130		; Jump if equal
020A:72FA  81 3C 3631				cmp	word ptr [si],3631h
020A:72FE  74 0A				je	loc_1131		; Jump if equal
020A:7300  E9 052F				jmp	loc_1198		; (7832)
020A:7303			loc_1130:
020A:7303  C6 45 09 05				mov	byte ptr [di+9],5
020A:7307  E9 0528				jmp	loc_1198		; (7832)
020A:730A			loc_1131:
020A:730A  C6 45 09 04				mov	byte ptr [di+9],4
020A:730E  E9 0521				jmp	loc_1198		; (7832)
020A:7311			loc_1132:
020A:7311  46					inc	si
020A:7312  B9 0005				mov	cx,5
  
020A:7315			locloop_1133:
020A:7315  9A 16BF:117C		;*		call	far ptr sub_203		;*(16BF:117C)
020A:7315  9A 7C 11 BF 16			db	 9Ah, 7Ch, 11h,0BFh, 16h
020A:731A  72 09				jc	loc_1134		; Jump if carry Set
020A:731C  3B 36 44FC				cmp	si,word ptr ds:[44FCh]	; (9B68:44FC=0)
020A:7320  77 15				ja	loc_1135		; Jump if above
020A:7322  46					inc	si
020A:7323  E2 F0				loop	locloop_1133		; Loop if cx > 0
  
020A:7325			loc_1134:
020A:7325  E8 E45C				call	sub_85			; (5784)
020A:7328  72 0D				jc	loc_1135		; Jump if carry Set
020A:732A  89 55 0C				mov	[di+0Ch],dx
020A:732D  E8 E454				call	sub_85			; (5784)
020A:7330  72 05				jc	loc_1135		; Jump if carry Set
020A:7332  89 55 0A				mov	[di+0Ah],dx
020A:7335  EB 62				jmp	short loc_1139		; (7399)
020A:7337			loc_1135:
020A:7337  E9 052E				jmp	loc_1202		; (7868)
020A:733A			loc_1136:
020A:733A  F6 45 09 40				test	byte ptr [di+9],40h	; '@'
020A:733E  75 24				jnz	loc_1137		; Jump if not zero
020A:7340  80 7D 09 08				cmp	byte ptr [di+9],8
020A:7344  75 23				jne	loc_1138		; Jump if not equal
020A:7346  46					inc	si
020A:7347  8A 34				mov	dh,[si]
020A:7349  80 E6 5F				and	dh,5Fh			; '_'
020A:734C  80 FE 53				cmp	dh,53h			; 'S'
020A:734F  74 13				je	loc_1137		; Jump if equal
020A:7351  FE 45 09				inc	byte ptr [di+9]
020A:7354  80 FE 4C				cmp	dh,4Ch			; 'L'
020A:7357  74 0B				je	loc_1137		; Jump if equal
020A:7359  FE 45 09				inc	byte ptr [di+9]
020A:735C  80 FE 44				cmp	dh,44h			; 'D'
020A:735F  74 03				je	loc_1137		; Jump if equal
020A:7361  E9 0504				jmp	loc_1202		; (7868)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 235

020A:7364			loc_1137:
020A:7364  C7 45 0A FFFF			mov	word ptr [di+0Ah],0FFFFh
020A:7369			loc_1138:
020A:7369  46					inc	si
020A:736A  E8 E353				call	sub_84			; (56C0)
020A:736D  72 2D				jc	loc_1140		; Jump if carry Set
020A:736F  89 55 0A				mov	[di+0Ah],dx
020A:7372  F6 45 09 10				test	byte ptr [di+9],10h
020A:7376  74 21				jz	loc_1139		; Jump if zero
020A:7378  80 3C 3A				cmp	byte ptr [si],3Ah	; ':'
020A:737B  75 25				jne	loc_1141		; Jump if not equal
020A:737D  46					inc	si
020A:737E  E8 E403				call	sub_85			; (5784)
020A:7381  72 1F				jc	loc_1141		; Jump if carry Set
020A:7383  89 55 0C				mov	[di+0Ch],dx
020A:7386  C6 45 0E 00				mov	byte ptr [di+0Eh],0
020A:738A  46					inc	si
020A:738B  3B 36 44FC				cmp	si,word ptr ds:[44FCh]	; (9B68:44FC=0)
020A:738F  73 08				jae	loc_1139		; Jump if above or =
020A:7391  E8 E3F0				call	sub_85			; (5784)
020A:7394  72 03				jc	loc_1139		; Jump if carry Set
020A:7396  88 55 0E				mov	[di+0Eh],dl
020A:7399			loc_1139:
020A:7399  E9 0496				jmp	loc_1198		; (7832)
020A:739C			loc_1140:
020A:739C  F6 45 09 48				test	byte ptr [di+9],48h	; 'H'
020A:73A0  75 F7				jnz	loc_1139		; Jump if not zero
020A:73A2			loc_1141:
020A:73A2  E9 04C3				jmp	loc_1202		; (7868)
020A:73A5  BF 472B				mov	di,472Bh
020A:73A8  A1 44FA				mov	ax,word ptr ds:[44FAh]	; (9B68:44FA=0)
020A:73AB  89 05				mov	[di],ax
020A:73AD  A1 44F8				mov	ax,word ptr ds:[44F8h]	; (9B68:44F8=0)
020A:73B0  89 45 02				mov	[di+2],ax
020A:73B3  C6 45 05 06				mov	byte ptr [di+5],6
020A:73B7  C7 45 08 0001			mov	word ptr [di+8],1
020A:73BC  C7 06 44FE 0000			mov	word ptr ds:[44FEh],0	; (9B68:44FE=0)
020A:73C2  C7 45 06 0000			mov	word ptr [di+6],0
020A:73C7  8A 04				mov	al,[si]
020A:73C9  46					inc	si
020A:73CA  BB 4476				mov	bx,4476h
020A:73CD  E8 ED5C				call	sub_89			; (612C)
020A:73D0  E9 0495				jmp	loc_1202		; (7868)
020A:73D3  C6 45 04 60				mov	byte ptr [di+4],60h	; '`'
020A:73D7  EB 45				jmp	short loc_1142		; (741E)
020A:73D9  C6 45 04 41				mov	byte ptr [di+4],41h	; 'A'
020A:73DD  EB 3F				jmp	short loc_1142		; (741E)
020A:73DF  C6 45 04 44				mov	byte ptr [di+4],44h	; 'D'
020A:73E3  C7 45 08 0004			mov	word ptr [di+8],4
020A:73E8  EB 34				jmp	short loc_1142		; (741E)
020A:73EA  80 3E 4507 00			cmp	byte ptr ds:[4507h],0	; (9B68:4507=0)
020A:73EF  75 49				jne	loc_1145		; Jump if not equal
020A:73F1  C6 06 4507 01			mov	byte ptr ds:[4507h],1	; (9B68:4507=0)
020A:73F6  C7 06 450D 0000			mov	word ptr ds:[450Dh],0	; (9B68:450D=0)
020A:73FC  C7 06 450F 0000			mov	word ptr ds:[450Fh],0	; (9B68:450F=0)
020A:7402  EB 1A				jmp	short loc_1142		; (741E)
020A:7404  C6 45 04 42				mov	byte ptr [di+4],42h	; 'B'
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 236

020A:7408  C7 45 08 0002			mov	word ptr [di+8],2
020A:740D  EB 0F				jmp	short loc_1142		; (741E)
020A:740F  80 3E 4507 00			cmp	byte ptr ds:[4507h],0	; (9B68:4507=0)
020A:7414  75 24				jne	loc_1145		; Jump if not equal
020A:7416  C6 45 04 41				mov	byte ptr [di+4],41h	; 'A'
020A:741A  80 4D 07 10				or	byte ptr [di+7],10h
020A:741E			loc_1142:
020A:741E  9A 16BF:03E4		;*		call	far ptr sub_183		;*(16BF:03E4)
020A:741E  9A E4 03 BF 16			db	 9Ah,0E4h, 03h,0BFh, 16h
020A:7423  73 03				jnc	loc_1143		; Jump if carry=0
020A:7425  E9 00EB				jmp	loc_1151		; (7513)
020A:7428			loc_1143:
020A:7428  80 3E 4507 01			cmp	byte ptr ds:[4507h],1	; (9B68:4507=0)
020A:742D  75 04				jne	loc_1144		; Jump if not equal
020A:742F  3C 52				cmp	al,52h			; 'R'
020A:7431  75 07				jne	loc_1145		; Jump if not equal
020A:7433			loc_1144:
020A:7433  46					inc	si
020A:7434  BB 4489				mov	bx,4489h
020A:7437  E8 ECF2				call	sub_89			; (612C)
020A:743A			loc_1145:
020A:743A  E9 042B				jmp	loc_1202		; (7868)
020A:743D  8A 45 04				mov	al,[di+4]
020A:7440  24 3F				and	al,3Fh			; '?'
020A:7442  3C 02				cmp	al,2
020A:7444  77 F4				ja	loc_1145		; Jump if above
020A:7446  3C 00				cmp	al,0
020A:7448  75 04				jne	loc_1146		; Jump if not equal
020A:744A  80 4D 04 01				or	byte ptr [di+4],1
020A:744E			loc_1146:
020A:744E  80 4D 04 20				or	byte ptr [di+4],20h	; ' '
020A:7452  EB CA				jmp	short loc_1142		; (741E)
020A:7454  80 4D 07 40				or	byte ptr [di+7],40h	; '@'
020A:7458  80 4D 07 20				or	byte ptr [di+7],20h	; ' '
020A:745C  EB C0				jmp	short loc_1142		; (741E)
020A:745E  80 4D 07 80				or	byte ptr [di+7],80h
020A:7462  EB BA				jmp	short loc_1142		; (741E)
020A:7464  8A 45 04				mov	al,[di+4]
020A:7467  24 3F				and	al,3Fh			; '?'
020A:7469  3C 02				cmp	al,2
020A:746B  75 48				jne	loc_1150		; Jump if not equal
020A:746D  8B C6				mov	ax,si
020A:746F  40					inc	ax
020A:7470  3B 06 44FC				cmp	ax,word ptr ds:[44FCh]	; (9B68:44FC=0)
020A:7474  73 3F				jae	loc_1150		; Jump if above or =
020A:7476  8B 04				mov	ax,[si]
020A:7478  25 DFDF				and	ax,0DFDFh
020A:747B  80 65 04 C0				and	byte ptr [di+4],0C0h
020A:747F  80 4D 04 10				or	byte ptr [di+4],10h
020A:7483  C7 45 08 0002			mov	word ptr [di+8],2
020A:7488  80 FC 4E				cmp	ah,4Eh			; 'N'
020A:748B  74 0E				je	loc_1147		; Jump if equal
020A:748D  80 FC 46				cmp	ah,46h			; 'F'
020A:7490  75 23				jne	loc_1150		; Jump if not equal
020A:7492  80 4D 04 01				or	byte ptr [di+4],1
020A:7496  C7 45 08 0004			mov	word ptr [di+8],4
020A:749B			loc_1147:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 237

020A:749B  3C 53				cmp	al,53h			; 'S'
020A:749D  74 12				je	loc_1149		; Jump if equal
020A:749F  3C 4C				cmp	al,4Ch			; 'L'
020A:74A1  75 06				jne	loc_1148		; Jump if not equal
020A:74A3  80 4D 04 02				or	byte ptr [di+4],2
020A:74A7  EB 08				jmp	short loc_1149		; (74B1)
020A:74A9			loc_1148:
020A:74A9  3C 44				cmp	al,44h			; 'D'
020A:74AB  75 08				jne	loc_1150		; Jump if not equal
020A:74AD  80 4D 04 04				or	byte ptr [di+4],4
020A:74B1			loc_1149:
020A:74B1  46					inc	si
020A:74B2  E9 FF69				jmp	loc_1142		; (741E)
020A:74B5			loc_1150:
020A:74B5  E9 03B0				jmp	loc_1202		; (7868)
020A:74B8  E8 E2C9				call	sub_85			; (5784)
020A:74BB  72 F8				jc	loc_1150		; Jump if carry Set
020A:74BD  81 E2 03FF				and	dx,3FFh
020A:74C1  89 55 06				mov	[di+6],dx
020A:74C4  C6 06 394F 01			mov	byte ptr ds:[394Fh],1	; (9B68:394F=0A4h)
020A:74C9  E9 FF52				jmp	loc_1142		; (741E)
020A:74CC  E8 E2B5				call	sub_85			; (5784)
020A:74CF  72 E4				jc	loc_1150		; Jump if carry Set
020A:74D1  89 16 44FE				mov	word ptr ds:[44FEh],dx	; (9B68:44FE=0)
020A:74D5  E9 FF46				jmp	loc_1142		; (741E)
020A:74D8  57					push	di
020A:74D9  BF 472B				mov	di,472Bh
020A:74DC  A1 44FA				mov	ax,word ptr ds:[44FAh]	; (9B68:44FA=0)
020A:74DF  89 05				mov	[di],ax
020A:74E1  A1 44F8				mov	ax,word ptr ds:[44F8h]	; (9B68:44F8=0)
020A:74E4  89 45 02				mov	[di+2],ax
020A:74E7  FF 75 04				push	word ptr [di+4]
020A:74EA  FF 75 05				push	word ptr [di+5]
020A:74ED  FF 75 06				push	word ptr [di+6]
020A:74F0  C6 45 04 5F				mov	byte ptr [di+4],5Fh	; '_'
020A:74F4  C6 45 05 00				mov	byte ptr [di+5],0
020A:74F8  C6 45 06 00				mov	byte ptr [di+6],0
020A:74FC  E8 33B1				call	sub_157			; (A8B0)
020A:74FF  8F 45 04				pop	word ptr [di+4]
020A:7502  8F 45 05				pop	word ptr [di+5]
020A:7505  8F 45 06				pop	word ptr [di+6]
020A:7508  5F					pop	di
020A:7509  E9 FF12				jmp	loc_1142		; (741E)
020A:750C  80 65 04 BF				and	byte ptr [di+4],0BFh
020A:7510  E9 FF0B				jmp	loc_1142		; (741E)
020A:7513			loc_1151:
020A:7513  80 3E 4507 01			cmp	byte ptr ds:[4507h],1	; (9B68:4507=0)
020A:7518  75 1A				jne	loc_1154		; Jump if not equal
020A:751A  FE 06 4507				inc	byte ptr ds:[4507h]	; (9B68:4507=0)
020A:751E  A1 44FE				mov	ax,word ptr ds:[44FEh]	; (9B68:44FE=0)
020A:7521  3D 0100				cmp	ax,100h
020A:7524  72 02				jb	loc_1152		; Jump if below
020A:7526  B0 FF				mov	al,0FFh
020A:7528			loc_1152:
020A:7528  0A C0				or	al,al			; Zero ?
020A:752A  75 02				jnz	loc_1153		; Jump if not zero
020A:752C  FE C0				inc	al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 238

020A:752E			loc_1153:
020A:752E  A2 4508				mov	byte ptr ds:[4508h],al	; (9B68:4508=0)
020A:7531  E9 030B				jmp	loc_1200		; (783F)
020A:7534			loc_1154:
020A:7534  83 3E 44FE 00			cmp	word ptr ds:[44FEh],0	; (9B68:44FE=0)
020A:7539  74 03				je	loc_1155		; Jump if equal
020A:753B  E9 0093				jmp	loc_1166		; (75D1)
020A:753E			loc_1155:
020A:753E  FF 06 44FE				inc	word ptr ds:[44FEh]	; (9B68:44FE=0)
020A:7542  8A 45 04				mov	al,[di+4]
020A:7545  24 3F				and	al,3Fh			; '?'
020A:7547  3C 20				cmp	al,20h			; ' '
020A:7549  74 03				je	loc_1156		; Jump if equal
020A:754B  E9 0083				jmp	loc_1166		; (75D1)
020A:754E			loc_1156:
020A:754E  51					push	cx
020A:754F  52					push	dx
020A:7550  56					push	si
020A:7551  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:7556  06					push	es
020A:7557  8B 75 02				mov	si,[di+2]
020A:755A  8B 05				mov	ax,[di]
020A:755C  56					push	si
020A:755D  BE 28EF				mov	si,28EFh
020A:7560  E8 22F2				call	sub_142			; (9855)
020A:7563			loc_1157:
020A:7563  81 FE 0000				cmp	si,0
020A:7567  74 45				je	loc_1163		; Jump if equal
020A:7569  83 EE 15				sub	si,15h
020A:756C  26: 39 04				cmp	es:[si],ax
020A:756F  75 F2				jne	loc_1157		; Jump if not equal
020A:7571  26: 8B 4C 04				mov	cx,es:[si+4]
020A:7575  5E					pop	si
020A:7576  8E C0				mov	es,ax
020A:7578  3B CE				cmp	cx,si
020A:757A  76 33				jbe	loc_1164		; Jump if below or =
020A:757C  2B CE				sub	cx,si
020A:757E  41					inc	cx
020A:757F  75 01				jnz	loc_1158		; Jump if not zero
020A:7581  49					dec	cx
020A:7582			loc_1158:
020A:7582  8B D1				mov	dx,cx
020A:7584  BB 47DD				mov	bx,47DDh
  
020A:7587			locloop_1159:
020A:7587  26: 8A 04				mov	al,es:[si]
020A:758A  0A C0				or	al,al			; Zero ?
020A:758C  74 12				jz	loc_1161		; Jump if zero
020A:758E  3C 24				cmp	al,24h			; '$'
020A:7590  74 0E				je	loc_1161		; Jump if equal
020A:7592  D7					xlat				; al=[al+[bx]] table
020A:7593  0A C0				or	al,al			; Zero ?
020A:7595  74 04				jz	loc_1160		; Jump if zero
020A:7597  3B CA				cmp	cx,dx
020A:7599  75 06				jne	loc_1162		; Jump if not equal
020A:759B			loc_1160:
020A:759B  46					inc	si
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 239

020A:759C  E2 E9				loop	locloop_1159		; Loop if cx > 0
  
020A:759E  EB 01				jmp	short loc_1162		; (75A1)
020A:75A0			loc_1161:
020A:75A0  49					dec	cx
020A:75A1			loc_1162:
020A:75A1  2B D1				sub	dx,cx
020A:75A3  83 FA 00				cmp	dx,0
020A:75A6  74 07				je	loc_1164		; Jump if equal
020A:75A8  89 16 44FE				mov	word ptr ds:[44FEh],dx	; (9B68:44FE=0)
020A:75AC  EB 01				jmp	short loc_1164		; (75AF)
020A:75AE			loc_1163:
020A:75AE  5E					pop	si
020A:75AF			loc_1164:
020A:75AF  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:75B4  5A					pop	dx
020A:75B5  8E C2				mov	es,dx
020A:75B7  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:75BC  5A					pop	dx
020A:75BD  75 0A				jnz	loc_1165		; Jump if not zero
020A:75BF  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:75C4  74 03				je	loc_1165		; Jump if equal
020A:75C6  E8 256B				call	sub_151			; (9B34)
020A:75C9			loc_1165:
020A:75C9  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:75CE  5E					pop	si
020A:75CF  5A					pop	dx
020A:75D0  59					pop	cx
020A:75D1			loc_1166:
020A:75D1  8B 45 08				mov	ax,[di+8]
020A:75D4  F7 26 44FE				mul	word ptr ds:[44FEh]	; (9B68:44FE=0) ax = data * ax
020A:75D8  72 04				jc	loc_1167		; Jump if carry Set
020A:75DA  0B C0				or	ax,ax			; Zero ?
020A:75DC  75 03				jnz	loc_1168		; Jump if not zero
020A:75DE			loc_1167:
020A:75DE  E9 FED4				jmp	loc_1150		; (74B5)
020A:75E1			loc_1168:
020A:75E1  89 45 08				mov	[di+8],ax
020A:75E4  A3 450F				mov	word ptr ds:[450Fh],ax	; (9B68:450F=0)
020A:75E7  01 06 450D				add	word ptr ds:[450Dh],ax	; (9B68:450D=0)
020A:75EB  57					push	di
020A:75EC  83 C7 0A				add	di,0Ah
020A:75EF  9A 16BF:0EE0		;*		call	far ptr sub_194		;*(16BF:0EE0)
020A:75EF  9A E0 0E BF 16			db	 9Ah,0E0h, 0Eh,0BFh, 16h
020A:75F4  5F					pop	di
020A:75F5  73 17				jnc	loc_1170		; Jump if carry=0
020A:75F7  C6 06 14AC 01			mov	byte ptr ds:[14ACh],1	; (9B68:14AC=0E0h)
020A:75FC  80 65 05 FC				and	byte ptr [di+5],0FCh
020A:7600  80 3E 14AD 02			cmp	byte ptr ds:[14ADh],2	; (9B68:14AD=0E3h)
020A:7605  73 04				jae	loc_1169		; Jump if above or =
020A:7607  80 4D 05 01				or	byte ptr [di+5],1
020A:760B			loc_1169:
020A:760B  E9 0231				jmp	loc_1200		; (783F)
020A:760E			loc_1170:
020A:760E  80 3E 4507 00			cmp	byte ptr ds:[4507h],0	; (9B68:4507=0)
020A:7613  75 0A				jne	loc_1171		; Jump if not equal
020A:7615  B8 0019				mov	ax,19h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 240

020A:7618  9A 16BF:0F40		;*		call	far ptr sub_195		;*(16BF:0F40)
020A:7618  9A 40 0F BF 16			db	 9Ah, 40h, 0Fh,0BFh, 16h
020A:761D  EB 00				jmp	short loc_1171		; (761F)
020A:761F			loc_1171:
020A:761F  E9 021D				jmp	loc_1200		; (783F)
020A:7622			loc_1172:
020A:7622  80 3D 20				cmp	byte ptr [di],20h	; ' '
020A:7625  74 05				je	loc_1173		; Jump if equal
020A:7627  80 3D 09				cmp	byte ptr [di],9
020A:762A  75 12				jne	loc_1175		; Jump if not equal
020A:762C			loc_1173:
020A:762C  A1 44F8				mov	ax,word ptr ds:[44F8h]	; (9B68:44F8=0)
020A:762F  03 06 450F				add	ax,word ptr ds:[450Fh]	; (9B68:450F=0)
020A:7633  72 06				jc	loc_1174		; Jump if carry Set
020A:7635  A3 44F8				mov	word ptr ds:[44F8h],ax	; (9B68:44F8=0)
020A:7638  E9 FA92				jmp	loc_1091		; (70CD)
020A:763B			loc_1174:
020A:763B  E9 022A				jmp	loc_1202		; (7868)
020A:763E			loc_1175:
020A:763E  FF 0E 38AC				dec	word ptr ds:[38ACh]	; (9B68:38AC=152h)
020A:7642  57					push	di
020A:7643  51					push	cx
020A:7644  80 3E 4508 01			cmp	byte ptr ds:[4508h],1	; (9B68:4508=0)
020A:7649  75 03				jne	loc_1176		; Jump if not equal
020A:764B  E9 013C				jmp	loc_1192		; (778A)
020A:764E			loc_1176:
020A:764E  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (B9E8:0006=720h)
020A:7653  BB 377F				mov	bx,377Fh
020A:7656  26: 8A 45 05				mov	al,es:[di+5]
020A:765A  25 000F				and	ax,0Fh
020A:765D  D7					xlat				; al=[al+[bx]] table
020A:765E  0A C0				or	al,al			; Zero ?
020A:7660  75 04				jnz	loc_1177		; Jump if not zero
020A:7662  26: 8A 45 06				mov	al,es:[di+6]
020A:7666			loc_1177:
020A:7666  03 F8				add	di,ax
020A:7668  89 3E 4509				mov	word ptr ds:[4509h],di	; (9B68:4509=0)
020A:766C  2B 3E 450B				sub	di,word ptr ds:[450Bh]	; (9B68:450B=0)
020A:7670  A0 4508				mov	al,byte ptr ds:[4508h]	; (9B68:4508=0)
020A:7673  FE C8				dec	al
020A:7675  32 E4				xor	ah,ah			; Zero register
020A:7677  52					push	dx
020A:7678  F7 E7				mul	di			; dx:ax = reg * ax
020A:767A  83 FA 00				cmp	dx,0
020A:767D  5A					pop	dx
020A:767E  74 03				jz	loc_1178		; Jump if zero
020A:7680  E9 01EB				jmp	loc_1203		; (786E)
020A:7683			loc_1178:
020A:7683  8B C8				mov	cx,ax
020A:7685  53					push	bx
020A:7686  26: 8B 1E 0000			mov	bx,word ptr es:[0]	; (B9E8:0000=720h)
020A:768B  03 D9				add	bx,cx
020A:768D  5B					pop	bx
020A:768E  73 03				jnc	loc_1179		; Jump if carry=0
020A:7690  E9 01DB				jmp	loc_1203		; (786E)
020A:7693			loc_1179:
020A:7693  26: 8B 36 0000			mov	si,word ptr es:[0]	; (B9E8:0000=720h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 241

020A:7698  26: 01 0E 0000			add	word ptr es:[0],cx	; (B9E8:0000=720h)
020A:769D  4E					dec	si
020A:769E  8B FE				mov	di,si
020A:76A0  03 F9				add	di,cx
020A:76A2  8B CE				mov	cx,si
020A:76A4  2B 0E 4509				sub	cx,word ptr ds:[4509h]	; (9B68:4509=0)
020A:76A8  41					inc	cx
020A:76A9  1E					push	ds
020A:76AA  06					push	es
020A:76AB  1F					pop	ds
020A:76AC  FD					std				; Set direction flag
020A:76AD  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:76AF  FC					cld				; Clear direction
020A:76B0  1F					pop	ds
020A:76B1  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (B9E8:0006=720h)
020A:76B6  BB 377F				mov	bx,377Fh
020A:76B9  26: 8A 45 05				mov	al,es:[di+5]
020A:76BD  25 000F				and	ax,0Fh
020A:76C0  D7					xlat				; al=[al+[bx]] table
020A:76C1  0A C0				or	al,al			; Zero ?
020A:76C3  75 04				jnz	loc_1180		; Jump if not zero
020A:76C5  26: 8A 45 06				mov	al,es:[di+6]
020A:76C9			loc_1180:
020A:76C9  03 F8				add	di,ax
020A:76CB  89 3E 4511				mov	word ptr ds:[4511h],di	; (9B68:4511=0)
020A:76CF  8B 36 450B				mov	si,word ptr ds:[450Bh]	; (9B68:450B=0)
020A:76D3  B2 02				mov	dl,2
020A:76D5  06					push	es
020A:76D6  1F					pop	ds
020A:76D7			loc_1181:
020A:76D7  1E					push	ds
020A:76D8  E8 216E				call	sub_140			; (9849)
020A:76DB  80 3E 4508 01			cmp	byte ptr ds:[4508h],1	; (B9E8:4508=20h)
020A:76E0  1F					pop	ds
020A:76E1  77 03				ja	loc_1182		; Jump if above
020A:76E3  E9 00A4				jmp	loc_1192		; (778A)
020A:76E6			loc_1182:
020A:76E6  FC					cld				; Clear direction
020A:76E7  A5					movsw				; Mov [si] to es:[di]
020A:76E8  AD					lodsw				; String [si] to ax
020A:76E9  8B D8				mov	bx,ax
020A:76EB  8A C2				mov	al,dl
020A:76ED  FE C8				dec	al
020A:76EF  32 E4				xor	ah,ah			; Zero register
020A:76F1  52					push	dx
020A:76F2  1E					push	ds
020A:76F3  E8 2153				call	sub_140			; (9849)
020A:76F6  F7 26 450D				mul	word ptr ds:[450Dh]	; (B9E8:450D=2007h) ax = data * ax
020A:76FA  1F					pop	ds
020A:76FB  5A					pop	dx
020A:76FC  72 04				jc	loc_1183		; Jump if carry Set
020A:76FE  03 C3				add	ax,bx
020A:7700  73 06				jnc	loc_1184		; Jump if carry=0
020A:7702			loc_1183:
020A:7702  E8 2144				call	sub_140			; (9849)
020A:7705  E9 0160				jmp	loc_1202		; (7868)
020A:7708			loc_1184:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 242

020A:7708  AB					stosw				; Store ax to es:[di]
020A:7709  A5					movsw				; Mov [si] to es:[di]
020A:770A  AD					lodsw				; String [si] to ax
020A:770B  25 FC00				and	ax,0FC00h
020A:770E  AB					stosw				; Store ax to es:[di]
020A:770F  A5					movsw				; Mov [si] to es:[di]
020A:7710  F6 44 FB 02				test	byte ptr [si-5],2
020A:7714  75 10				jnz	loc_1185		; Jump if not zero
020A:7716  F6 44 FB 01				test	byte ptr [si-5],1
020A:771A  74 4E				jz	loc_1190		; Jump if zero
020A:771C  83 C7 02				add	di,2
020A:771F  83 C6 02				add	si,2
020A:7722  FE CA				dec	dl
020A:7724  EB 44				jmp	short loc_1190		; (776A)
020A:7726			loc_1185:
020A:7726  B9 000F				mov	cx,0Fh
020A:7729  81 3C 203F				cmp	word ptr [si],203Fh
020A:772D  74 29				je	loc_1189		; Jump if equal
020A:772F  B9 000D				mov	cx,0Dh
  
020A:7732			locloop_1186:
020A:7732  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:7735  74 03				je	loc_1187		; Jump if equal
020A:7737  A4					movsb				; Mov [si] to es:[di]
020A:7738  E2 F8				loop	locloop_1186		; Loop if cx > 0
  
020A:773A			loc_1187:
020A:773A  8A C2				mov	al,dl
020A:773C  FE C8				dec	al
020A:773E  9A 16BF:0000		;*		call	far ptr sub_169		;*(16BF:0000)
020A:773E  9A 00 00 BF 16			db	 9Ah, 00h, 00h,0BFh, 16h
020A:7743  80 FB 30				cmp	bl,30h			; '0'
020A:7746  75 10				jne	loc_1189		; Jump if not equal
020A:7748  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:774B  74 07				je	loc_1188		; Jump if equal
020A:774D  A4					movsb				; Mov [si] to es:[di]
020A:774E  88 3D				mov	[di],bh
020A:7750  47					inc	di
020A:7751  46					inc	si
020A:7752  EB 16				jmp	short loc_1190		; (776A)
020A:7754			loc_1188:
020A:7754  8A DF				mov	bl,bh
020A:7756  B7 20				mov	bh,20h			; ' '
020A:7758			loc_1189:
020A:7758  89 1D				mov	[di],bx
020A:775A  83 C7 02				add	di,2
020A:775D  83 C6 02				add	si,2
020A:7760  E3 08				jcxz	loc_1190		; Jump if cx=0
020A:7762  C6 05 20				mov	byte ptr [di],20h	; ' '
020A:7765  47					inc	di
020A:7766  46					inc	si
020A:7767  49					dec	cx
020A:7768  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:776A			loc_1190:
020A:776A  1E					push	ds
020A:776B  E8 20DB				call	sub_140			; (9849)
020A:776E  3B 36 4509				cmp	si,word ptr ds:[4509h]	; (B9E8:4509=2007h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 243

020A:7772  1F					pop	ds
020A:7773  73 03				jnc	loc_1191		; Jump if carry=0
020A:7775  E9 FF6E				jmp	loc_1182		; (76E6)
020A:7778			loc_1191:
020A:7778  FE C2				inc	dl
020A:777A  1E					push	ds
020A:777B  E8 20CB				call	sub_140			; (9849)
020A:777E  8B 36 450B				mov	si,word ptr ds:[450Bh]	; (B9E8:450B=2007h)
020A:7782  FE 0E 4508				dec	byte ptr ds:[4508h]	; (B9E8:4508=20h)
020A:7786  1F					pop	ds
020A:7787  E9 FF4D				jmp	loc_1181		; (76D7)
020A:778A			loc_1192:
020A:778A  E8 20BC				call	sub_140			; (9849)
020A:778D  C6 06 4507 00			mov	byte ptr ds:[4507h],0	; (B9E8:4507=7)
020A:7792  59					pop	cx
020A:7793  5F					pop	di
020A:7794  9A 16BF:1198		;*		call	far ptr sub_204		;*(16BF:1198)
020A:7794  9A 98 11 BF 16			db	 9Ah, 98h, 11h,0BFh, 16h
020A:7799  FF 06 38AC				inc	word ptr ds:[38ACh]	; (B9E8:38AC=720h)
020A:779D  E9 F5DE				jmp	loc_1044		; (6D7E)
020A:77A0  E8 20A6				call	sub_140			; (9849)
020A:77A3  59					pop	cx
020A:77A4  5F					pop	di
020A:77A5  E9 00C0				jmp	loc_1202		; (7868)
020A:77A8  BF 472B				mov	di,472Bh
020A:77AB  A1 44FA				mov	ax,word ptr ds:[44FAh]	; (B9E8:44FA=720h)
020A:77AE  89 05				mov	[di],ax
020A:77B0  A1 44F8				mov	ax,word ptr ds:[44F8h]	; (B9E8:44F8=720h)
020A:77B3  89 45 02				mov	[di+2],ax
020A:77B6  C6 45 04 40				mov	byte ptr [di+4],40h	; '@'
020A:77BA  C6 45 05 0A				mov	byte ptr [di+5],0Ah
020A:77BE  C7 45 06 0000			mov	word ptr [di+6],0
020A:77C3  57					push	di
020A:77C4  B9 0032				mov	cx,32h
020A:77C7  83 C7 09				add	di,9
020A:77CA  B0 00				mov	al,0
  
020A:77CC			locloop_1193:
020A:77CC  88 05				mov	[di],al
020A:77CE  47					inc	di
020A:77CF  E2 FB				loop	locloop_1193		; Loop if cx > 0
  
020A:77D1  5F					pop	di
020A:77D2			loc_1194:
020A:77D2  9A 16BF:03E4		;*		call	far ptr sub_183		;*(16BF:03E4)
020A:77D2  9A E4 03 BF 16			db	 9Ah,0E4h, 03h,0BFh, 16h
020A:77D7  72 2F				jc	loc_1195		; Jump if carry Set
020A:77D9  46					inc	si
020A:77DA  BB 44A5				mov	bx,44A5h
020A:77DD  E8 E94C				call	sub_89			; (612C)
020A:77E0  E9 0085				jmp	loc_1202		; (7868)
020A:77E3  80 4D 04 80				or	byte ptr [di+4],80h
020A:77E7  EB E9				jmp	short loc_1194		; (77D2)
020A:77E9  E8 DF98				call	sub_85			; (5784)
020A:77EC  72 7A				jc	loc_1202		; Jump if carry Set
020A:77EE  88 55 06				mov	[di+6],dl
020A:77F1  C6 06 394F 01			mov	byte ptr ds:[394Fh],1	; (B9E8:394F=7)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 244

020A:77F6  EB DA				jmp	short loc_1194		; (77D2)
020A:77F8  80 4D 04 08				or	byte ptr [di+4],8
020A:77FC  C6 45 32 38				mov	byte ptr [di+32h],38h	; '8'
020A:7800  EB D0				jmp	short loc_1194		; (77D2)
020A:7802  80 65 04 BF				and	byte ptr [di+4],0BFh
020A:7806  EB CA				jmp	short loc_1194		; (77D2)
020A:7808			loc_1195:
020A:7808  57					push	di
020A:7809  83 C7 3B				add	di,3Bh
020A:780C  9A 16BF:0EE0		;*		call	far ptr sub_194		;*(16BF:0EE0)
020A:780C  9A E0 0E BF 16			db	 9Ah,0E0h, 0Eh,0BFh, 16h
020A:7811  5F					pop	di
020A:7812  73 16				jnc	loc_1197		; Jump if carry=0
020A:7814  C6 06 14AC 01			mov	byte ptr ds:[14ACh],1	; (B9E8:14AC=20h)
020A:7819  80 65 05 FC				and	byte ptr [di+5],0FCh
020A:781D  80 3E 14AD 02			cmp	byte ptr ds:[14ADh],2	; (B9E8:14AD=7)
020A:7822  73 04				jae	loc_1196		; Jump if above or =
020A:7824  80 4D 05 01				or	byte ptr [di+5],1
020A:7828			loc_1196:
020A:7828  EB 08				jmp	short loc_1198		; (7832)
020A:782A			loc_1197:
020A:782A  B8 004A				mov	ax,4Ah
020A:782D  9A 16BF:0F40		;*		call	far ptr sub_195		;*(16BF:0F40)
020A:782D  9A 40 0F BF 16			db	 9Ah, 40h, 0Fh,0BFh, 16h
020A:7832			loc_1198:
020A:7832  E8 307B				call	sub_157			; (A8B0)
020A:7835  9A 16BF:1198		;*		call	far ptr sub_204		;*(16BF:1198)
020A:7835  9A 98 11 BF 16			db	 9Ah, 98h, 11h,0BFh, 16h
020A:783A			loc_1199:
020A:783A  59					pop	cx
020A:783B  5F					pop	di
020A:783C  E9 F47F		;*		jmp	loc_1037		;*(6CBE)
020A:783C  E9 7F F4				db	0E9h, 7Fh,0F4h
020A:783F			loc_1200:
020A:783F  80 3E 4507 02			cmp	byte ptr ds:[4507h],2	; (B9E8:4507=7)
020A:7844  75 06				jne	loc_1201		; Jump if not equal
020A:7846  FE 06 4507				inc	byte ptr ds:[4507h]	; (B9E8:4507=7)
020A:784A  EB EE				jmp	short loc_1199		; (783A)
020A:784C			loc_1201:
020A:784C  E8 3061				call	sub_157			; (A8B0)
020A:784F  9A 16BF:1198		;*		call	far ptr sub_204		;*(16BF:1198)
020A:784F  9A 98 11 BF 16			db	 9Ah, 98h, 11h,0BFh, 16h
020A:7854  80 3E 4507 03			cmp	byte ptr ds:[4507h],3	; (B9E8:4507=7)
020A:7859  75 DF				jne	loc_1199		; Jump if not equal
020A:785B  FE 06 4507				inc	byte ptr ds:[4507h]	; (B9E8:4507=7)
020A:785F  26: A1 0006				mov	ax,word ptr es:[6]	; (D233:0006=0)
020A:7863  A3 450B				mov	word ptr ds:[450Bh],ax	; (B9E8:450B=2007h)
020A:7866  EB D2				jmp	short loc_1199		; (783A)
020A:7868			loc_1202:
020A:7868  59					pop	cx
020A:7869  5F					pop	di
020A:786A  B0 01				mov	al,1
020A:786C  EB 07				jmp	short loc_1204		; (7875)
020A:786E			loc_1203:
020A:786E  59					pop	cx
020A:786F  5F					pop	di
020A:7870  E8 1FD6				call	sub_140			; (9849)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 245

020A:7873  EB 0F				jmp	short loc_1207		; (7884)
020A:7875			loc_1204:
020A:7875  0B C0				or	ax,ax			; Zero ?
020A:7877  74 03				jz	loc_1205		; Jump if zero
020A:7879  E9 BFF3				jmp	loc_380			; (386F)
020A:787C			loc_1205:
020A:787C  80 FB 00				cmp	bl,0
020A:787F  74 06				je	loc_1208		; Jump if equal
020A:7881			loc_1206:
020A:7881  E9 C04C				jmp	loc_388			; (38D0)
020A:7884			loc_1207:
020A:7884  E9 C05B				jmp	loc_390			; (38E2)
020A:7887			loc_1208:
020A:7887  8B 1E 37EA				mov	bx,word ptr ds:[37EAh]	; (B9E8:37EA=720h)
020A:788B  E8 47A2				call	$+47A5h
020A:788E  B6 00				mov	dh,0
020A:7890  E8 0A01				call	sub_109			; (8294)
020A:7893  E8 0B96				call	sub_113			; (842C)
020A:7896  E8 1B67				call	sub_132			; (9400)
020A:7899  E8 0D38				call	sub_114			; (85D4)
020A:789C  1E					push	ds
020A:789D  07					pop	es
020A:789E  B4 2B				mov	ah,2Bh			; '+'
020A:78A0  E8 0B45				call	sub_112			; (83E8)
020A:78A3  E8 07DA				call	sub_103			; (8080)
020A:78A6  C6 06 2A1E 00			mov	byte ptr ds:[2A1Eh],0	; (B9E8:2A1E=20h)
020A:78AB  80 3E 394F 01			cmp	byte ptr ds:[394Fh],1	; (B9E8:394F=7)
020A:78B0  74 03				je	loc_1209		; Jump if equal
020A:78B2  E9 022F				jmp	loc_1242		; (7AE4)
020A:78B5			loc_1209:
020A:78B5  B9 0040				mov	cx,40h
020A:78B8  BE 37AA				mov	si,37AAh
020A:78BB  BF 3905				mov	di,3905h
020A:78BE  FC					cld				; Clear direction
020A:78BF  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:78C1  C6 06 38B7 00			mov	byte ptr ds:[38B7h],0	; (B9E8:38B7=7)
020A:78C6  BF 3905				mov	di,3905h
020A:78C9  B0 00				mov	al,0
020A:78CB  9A 16BF:04A4		;*		call	far ptr sub_185		;*(16BF:04A4)
020A:78CB  9A A4 04 BF 16			db	 9Ah,0A4h, 04h,0BFh, 16h
020A:78D0  83 EF 03				sub	di,3
020A:78D3  C6 05 72				mov	byte ptr [di],72h	; 'r'
020A:78D6  47					inc	di
020A:78D7  C7 05 6D65				mov	word ptr [di],6D65h
020A:78DB  C6 06 386E 00			mov	byte ptr ds:[386Eh],0	; (B9E8:386E=20h)
020A:78E0  BA 3905				mov	dx,3905h
020A:78E3  80 3E 3906 3A			cmp	byte ptr ds:[3906h],3Ah	; (B9E8:3906=20h) ':'
020A:78E8  74 03				je	loc_1210		; Jump if equal
020A:78EA  BA 3903				mov	dx,3903h
020A:78ED			loc_1210:
020A:78ED  B4 3D				mov	ah,3Dh			; '='
020A:78EF  B0 00				mov	al,0
020A:78F1  B9 0000				mov	cx,0
020A:78F4  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:78F6  73 03				jnc	loc_1211		; Jump if carry=0
020A:78F8  E9 01EC				jmp	loc_1243		; (7AE7)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 246

020A:78FB			loc_1211:
020A:78FB  A3 37EA				mov	word ptr ds:[37EAh],ax	; (B9E8:37EA=720h)
020A:78FE  C6 06 38AE FF			mov	byte ptr ds:[38AEh],0FFh	; (B9E8:38AE=20h)
020A:7903  C7 06 38AC 0001			mov	word ptr ds:[38ACh],1	; (B9E8:38AC=720h)
020A:7909  C7 06 3945 0000			mov	word ptr ds:[3945h],0	; (B9E8:3945=2007h)
020A:790F  C7 06 3947 0000			mov	word ptr ds:[3947h],0	; (B9E8:3947=2007h)
020A:7915  E8 1F40				call	sub_143			; (9858)
020A:7918			loc_1212:
020A:7918  80 3E 386E 01			cmp	byte ptr ds:[386Eh],1	; (B9E8:386E=20h)
020A:791D  74 1F				je	loc_1214		; Jump if equal
020A:791F  B4 3F				mov	ah,3Fh			; '?'
020A:7921  8B 1E 37EA				mov	bx,word ptr ds:[37EAh]	; (B9E8:37EA=720h)
020A:7925  B9 0080				mov	cx,80h
020A:7928  BA 37EE				mov	dx,37EEh
020A:792B  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, cx=bytes, to ds:dx
020A:792D  73 05				jnc	loc_1213		; Jump if carry=0
020A:792F  B3 0E				mov	bl,0Eh
020A:7931  E9 019B				jmp	loc_1239		; (7ACF)
020A:7934			loc_1213:
020A:7934  3D 0080				cmp	ax,80h
020A:7937  74 44				je	loc_1217		; Jump if equal
020A:7939  3D 0000				cmp	ax,0
020A:793C  75 03				jne	loc_1215		; Jump if not equal
020A:793E			loc_1214:
020A:793E  E9 018E				jmp	loc_1239		; (7ACF)
020A:7941			loc_1215:
020A:7941  C6 06 386E 01			mov	byte ptr ds:[386Eh],1	; (B9E8:386E=20h)
020A:7946  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:794B  06					push	es
020A:794C  E8 1F0F				call	sub_145			; (985E)
020A:794F  BF 37EE				mov	di,37EEh
020A:7952  03 F8				add	di,ax
020A:7954  B9 0080				mov	cx,80h
020A:7957  2B C8				sub	cx,ax
020A:7959  B0 20				mov	al,20h			; ' '
020A:795B  FC					cld				; Clear direction
020A:795C  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:795E  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7963  5A					pop	dx
020A:7964  8E C2				mov	es,dx
020A:7966  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:796B  5A					pop	dx
020A:796C  75 0A				jnz	loc_1216		; Jump if not zero
020A:796E  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:7973  74 03				je	loc_1216		; Jump if equal
020A:7975  E8 21BC				call	sub_151			; (9B34)
020A:7978			loc_1216:
020A:7978  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:797D			loc_1217:
020A:797D  BF 37EE				mov	di,37EEh
020A:7980  B9 0080				mov	cx,80h
020A:7983			loc_1218:
020A:7983  80 3E 38AE FF			cmp	byte ptr ds:[38AEh],0FFh	; (9B68:38AE=0)
020A:7988  75 06				jne	loc_1219		; Jump if not equal
020A:798A  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:798E  EB 48				jmp	short loc_1223		; (79D8)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 247

020A:7990			loc_1219:
020A:7990  B0 0A				mov	al,0Ah
020A:7992  51					push	cx
020A:7993  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:7998  06					push	es
020A:7999  E8 1EC2				call	sub_145			; (985E)
020A:799C  FC					cld				; Clear direction
020A:799D  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:799F  9C					pushf				; Push flags
020A:79A0  5D					pop	bp
020A:79A1  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:79A6  5A					pop	dx
020A:79A7  8E C2				mov	es,dx
020A:79A9  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:79AE  5A					pop	dx
020A:79AF  75 0A				jnz	loc_1220		; Jump if not zero
020A:79B1  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:79B6  74 03				je	loc_1220		; Jump if equal
020A:79B8  E8 2179				call	sub_151			; (9B34)
020A:79BB			loc_1220:
020A:79BB  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:79C0  58					pop	ax
020A:79C1  55					push	bp
020A:79C2  2B C1				sub	ax,cx
020A:79C4  01 06 3947				add	word ptr ds:[3947h],ax	; (9B68:3947=0)
020A:79C8  73 04				jnc	loc_1221		; Jump if carry=0
020A:79CA  FF 06 3945				inc	word ptr ds:[3945h]	; (9B68:3945=0)
020A:79CE			loc_1221:
020A:79CE  9D					popf				; Pop flags
020A:79CF  74 03				jz	loc_1222		; Jump if zero
020A:79D1  E9 FF44				jmp	loc_1212		; (7918)
020A:79D4			loc_1222:
020A:79D4  FF 06 38AC				inc	word ptr ds:[38ACh]	; (9B68:38AC=152h)
020A:79D8			loc_1223:
020A:79D8  81 FF 386E				cmp	di,386Eh
020A:79DC  72 14				jb	loc_1225		; Jump if below
020A:79DE  9A 16BF:0230		;*		call	far ptr sub_178		;*(16BF:0230)
020A:79DE  9A 30 02 BF 16			db	 9Ah, 30h, 02h,0BFh, 16h
020A:79E3  FF 0E 3947				dec	word ptr ds:[3947h]	; (9B68:3947=0)
020A:79E7  73 04				jnc	loc_1224		; Jump if carry=0
020A:79E9  FF 0E 3945				dec	word ptr ds:[3945h]	; (9B68:3945=0)
020A:79ED			loc_1224:
020A:79ED  73 03				jnc	loc_1225		; Jump if carry=0
020A:79EF  E9 00DD				jmp	loc_1239		; (7ACF)
020A:79F2			loc_1225:
020A:79F2  80 3D 26				cmp	byte ptr [di],26h	; '&'
020A:79F5  74 1B				je	loc_1227		; Jump if equal
020A:79F7  F6 06 38AE 01			test	byte ptr ds:[38AEh],1	; (9B68:38AE=0)
020A:79FC  75 34				jnz	loc_1230		; Jump if not zero
020A:79FE  80 3D 20				cmp	byte ptr [di],20h	; ' '
020A:7A01  74 0C				je	loc_1226		; Jump if equal
020A:7A03  80 3D 09				cmp	byte ptr [di],9
020A:7A06  74 07				je	loc_1226		; Jump if equal
020A:7A08  80 3D 0D				cmp	byte ptr [di],0Dh
020A:7A0B  74 02				je	loc_1226		; Jump if equal
020A:7A0D  EB 06				jmp	short loc_1228		; (7A15)
020A:7A0F			loc_1226:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 248

020A:7A0F  E9 FF71				jmp	loc_1218		; (7983)
020A:7A12			loc_1227:
020A:7A12  E9 00C0				jmp	loc_1241		; (7AD5)
020A:7A15			loc_1228:
020A:7A15  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:7A19  BE 0000				mov	si,0
020A:7A1C  80 3E 38AE 01			cmp	byte ptr ds:[38AEh],1	; (9B68:38AE=0)
020A:7A21  74 16				je	loc_1231		; Jump if equal
020A:7A23  BE 1000				mov	si,1000h
020A:7A26  80 3E 38AE 03			cmp	byte ptr ds:[38AEh],3	; (9B68:38AE=0)
020A:7A2B  74 03				je	loc_1229		; Jump if equal
020A:7A2D  BE 13FC				mov	si,13FCh
020A:7A30			loc_1229:
020A:7A30  EB 45				jmp	short loc_1235		; (7A77)
020A:7A32			loc_1230:
020A:7A32  80 3E 38AE 01			cmp	byte ptr ds:[38AEh],1	; (9B68:38AE=0)
020A:7A37  75 3E				jne	loc_1235		; Jump if not equal
020A:7A39			loc_1231:
020A:7A39  80 3D 0D				cmp	byte ptr [di],0Dh
020A:7A3C  74 34				je	loc_1233		; Jump if equal
020A:7A3E  80 3D 20				cmp	byte ptr [di],20h	; ' '
020A:7A41  74 2F				je	loc_1233		; Jump if equal
020A:7A43  A1 3945				mov	ax,word ptr ds:[3945h]	; (9B68:3945=0)
020A:7A46  26: 89 04				mov	es:[si],ax
020A:7A49  46					inc	si
020A:7A4A  46					inc	si
020A:7A4B  A1 3947				mov	ax,word ptr ds:[3947h]	; (9B68:3947=0)
020A:7A4E  26: 89 04				mov	es:[si],ax
020A:7A51  E8 DABC				call	sub_80			; (5510)
020A:7A54  73 1F				jnc	loc_1234		; Jump if carry=0
020A:7A56  8A 05				mov	al,[di]
020A:7A58  24 5F				and	al,5Fh			; '_'
020A:7A5A  3C 4E				cmp	al,4Eh			; 'N'
020A:7A5C  74 10				je	loc_1232		; Jump if equal
020A:7A5E  46					inc	si
020A:7A5F  46					inc	si
020A:7A60  FF 06 3949				inc	word ptr ds:[3949h]	; (9B68:3949=0)
020A:7A64  81 3E 3949 0400			cmp	word ptr ds:[3949h],400h	; (9B68:3949=0)
020A:7A6A  75 06				jne	loc_1233		; Jump if not equal
020A:7A6C  EB 64				jmp	short loc_1240		; (7AD2)
020A:7A6E			loc_1232:
020A:7A6E  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:7A72			loc_1233:
020A:7A72  E9 FF0E				jmp	loc_1218		; (7983)
020A:7A75			loc_1234:
020A:7A75  EB 58				jmp	short loc_1239		; (7ACF)
020A:7A77			loc_1235:
020A:7A77  80 3D 0D				cmp	byte ptr [di],0Dh
020A:7A7A  74 50				je	loc_1238		; Jump if equal
020A:7A7C  80 3D 20				cmp	byte ptr [di],20h	; ' '
020A:7A7F  74 4B				je	loc_1238		; Jump if equal
020A:7A81  A1 3945				mov	ax,word ptr ds:[3945h]	; (9B68:3945=0)
020A:7A84  26: 89 04				mov	es:[si],ax
020A:7A87  46					inc	si
020A:7A88  46					inc	si
020A:7A89  A1 3947				mov	ax,word ptr ds:[3947h]	; (9B68:3947=0)
020A:7A8C  26: 89 04				mov	es:[si],ax
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 249

020A:7A8F  E8 DA7E				call	sub_80			; (5510)
020A:7A92  73 3B				jnc	loc_1239		; Jump if carry=0
020A:7A94  8A 05				mov	al,[di]
020A:7A96  24 5F				and	al,5Fh			; '_'
020A:7A98  3C 4E				cmp	al,4Eh			; 'N'
020A:7A9A  74 25				je	loc_1237		; Jump if equal
020A:7A9C  46					inc	si
020A:7A9D  46					inc	si
020A:7A9E  80 3E 38AE 05			cmp	byte ptr ds:[38AEh],5	; (9B68:38AE=0)
020A:7AA3  74 0E				je	loc_1236		; Jump if equal
020A:7AA5  FF 06 394B				inc	word ptr ds:[394Bh]	; (9B68:394B=0)
020A:7AA9  81 3E 394B 00FE			cmp	word ptr ds:[394Bh],0FEh	; (9B68:394B=0)
020A:7AAF  76 1B				jbe	loc_1238		; Jump if below or =
020A:7AB1  EB 1F				jmp	short loc_1240		; (7AD2)
020A:7AB3			loc_1236:
020A:7AB3  FF 06 394D				inc	word ptr ds:[394Dh]	; (9B68:394D=3000h)
020A:7AB7  81 3E 394D 00FF			cmp	word ptr ds:[394Dh],0FFh	; (9B68:394D=3000h)
020A:7ABD  76 0D				jbe	loc_1238		; Jump if below or =
020A:7ABF  EB 11				jmp	short loc_1240		; (7AD2)
020A:7AC1			loc_1237:
020A:7AC1  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:7AC5  80 3E 38AE 06			cmp	byte ptr ds:[38AEh],6	; (9B68:38AE=0)
020A:7ACA  74 09				je	loc_1241		; Jump if equal
020A:7ACC			loc_1238:
020A:7ACC  E9 FEB4				jmp	loc_1218		; (7983)
020A:7ACF			loc_1239:
020A:7ACF  E9 BED3				jmp	loc_400			; (39A5)
020A:7AD2			loc_1240:
020A:7AD2  E9 BEE6		;*		jmp	loc_401			;*(39BB)
020A:7AD2  E9 E6 BE				db	0E9h,0E6h,0BEh
020A:7AD5			loc_1241:
020A:7AD5  C6 06 38B7 01			mov	byte ptr ds:[38B7h],1	; (9B68:38B7=0)
020A:7ADA  8B 1E 37EA				mov	bx,word ptr ds:[37EAh]	; (9B68:37EA=3002h)
020A:7ADE  E8 454F				call	$+4552h
020A:7AE1  E8 1D7A				call	sub_145			; (985E)
020A:7AE4			loc_1242:
020A:7AE4  E9 D58E				jmp	loc_707			; (5075)
020A:7AE7			loc_1243:
020A:7AE7  E8 08A2				call	sub_110			; (838C)
020A:7AEA  A0 11E8				mov	al,byte ptr ds:[11E8h]	; (9B68:11E8=0A5h)
020A:7AED  88 47 52				mov	[bx+52h],al
020A:7AF0  B4 1A				mov	ah,1Ah
020A:7AF2  E8 08F3				call	sub_112			; (83E8)
020A:7AF5  E8 0588				call	sub_103			; (8080)
020A:7AF8  9A 16BF:0340		;*		call	far ptr sub_180		;*(16BF:0340)
020A:7AF8  9A 40 03 BF 16			db	 9Ah, 40h, 03h,0BFh, 16h
020A:7AFD  E8 08B4				call	sub_111			; (83B4)
020A:7B00  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:7B04  E9 D56E				jmp	loc_707			; (5075)
020A:7B07  0009[00]				db	9 dup (0)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_98		proc	near
020A:7B10  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (020A:263E=0Eh)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 250

020A:7B15  74 03				je	loc_1244		; Jump if equal
020A:7B17  E9 0085				jmp	loc_1249		; (7B9F)
020A:7B1A			loc_1244:
020A:7B1A  53					push	bx
020A:7B1B  51					push	cx
020A:7B1C  52					push	dx
020A:7B1D  57					push	di
020A:7B1E  56					push	si
020A:7B1F  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:7B24  06					push	es
020A:7B25  E8 1D36				call	sub_145			; (985E)
020A:7B28  FE C8				dec	al
020A:7B2A  B1 06				mov	cl,6
020A:7B2C  F6 E1				mul	cl			; ax = reg * al
020A:7B2E  BE 4950				mov	si,4950h
020A:7B31  03 F0				add	si,ax
020A:7B33  8B 44 04				mov	ax,[si+4]
020A:7B36  8B 14				mov	dx,[si]
020A:7B38			loc_1245:
020A:7B38  50					push	ax
020A:7B39  B9 2850				mov	cx,2850h
020A:7B3C  81 E9 27CA				sub	cx,27CAh
020A:7B40  BF 2965				mov	di,2965h
020A:7B43  B0 20				mov	al,20h			; ' '
020A:7B45  FC					cld				; Clear direction
020A:7B46  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:7B48  8B FA				mov	di,dx
020A:7B4A  B9 2850				mov	cx,2850h
020A:7B4D  81 E9 27EA				sub	cx,27EAh
020A:7B51  8B D9				mov	bx,cx
020A:7B53  B0 0A				mov	al,0Ah
020A:7B55  FC					cld				; Clear direction
020A:7B56  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:7B58  2B D9				sub	bx,cx
020A:7B5A  8B CB				mov	cx,bx
020A:7B5C  8B F2				mov	si,dx
020A:7B5E  BF 2985				mov	di,2985h
020A:7B61  49					dec	cx
020A:7B62  E3 03				jcxz	loc_1246		; Jump if cx=0
020A:7B64  FC					cld				; Clear direction
020A:7B65  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7B67			loc_1246:
020A:7B67  46					inc	si
020A:7B68  BA 2965				mov	dx,2965h
020A:7B6B  E8 003A				call	sub_99			; (7BA8)
020A:7B6E  8B D6				mov	dx,si
020A:7B70  58					pop	ax
020A:7B71  48					dec	ax
020A:7B72  75 C4				jnz	loc_1245		; Jump if not zero
020A:7B74  F8					clc				; Clear carry flag
020A:7B75  EB 02				jmp	short loc_1247		; (7B79)
020A:7B77  58					pop	ax
020A:7B78  F9					stc				; Set carry flag
020A:7B79			loc_1247:
020A:7B79  72 25				jc	loc_1250		; Jump if carry Set
020A:7B7B  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7B80  5A					pop	dx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 251

020A:7B81  8E C2				mov	es,dx
020A:7B83  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:7B88  5A					pop	dx
020A:7B89  75 0A				jnz	loc_1248		; Jump if not zero
020A:7B8B  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:7B90  74 03				je	loc_1248		; Jump if equal
020A:7B92  E8 1F9F				call	sub_151			; (9B34)
020A:7B95			loc_1248:
020A:7B95  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7B9A  5E					pop	si
020A:7B9B  5F					pop	di
020A:7B9C  5A					pop	dx
020A:7B9D  59					pop	cx
020A:7B9E  5B					pop	bx
020A:7B9F			loc_1249:
020A:7B9F  C3					retn
020A:7BA0			loc_1250:
020A:7BA0  83 C4 10				add	sp,10h
020A:7BA3  E9 BD60				jmp	loc_394			; (3906)
				sub_98		endp
  
020A:7BA6  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_99		proc	near
020A:7BA8  F7 06 42CE 0008			test	word ptr ds:[42CEh],8	; (9B68:42CE=0)
020A:7BAE  74 04				jz	loc_1251		; Jump if zero
020A:7BB0  B3 00				mov	bl,0
020A:7BB2  F8					clc				; Clear carry flag
020A:7BB3  C3					retn
020A:7BB4			loc_1251:
020A:7BB4  E8 0181				call	sub_102			; (7D38)
020A:7BB7  90					nop
				sub_99		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_100		proc	near
020A:7BB8  51					push	cx
020A:7BB9  57					push	di
020A:7BBA  56					push	si
020A:7BBB  E8 1CA0				call	sub_145			; (985E)
020A:7BBE  BF 2850				mov	di,2850h
020A:7BC1  81 EF 27CA				sub	di,27CAh
020A:7BC5  4F					dec	di
020A:7BC6  03 FA				add	di,dx
020A:7BC8  B9 2850				mov	cx,2850h
020A:7BCB  81 E9 27CA				sub	cx,27CAh
020A:7BCF  49					dec	cx
020A:7BD0  B0 20				mov	al,20h			; ' '
020A:7BD2  FD					std				; Set direction flag
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 252

020A:7BD3  F3/ AE				repe	scasb			; Rep zf=1+cx >0 Scan es:[di] for al
020A:7BD5  FC					cld				; Clear direction
020A:7BD6  47					inc	di
020A:7BD7  47					inc	di
020A:7BD8  C7 05 0A0D				mov	word ptr [di],0A0Dh
020A:7BDC  83 C1 04				add	cx,4
020A:7BDF  F7 06 42CE 0010			test	word ptr ds:[42CEh],10h	; (9B68:42CE=0)
020A:7BE5  74 15				jz	loc_1253		; Jump if zero
020A:7BE7  80 3E 2EBD 01			cmp	byte ptr ds:[2EBDh],1	; (9B68:2EBD=0EEh)
020A:7BEC  74 0B				je	loc_1252		; Jump if equal
020A:7BEE  83 F9 22				cmp	cx,22h
020A:7BF1  76 06				jbe	loc_1252		; Jump if below or =
020A:7BF3  83 E9 20				sub	cx,20h
020A:7BF6  83 C2 20				add	dx,20h
020A:7BF9			loc_1252:
020A:7BF9  E9 00AE				jmp	loc_1261		; (7CAA)
020A:7BFC			loc_1253:
020A:7BFC  83 F9 23				cmp	cx,23h
020A:7BFF  72 F8				jb	loc_1252		; Jump if below
020A:7C01  51					push	cx
020A:7C02  BF 28DC				mov	di,28DCh
020A:7C05  8B F2				mov	si,dx
020A:7C07  B9 0020				mov	cx,20h
020A:7C0A  9A 16BF:10C8		;*		call	far ptr sub_201		;*(16BF:10C8)
020A:7C0A  9A C8 10 BF 16			db	 9Ah,0C8h, 10h,0BFh, 16h
020A:7C0F  59					pop	cx
020A:7C10  57					push	di
020A:7C11  83 F9 33				cmp	cx,33h
020A:7C14  72 74				jb	loc_1256		; Jump if below
020A:7C16  51					push	cx
020A:7C17  B9 0010				mov	cx,10h
020A:7C1A  9A 16BF:10C8		;*		call	far ptr sub_201		;*(16BF:10C8)
020A:7C1A  9A C8 10 BF 16			db	 9Ah,0C8h, 10h,0BFh, 16h
020A:7C1F  80 3E 2EBA 03			cmp	byte ptr ds:[2EBAh],3	; (9B68:2EBA=0EEh)
020A:7C24  75 23				jne	loc_1255		; Jump if not equal
020A:7C26  8B DA				mov	bx,dx
020A:7C28  80 7F 20 3B				cmp	byte ptr [bx+20h],3Bh	; ';'
020A:7C2C  74 1B				je	loc_1255		; Jump if equal
020A:7C2E  81 7D FE 0909			cmp	word ptr [di-2],909h
020A:7C33  74 13				je	loc_1254		; Jump if equal
020A:7C35  81 7F 30 2020			cmp	word ptr [bx+30h],2020h
020A:7C3A  75 0D				jne	loc_1255		; Jump if not equal
020A:7C3C  80 7F 60 3B				cmp	byte ptr [bx+60h],3Bh	; ';'
020A:7C40  75 07				jne	loc_1255		; Jump if not equal
020A:7C42  80 7D FF 09				cmp	byte ptr [di-1],9
020A:7C46  75 01				jne	loc_1255		; Jump if not equal
020A:7C48			loc_1254:
020A:7C48  4F					dec	di
020A:7C49			loc_1255:
020A:7C49  59					pop	cx
020A:7C4A  83 F9 3B				cmp	cx,3Bh
020A:7C4D  72 3B				jb	loc_1256		; Jump if below
020A:7C4F  51					push	cx
020A:7C50  B9 0008				mov	cx,8
020A:7C53  9A 16BF:10C8		;*		call	far ptr sub_201		;*(16BF:10C8)
020A:7C53  9A C8 10 BF 16			db	 9Ah,0C8h, 10h,0BFh, 16h
020A:7C58  59					pop	cx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 253

020A:7C59  83 F9 63				cmp	cx,63h
020A:7C5C  72 2C				jb	loc_1256		; Jump if below
020A:7C5E  51					push	cx
020A:7C5F  B9 0028				mov	cx,28h
020A:7C62  9A 16BF:10C8		;*		call	far ptr sub_201		;*(16BF:10C8)
020A:7C62  9A C8 10 BF 16			db	 9Ah,0C8h, 10h,0BFh, 16h
020A:7C67  59					pop	cx
020A:7C68  80 3E 2EBA 00			cmp	byte ptr ds:[2EBAh],0	; (9B68:2EBA=0EEh)
020A:7C6D  74 1B				je	loc_1256		; Jump if equal
020A:7C6F  80 3C 3B				cmp	byte ptr [si],3Bh	; ';'
020A:7C72  75 16				jne	loc_1256		; Jump if not equal
020A:7C74  81 7D FE 0909			cmp	word ptr [di-2],909h
020A:7C79  75 0F				jne	loc_1256		; Jump if not equal
020A:7C7B  4F					dec	di
020A:7C7C  80 3E 2EBA 01			cmp	byte ptr ds:[2EBAh],1	; (9B68:2EBA=0EEh)
020A:7C81  74 07				je	loc_1256		; Jump if equal
020A:7C83  80 7D FE 09				cmp	byte ptr [di-2],9
020A:7C87  75 01				jne	loc_1256		; Jump if not equal
020A:7C89  4F					dec	di
020A:7C8A			loc_1256:
020A:7C8A  8B DE				mov	bx,si
020A:7C8C  2B DA				sub	bx,dx
020A:7C8E			loc_1257:
020A:7C8E  3B CB				cmp	cx,bx
020A:7C90  74 05				je	loc_1258		; Jump if equal
020A:7C92  FC					cld				; Clear direction
020A:7C93  A4					movsb				; Mov [si] to es:[di]
020A:7C94  43					inc	bx
020A:7C95  EB F7				jmp	short loc_1257		; (7C8E)
020A:7C97			loc_1258:
020A:7C97  8B CF				mov	cx,di
020A:7C99  5F					pop	di
020A:7C9A  80 3E 2EBD 01			cmp	byte ptr ds:[2EBDh],1	; (9B68:2EBD=0EEh)
020A:7C9F  74 04				je	loc_1259		; Jump if equal
020A:7CA1  8B D7				mov	dx,di
020A:7CA3  EB 03				jmp	short loc_1260		; (7CA8)
020A:7CA5			loc_1259:
020A:7CA5  BA 28DC				mov	dx,28DCh
020A:7CA8			loc_1260:
020A:7CA8  2B CA				sub	cx,dx
020A:7CAA			loc_1261:
020A:7CAA  80 3E 2EBC 01			cmp	byte ptr ds:[2EBCh],1	; (9B68:2EBC=0A0h)
020A:7CAF  74 38				je	loc_1263		; Jump if equal
020A:7CB1  80 3E 2EBD 00			cmp	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:7CB6  74 31				je	loc_1263		; Jump if equal
020A:7CB8  F7 06 42CE 0010			test	word ptr ds:[42CEh],10h	; (9B68:42CE=0)
020A:7CBE  74 14				jz	loc_1262		; Jump if zero
020A:7CC0  83 F9 08				cmp	cx,8
020A:7CC3  76 24				jbe	loc_1263		; Jump if below or =
020A:7CC5  8B FA				mov	di,dx
020A:7CC7  80 3D 0C				cmp	byte ptr [di],0Ch
020A:7CCA  74 1D				je	loc_1263		; Jump if equal
020A:7CCC  83 C2 05				add	dx,5
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_101:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 254

020A:7CCF  83 E9 05				sub	cx,5
020A:7CD2  EB 15				jmp	short loc_1263		; (7CE9)
020A:7CD4			loc_1262:
020A:7CD4  8B FA				mov	di,dx
020A:7CD6  80 7D 04 3A				cmp	byte ptr [di+4],3Ah	; ':'
020A:7CDA  75 0D				jne	loc_1263		; Jump if not equal
020A:7CDC  C7 05 2020				mov	word ptr [di],2020h
020A:7CE0  C7 45 02 2020			mov	word ptr [di+2],2020h
020A:7CE5  C6 45 04 20				mov	byte ptr [di+4],20h	; ' '
020A:7CE9			loc_1263:
020A:7CE9  F7 06 42CE 0080			test	data_474,80h		; (020A:42CE=3000h)
020A:7CEF  74 19				jz	loc_1267		; Jump if zero
020A:7CF1  8B FA				mov	di,dx
020A:7CF3  51					push	cx
  
020A:7CF4			locloop_1264:
020A:7CF4  F6 05 80				test	byte ptr [di],80h
020A:7CF7  74 0D				jz	loc_1266		; Jump if zero
020A:7CF9  80 3D B1				cmp	byte ptr [di],0B1h
020A:7CFC  75 05				jne	loc_1265		; Jump if not equal
020A:7CFE  C6 05 5F				mov	byte ptr [di],5Fh	; '_'
020A:7D01  EB 03				jmp	short loc_1266		; (7D06)
020A:7D03			loc_1265:
020A:7D03  C6 05 3D				mov	byte ptr [di],3Dh	; '='
020A:7D06			loc_1266:
020A:7D06  47					inc	di
020A:7D07  E2 EB				loop	locloop_1264		; Loop if cx > 0
  
020A:7D09  59					pop	cx
020A:7D0A			loc_1267:
020A:7D0A  FF 06 2DBA				inc	data_392		; (020A:2DBA=2E3Bh)
020A:7D0E  75 04				jnz	loc_1268		; Jump if not zero
020A:7D10  FE 06 2DBC				inc	byte ptr data_393	; (020A:2DBC=42h)
020A:7D14			loc_1268:
020A:7D14  8B 1E 2C3C				mov	bx,data_375		; (020A:2C3C=4F43h)
020A:7D18  B4 40				mov	ah,40h			; '@'
020A:7D1A  CD 21				int	21h			; DOS Services  ah=function 40h
										;  write file cx=bytes, to ds:dx
020A:7D1C  73 04				jnc	loc_1269		; Jump if carry=0
020A:7D1E  B3 0A				mov	bl,0Ah
020A:7D20  EB 06				jmp	short loc_1270		; (7D28)
020A:7D22			loc_1269:
020A:7D22  3B C1				cmp	ax,cx
020A:7D24  74 05				je	loc_1271		; Jump if equal
020A:7D26  B3 0B				mov	bl,0Bh
020A:7D28			loc_1270:
020A:7D28  F9					stc				; Set carry flag
020A:7D29  EB 01				jmp	short loc_1272		; (7D2C)
020A:7D2B			loc_1271:
020A:7D2B  F8					clc				; Clear carry flag
020A:7D2C			loc_1272:
020A:7D2C  5E					pop	si
020A:7D2D  5F					pop	di
020A:7D2E  59					pop	cx
020A:7D2F  72 01				jc	loc_1273		; Jump if carry Set
020A:7D31  C3					retn
020A:7D32			loc_1273:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 255

020A:7D32  58					pop	ax
020A:7D33  E9 BBD0				jmp	loc_394			; (3906)
				sub_100		endp
  
020A:7D36  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_102		proc	near
020A:7D38  F7 06 42CE 0008			test	word ptr ds:[42CEh],8	; (9B68:42CE=0)
020A:7D3E  74 04				jz	loc_1274		; Jump if zero
020A:7D40  B3 00				mov	bl,0
020A:7D42  F8					clc				; Clear carry flag
020A:7D43  C3					retn
020A:7D44			loc_1274:
020A:7D44  52					push	dx
020A:7D45  80 3E 2EBD 00			cmp	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:7D4A  74 73				je	loc_1283		; Jump if equal
020A:7D4C  A1 2DBA				mov	ax,word ptr ds:[2DBAh]	; (9B68:2DBA=2EAAh)
020A:7D4F  33 D2				xor	dx,dx			; Zero register
020A:7D51  8A 1E 2EBF				mov	bl,byte ptr ds:[2EBFh]	; (9B68:2EBF=0A8h)
020A:7D55  80 FB 00				cmp	bl,0
020A:7D58  75 09				jne	loc_1275		; Jump if not equal
020A:7D5A  83 3E 2D59 00			cmp	word ptr ds:[2D59h],0	; (9B68:2D59=2020h)
020A:7D5F  74 0B				je	loc_1276		; Jump if equal
020A:7D61  EB 5C				jmp	short loc_1283		; (7DBF)
020A:7D63			loc_1275:
020A:7D63  32 FF				xor	bh,bh			; Zero register
020A:7D65  F7 F3				div	bx			; ax,dx rem=dx:ax/reg
020A:7D67  83 FA 00				cmp	dx,0
020A:7D6A  75 53				jne	loc_1283		; Jump if not equal
020A:7D6C			loc_1276:
020A:7D6C  51					push	cx
020A:7D6D  55					push	bp
020A:7D6E  FF 06 2D59				inc	word ptr ds:[2D59h]	; (9B68:2D59=2020h)
020A:7D72  BD 2D37				mov	bp,2D37h
020A:7D75  A1 2D59				mov	ax,word ptr ds:[2D59h]	; (9B68:2D59=2020h)
020A:7D78  3D 0001				cmp	ax,1
020A:7D7B  74 05				je	loc_1277		; Jump if equal
020A:7D7D  C6 06 2CCA 0C			mov	byte ptr ds:[2CCAh],0Ch	; (9B68:2CCA=0A4h)
020A:7D82			loc_1277:
020A:7D82  B3 00				mov	bl,0
020A:7D84  9A 16BF:00D4		;*		call	far ptr sub_175		;*(16BF:00D4)
020A:7D84  9A D4 00 BF 16			db	 9Ah,0D4h, 00h,0BFh, 16h
020A:7D89  3E: C7 46 00 2020			mov	word ptr ds:[bp],2020h
020A:7D8F  BA 2CCA				mov	dx,2CCAh
020A:7D92  E8 FE23				call	sub_100			; (7BB8)
020A:7D95  FF 06 2DBA				inc	word ptr ds:[2DBAh]	; (9B68:2DBA=2EAAh)
020A:7D99  75 04				jnz	loc_1278		; Jump if not zero
020A:7D9B  FE 06 2DBC				inc	byte ptr ds:[2DBCh]	; (9B68:2DBC=0Dh)
020A:7D9F			loc_1278:
020A:7D9F  BA 38AA				mov	dx,38AAh
020A:7DA2  B9 0002				mov	cx,2
020A:7DA5  8B 1E 2C3C				mov	bx,word ptr ds:[2C3Ch]	; (9B68:2C3C=20ACh)
020A:7DA9  B4 40				mov	ah,40h			; '@'
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 256

020A:7DAB  CD 21				int	21h			; DOS Services  ah=function 40h
										;  write file cx=bytes, to ds:dx
020A:7DAD  73 04				jnc	loc_1279		; Jump if carry=0
020A:7DAF  B3 0A				mov	bl,0Ah
020A:7DB1  EB 06				jmp	short loc_1280		; (7DB9)
020A:7DB3			loc_1279:
020A:7DB3  3B C1				cmp	ax,cx
020A:7DB5  74 05				je	loc_1281		; Jump if equal
020A:7DB7  B3 0B				mov	bl,0Bh
020A:7DB9			loc_1280:
020A:7DB9  F9					stc				; Set carry flag
020A:7DBA  EB 01				jmp	short loc_1282		; (7DBD)
020A:7DBC			loc_1281:
020A:7DBC  F8					clc				; Clear carry flag
020A:7DBD			loc_1282:
020A:7DBD  5D					pop	bp
020A:7DBE  59					pop	cx
020A:7DBF			loc_1283:
020A:7DBF  5A					pop	dx
020A:7DC0  72 01				jc	loc_1284		; Jump if carry Set
020A:7DC2  C3					retn
020A:7DC3			loc_1284:
020A:7DC3  58					pop	ax
020A:7DC4  E9 BB3F				jmp	loc_394			; (3906)
				sub_102		endp
  
020A:7DC7  90					nop
020A:7DC8  E8 FF6D				call	sub_102			; (7D38)
020A:7DCB  56					push	si
020A:7DCC  57					push	di
020A:7DCD  52					push	dx
020A:7DCE  E8 1A8D				call	sub_145			; (985E)
020A:7DD1  C7 06 3900 0000			mov	word ptr ds:[3900h],0	; (9B68:3900=0)
020A:7DD7  F6 06 38BA 10			test	byte ptr ds:[38BAh],10h	; (9B68:38BA=0)
020A:7DDC  74 03				jz	loc_1285		; Jump if zero
020A:7DDE  E9 010C				jmp	loc_1302		; (7EED)
020A:7DE1			loc_1285:
020A:7DE1  80 3E 38B7 01			cmp	byte ptr ds:[38B7h],1	; (9B68:38B7=0)
020A:7DE6  75 32				jne	loc_1287		; Jump if not equal
020A:7DE8  83 3E 38B8 00			cmp	word ptr ds:[38B8h],0	; (9B68:38B8=9A00h)
020A:7DED  74 2B				je	loc_1287		; Jump if equal
020A:7DEF  C6 06 3902 00			mov	byte ptr ds:[3902h],0	; (9B68:3902=0)
020A:7DF4  A1 3949				mov	ax,word ptr ds:[3949h]	; (9B68:3949=0)
020A:7DF7  BF 0000				mov	di,0
020A:7DFA  80 3E 38BA 02			cmp	byte ptr ds:[38BAh],2	; (9B68:38BA=0)
020A:7DFF  74 13				je	loc_1286		; Jump if equal
020A:7E01  A1 394B				mov	ax,word ptr ds:[394Bh]	; (9B68:394B=0)
020A:7E04  BF 1000				mov	di,1000h
020A:7E07  80 3E 38BA 01			cmp	byte ptr ds:[38BAh],1	; (9B68:38BA=0)
020A:7E0C  74 06				je	loc_1286		; Jump if equal
020A:7E0E  A1 394D				mov	ax,word ptr ds:[394Dh]	; (9B68:394D=3000h)
020A:7E11  BF 13FC				mov	di,13FCh
020A:7E14			loc_1286:
020A:7E14  3B 06 38B8				cmp	ax,word ptr ds:[38B8h]	; (9B68:38B8=9A00h)
020A:7E18  73 03				jae	loc_1288		; Jump if above or =
020A:7E1A			loc_1287:
020A:7E1A  E9 0235				jmp	loc_1329		; (8052)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 257

020A:7E1D			loc_1288:
020A:7E1D  A1 38B8				mov	ax,word ptr ds:[38B8h]	; (9B68:38B8=9A00h)
020A:7E20  48					dec	ax
020A:7E21  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:7E23  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:7E25  03 F8				add	di,ax
020A:7E27  E8 1A2E				call	sub_143			; (9858)
020A:7E2A  26: 8B 55 02				mov	dx,es:[di+2]
020A:7E2E  26: 8B 45 06				mov	ax,es:[di+6]
020A:7E32  2B C2				sub	ax,dx
020A:7E34  A3 3900				mov	word ptr ds:[3900h],ax	; (9B68:3900=0)
020A:7E37  26: 8B 0D				mov	cx,es:[di]
020A:7E3A  89 0E 38FC				mov	word ptr ds:[38FCh],cx	; (9B68:38FC=0)
020A:7E3E  E8 1A1D				call	sub_145			; (985E)
020A:7E41			loc_1289:
020A:7E41  89 16 38FE				mov	word ptr ds:[38FEh],dx	; (9B68:38FE=0)
020A:7E45  8B 0E 38FC				mov	cx,word ptr ds:[38FCh]	; (9B68:38FC=0)
020A:7E49  B4 42				mov	ah,42h			; 'B'
020A:7E4B  B0 00				mov	al,0
020A:7E4D  8B 1E 37EA				mov	bx,word ptr ds:[37EAh]	; (9B68:37EA=3002h)
020A:7E51  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, cx,dx=offset
020A:7E53  B4 3F				mov	ah,3Fh			; '?'
020A:7E55  8B 1E 37EA				mov	bx,word ptr ds:[37EAh]	; (9B68:37EA=3002h)
020A:7E59  B9 0200				mov	cx,200h
020A:7E5C  BA 3950				mov	dx,3950h
020A:7E5F  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, cx=bytes, to ds:dx
020A:7E61  73 05				jnc	loc_1290		; Jump if carry=0
020A:7E63  B3 0E				mov	bl,0Eh
020A:7E65  E9 01EA				jmp	loc_1329		; (8052)
020A:7E68			loc_1290:
020A:7E68  3D 0000				cmp	ax,0
020A:7E6B  75 03				jne	loc_1291		; Jump if not equal
020A:7E6D  E9 01E2				jmp	loc_1329		; (8052)
020A:7E70			loc_1291:
020A:7E70  80 3E 38BA 02			cmp	byte ptr ds:[38BAh],2	; (9B68:38BA=0)
020A:7E75  75 03				jne	loc_1292		; Jump if not equal
020A:7E77  E9 010B				jmp	loc_1312		; (7F85)
020A:7E7A			loc_1292:
020A:7E7A  BE 3950				mov	si,3950h
020A:7E7D			loc_1293:
020A:7E7D  9A 16BF:10B8		;*		call	far ptr sub_200		;*(16BF:10B8)
020A:7E7D  9A B8 10 BF 16			db	 9Ah,0B8h, 10h,0BFh, 16h
020A:7E82  BF 3B70				mov	di,3B70h
020A:7E85  B9 0004				mov	cx,4
  
020A:7E88			locloop_1294:
020A:7E88  80 3C 0D				cmp	byte ptr [si],0Dh
020A:7E8B  74 0F				je	loc_1295		; Jump if equal
020A:7E8D  46					inc	si
020A:7E8E  FF 0E 3900				dec	word ptr ds:[3900h]	; (9B68:3900=0)
020A:7E92  74 08				jz	loc_1295		; Jump if zero
020A:7E94  E2 F2				loop	locloop_1294		; Loop if cx > 0
  
020A:7E96  C7 05 203B				mov	word ptr [di],203Bh
020A:7E9A  47					inc	di
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 258

020A:7E9B  47					inc	di
020A:7E9C			loc_1295:
020A:7E9C  8B 0E 3900				mov	cx,word ptr ds:[3900h]	; (9B68:3900=0)
020A:7EA0  FC					cld				; Clear direction
  
020A:7EA1			locloop_1296:
020A:7EA1  80 3C 0D				cmp	byte ptr [si],0Dh
020A:7EA4  74 0D				je	loc_1298		; Jump if equal
020A:7EA6  81 FF 3BD6				cmp	di,3BD6h
020A:7EAA  73 02				jae	loc_1297		; Jump if above or =
020A:7EAC  A4					movsb				; Mov [si] to es:[di]
020A:7EAD  4E					dec	si
020A:7EAE			loc_1297:
020A:7EAE  46					inc	si
020A:7EAF  E2 F0				loop	locloop_1296		; Loop if cx > 0
  
020A:7EB1  EB 06				jmp	short loc_1299		; (7EB9)
020A:7EB3			loc_1298:
020A:7EB3  46					inc	si
020A:7EB4  46					inc	si
020A:7EB5  49					dec	cx
020A:7EB6  74 01				jz	loc_1299		; Jump if zero
020A:7EB8  49					dec	cx
020A:7EB9			loc_1299:
020A:7EB9  BA 3B50				mov	dx,3B50h
020A:7EBC  E8 FCE9				call	sub_99			; (7BA8)
020A:7EBF  83 F9 00				cmp	cx,0
020A:7EC2  74 26				je	loc_1301		; Jump if equal
020A:7EC4  89 0E 3900				mov	word ptr ds:[3900h],cx	; (9B68:3900=0)
020A:7EC8  B8 3B50				mov	ax,3B50h
020A:7ECB  2B C6				sub	ax,si
020A:7ECD  3B C8				cmp	cx,ax
020A:7ECF  72 AC				jb	loc_1293		; Jump if below
020A:7ED1  81 FE 3AF6				cmp	si,3AF6h
020A:7ED5  72 A6				jb	loc_1293		; Jump if below
020A:7ED7  8B D6				mov	dx,si
020A:7ED9  81 EA 3950				sub	dx,3950h
020A:7EDD  03 16 38FE				add	dx,word ptr ds:[38FEh]	; (9B68:38FE=0)
020A:7EE1  73 04				jnc	loc_1300		; Jump if carry=0
020A:7EE3  FF 06 38FC				inc	word ptr ds:[38FCh]	; (9B68:38FC=0)
020A:7EE7			loc_1300:
020A:7EE7  E9 FF57				jmp	loc_1289		; (7E41)
020A:7EEA			loc_1301:
020A:7EEA  E9 0165				jmp	loc_1329		; (8052)
020A:7EED			loc_1302:
020A:7EED  9A 16BF:10B8		;*		call	far ptr sub_200		;*(16BF:10B8)
020A:7EED  9A B8 10 BF 16			db	 9Ah,0B8h, 10h,0BFh, 16h
020A:7EF2  80 3E 38BA 15			cmp	byte ptr ds:[38BAh],15h	; (9B68:38BA=0)
020A:7EF7  72 19				jb	loc_1303		; Jump if below
020A:7EF9  8A 0E 38BB				mov	cl,byte ptr ds:[38BBh]	; (9B68:38BB=8Dh)
020A:7EFD  32 ED				xor	ch,ch			; Zero register
020A:7EFF  33 DB				xor	bx,bx			; Zero register
020A:7F01  BF 3B70				mov	di,3B70h
020A:7F04  C6 05 3B				mov	byte ptr [di],3Bh	; ';'
020A:7F07  83 C7 0A				add	di,0Ah
020A:7F0A  BE 38BC				mov	si,38BCh
020A:7F0D  E8 1939				call	sub_140			; (9849)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 259

020A:7F10  EB 32				jmp	short loc_1306		; (7F44)
020A:7F12			loc_1303:
020A:7F12  5A					pop	dx
020A:7F13  52					push	dx
020A:7F14  56					push	si
020A:7F15  BF 3B50				mov	di,3B50h
020A:7F18  8B F2				mov	si,dx
020A:7F1A  B9 282A				mov	cx,282Ah
020A:7F1D  81 E9 27CA				sub	cx,27CAh
020A:7F21  FC					cld				; Clear direction
020A:7F22  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7F24  5E					pop	si
020A:7F25  BE 38BC				mov	si,38BCh
020A:7F28  E8 191E				call	sub_140			; (9849)
020A:7F2B			loc_1304:
020A:7F2B  8A 0E 38BB				mov	cl,byte ptr ds:[38BBh]	; (9B68:38BB=8Dh)
020A:7F2F  32 ED				xor	ch,ch			; Zero register
020A:7F31  8B D9				mov	bx,cx
020A:7F33  83 F9 24				cmp	cx,24h
020A:7F36  76 03				jbe	loc_1305		; Jump if below or =
020A:7F38  B9 001C				mov	cx,1Ch
020A:7F3B			loc_1305:
020A:7F3B  BF 3BB0				mov	di,3BB0h
020A:7F3E  C7 05 203B				mov	word ptr [di],203Bh
020A:7F42  47					inc	di
020A:7F43  47					inc	di
020A:7F44			loc_1306:
020A:7F44  FC					cld				; Clear direction
020A:7F45  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7F47  83 FB 24				cmp	bx,24h
020A:7F4A  77 04				ja	loc_1307		; Jump if above
020A:7F4C  33 DB				xor	bx,bx			; Zero register
020A:7F4E  EB 14				jmp	short loc_1310		; (7F64)
020A:7F50			loc_1307:
020A:7F50  83 EB 1C				sub	bx,1Ch
020A:7F53  B9 0008				mov	cx,8
020A:7F56  8B C1				mov	ax,cx
  
020A:7F58			locloop_1308:
020A:7F58  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:7F5B  74 03				je	loc_1309		; Jump if equal
020A:7F5D  A4					movsb				; Mov [si] to es:[di]
020A:7F5E  E2 F8				loop	locloop_1308		; Loop if cx > 0
  
020A:7F60			loc_1309:
020A:7F60  2B C1				sub	ax,cx
020A:7F62  2B D8				sub	bx,ax
020A:7F64			loc_1310:
020A:7F64  E8 18E2				call	sub_140			; (9849)
020A:7F67  88 1E 38BB				mov	byte ptr ds:[38BBh],bl	; (9B68:38BB=8Dh)
020A:7F6B  BA 3B50				mov	dx,3B50h
020A:7F6E  E8 FC37				call	sub_99			; (7BA8)
020A:7F71  80 3E 38BB 00			cmp	byte ptr ds:[38BBh],0	; (9B68:38BB=8Dh)
020A:7F76  74 07				je	loc_1311		; Jump if equal
020A:7F78  9A 16BF:10B8		;*		call	far ptr sub_200		;*(16BF:10B8)
020A:7F78  9A B8 10 BF 16			db	 9Ah,0B8h, 10h,0BFh, 16h
020A:7F7D  EB AC				jmp	short loc_1304		; (7F2B)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 260

020A:7F7F			loc_1311:
020A:7F7F  E9 00B9				jmp	loc_1327		; (803B)
020A:7F82  E9 00D9				jmp	loc_1330		; (805E)
020A:7F85			loc_1312:
020A:7F85  BE 3950				mov	si,3950h
020A:7F88			loc_1313:
020A:7F88  9A 16BF:10B8		;*		call	far ptr sub_200		;*(16BF:10B8)
020A:7F88  9A B8 10 BF 16			db	 9Ah,0B8h, 10h,0BFh, 16h
020A:7F8D  80 3E 3902 02			cmp	byte ptr ds:[3902h],2	; (9B68:3902=0)
020A:7F92  73 3C				jae	loc_1317		; Jump if above or =
020A:7F94  80 7C 04 B0				cmp	byte ptr [si+4],0B0h
020A:7F98  72 12				jb	loc_1315		; Jump if below
020A:7F9A  80 3E 3902 00			cmp	byte ptr ds:[3902h],0	; (9B68:3902=0)
020A:7F9F  75 09				jne	loc_1314		; Jump if not equal
020A:7FA1  B0 03				mov	al,3
020A:7FA3  E8 FB6A				call	sub_98			; (7B10)
020A:7FA6  FE 06 3902				inc	byte ptr ds:[3902h]	; (9B68:3902=0)
020A:7FAA			loc_1314:
020A:7FAA  EB 24				jmp	short loc_1317		; (7FD0)
020A:7FAC			loc_1315:
020A:7FAC  80 3E 3902 01			cmp	byte ptr ds:[3902h],1	; (9B68:3902=0)
020A:7FB1  75 05				jne	loc_1316		; Jump if not equal
020A:7FB3  B0 03				mov	al,3
020A:7FB5  E8 FB58				call	sub_98			; (7B10)
020A:7FB8			loc_1316:
020A:7FB8  5A					pop	dx
020A:7FB9  52					push	dx
020A:7FBA  56					push	si
020A:7FBB  BF 3B50				mov	di,3B50h
020A:7FBE  8B F2				mov	si,dx
020A:7FC0  B9 282A				mov	cx,282Ah
020A:7FC3  81 E9 27CA				sub	cx,27CAh
020A:7FC7  FC					cld				; Clear direction
020A:7FC8  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7FCA  5E					pop	si
020A:7FCB  C6 06 3902 02			mov	byte ptr ds:[3902h],2	; (9B68:3902=0)
020A:7FD0			loc_1317:
020A:7FD0  BF 3BB0				mov	di,3BB0h
020A:7FD3  B9 0004				mov	cx,4
  
020A:7FD6			locloop_1318:
020A:7FD6  80 3C 0D				cmp	byte ptr [si],0Dh
020A:7FD9  74 0F				je	loc_1319		; Jump if equal
020A:7FDB  46					inc	si
020A:7FDC  FF 0E 3900				dec	word ptr ds:[3900h]	; (9B68:3900=0)
020A:7FE0  74 08				jz	loc_1319		; Jump if zero
020A:7FE2  E2 F2				loop	locloop_1318		; Loop if cx > 0
  
020A:7FE4  C7 05 203B				mov	word ptr [di],203Bh
020A:7FE8  47					inc	di
020A:7FE9  47					inc	di
020A:7FEA			loc_1319:
020A:7FEA  8B 0E 3900				mov	cx,word ptr ds:[3900h]	; (9B68:3900=0)
020A:7FEE  FC					cld				; Clear direction
  
020A:7FEF			locloop_1320:
020A:7FEF  80 3C 0D				cmp	byte ptr [si],0Dh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 261

020A:7FF2  74 0D				je	loc_1322		; Jump if equal
020A:7FF4  81 FF 3BD6				cmp	di,3BD6h
020A:7FF8  73 02				jae	loc_1321		; Jump if above or =
020A:7FFA  A4					movsb				; Mov [si] to es:[di]
020A:7FFB  4E					dec	si
020A:7FFC			loc_1321:
020A:7FFC  46					inc	si
020A:7FFD  E2 F0				loop	locloop_1320		; Loop if cx > 0
  
020A:7FFF  EB 06				jmp	short loc_1323		; (8007)
020A:8001			loc_1322:
020A:8001  46					inc	si
020A:8002  46					inc	si
020A:8003  49					dec	cx
020A:8004  74 01				jz	loc_1323		; Jump if zero
020A:8006  49					dec	cx
020A:8007			loc_1323:
020A:8007  BA 3B50				mov	dx,3B50h
020A:800A  E8 FB9B				call	sub_99			; (7BA8)
020A:800D  83 F9 00				cmp	cx,0
020A:8010  74 29				je	loc_1327		; Jump if equal
020A:8012  89 0E 3900				mov	word ptr ds:[3900h],cx	; (9B68:3900=0)
020A:8016  B8 3B50				mov	ax,3B50h
020A:8019  2B C6				sub	ax,si
020A:801B  3B C8				cmp	cx,ax
020A:801D  72 06				jb	loc_1324		; Jump if below
020A:801F  81 FE 3AF6				cmp	si,3AF6h
020A:8023  73 03				jae	loc_1325		; Jump if above or =
020A:8025			loc_1324:
020A:8025  E9 FF60				jmp	loc_1313		; (7F88)
020A:8028			loc_1325:
020A:8028  8B D6				mov	dx,si
020A:802A  81 EA 3950				sub	dx,3950h
020A:802E  03 16 38FE				add	dx,word ptr ds:[38FEh]	; (9B68:38FE=0)
020A:8032  73 04				jnc	loc_1326		; Jump if carry=0
020A:8034  FF 06 38FC				inc	word ptr ds:[38FCh]	; (9B68:38FC=0)
020A:8038			loc_1326:
020A:8038  E9 FE06				jmp	loc_1289		; (7E41)
020A:803B			loc_1327:
020A:803B  A0 38BA				mov	al,byte ptr ds:[38BAh]	; (9B68:38BA=0)
020A:803E  24 0F				and	al,0Fh
020A:8040  3C 05				cmp	al,5
020A:8042  73 1A				jae	loc_1330		; Jump if above or =
020A:8044  3C 02				cmp	al,2
020A:8046  75 05				jne	loc_1328		; Jump if not equal
020A:8048  80 0E 38BA 13			or	byte ptr ds:[38BAh],13h	; (9B68:38BA=0)
020A:804D			loc_1328:
020A:804D  E8 C894		;*		call	sub_66			;*(48E4)
020A:804D  E8 94 C8				db	0E8h, 94h,0C8h
020A:8050  EB 0C				jmp	short loc_1330		; (805E)
020A:8052			loc_1329:
020A:8052  80 3E 38BA 05			cmp	byte ptr ds:[38BAh],5	; (9B68:38BA=0)
020A:8057  73 05				jae	loc_1330		; Jump if above or =
020A:8059  5A					pop	dx
020A:805A  E8 C887		;*		call	sub_66			;*(48E4)
020A:805A  E8 87 C8				db	0E8h, 87h,0C8h
020A:805D  52					push	dx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 262

020A:805E			loc_1330:
020A:805E  C7 06 38B8 0000			mov	word ptr ds:[38B8h],0	; (9B68:38B8=9A00h)
020A:8064  9C					pushf				; Push flags
020A:8065  80 26 38BA 0F			and	byte ptr ds:[38BAh],0Fh	; (9B68:38BA=0)
020A:806A  80 3E 38BA 04			cmp	byte ptr ds:[38BAh],4	; (9B68:38BA=0)
020A:806F  77 05				ja	loc_1331		; Jump if above
020A:8071  C6 06 38BA 04			mov	byte ptr ds:[38BAh],4	; (9B68:38BA=0)
020A:8076			loc_1331:
020A:8076  9D					popf				; Pop flags
020A:8077  5A					pop	dx
020A:8078  5F					pop	di
020A:8079  5E					pop	si
020A:807A  C3					retn
020A:807B  00 00				add	[bx+si],al
020A:807D  00 00				add	[bx+si],al
020A:807F  00 50 53				add	[bx+si+53h],dl
020A:8082  51					push	cx
020A:8083  52					push	dx
020A:8084  56					push	si
020A:8085  57					push	di
020A:8086  06					push	es
020A:8087  80 3E 1309 01			cmp	data_218,1		; (020A:1309=0)
020A:808C  74 31				je	loc_1333		; Jump if equal
020A:808E  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (020A:1306=0)
020A:8092  8E 06 12FB				mov	es,data_212		; (020A:12FB=0)
020A:8096  BE 0076				mov	si,76h
020A:8099  BA 0A16				mov	dx,0A16h
020A:809C  8B 3E 12FD				mov	di,data_213		; (020A:12FD=0)
020A:80A0  E8 009D				call	sub_105			; (8140)
020A:80A3  B9 0846				mov	cx,846h
020A:80A6  81 E9 0076				sub	cx,76h
  
020A:80AA			locloop_1332:
020A:80AA  FC					cld				; Clear direction
020A:80AB  A4					movsb				; Mov [si] to es:[di]
020A:80AC  87 D6				xchg	dx,si
020A:80AE  8A 04				mov	al,[si]
020A:80B0  87 F2				xchg	si,dx
020A:80B2  42					inc	dx
020A:80B3  D7					xlat				; al=[al+[bx]] table
020A:80B4  26: 88 05				mov	es:[di],al
020A:80B7  47					inc	di
020A:80B8  E2 F0				loop	locloop_1332		; Loop if cx > 0
  
020A:80BA  E8 00A7				call	sub_106			; (8164)
020A:80BD  EB 63				jmp	short loc_1341		; (8122)
020A:80BF			loc_1333:
020A:80BF  80 3E 2642 01			cmp	data_287,1		; (020A:2642=0)
020A:80C4  75 05				jne	loc_1334		; Jump if not equal
020A:80C6  E8 07DF				call	sub_122			; (88A8)
020A:80C9  EB 08				jmp	short loc_1335		; (80D3)
020A:80CB			loc_1334:
020A:80CB  B4 03				mov	ah,3
020A:80CD  32 FF				xor	bh,bh			; Zero register
020A:80CF  E8 0772				call	sub_121			; (8844)
020A:80D2  52					push	dx
020A:80D3			loc_1335:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 263

020A:80D3  B4 02				mov	ah,2
020A:80D5  32 FF				xor	bh,bh			; Zero register
020A:80D7  33 D2				xor	dx,dx			; Zero register
020A:80D9  E8 0768				call	sub_121			; (8844)
020A:80DC  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (020A:1306=0)
020A:80E0  B9 0846				mov	cx,846h
020A:80E3  80 3E 2642 01			cmp	data_287,1		; (020A:2642=0)
020A:80E8  75 03				jne	loc_1336		; Jump if not equal
020A:80EA  B9 07F6				mov	cx,7F6h
020A:80ED			loc_1336:
020A:80ED  81 E9 0076				sub	cx,76h
020A:80F1  49					dec	cx
020A:80F2  BE 0076				mov	si,76h
020A:80F5  BF 0A16				mov	di,0A16h
  
020A:80F8			locloop_1337:
020A:80F8  8A 05				mov	al,[di]
020A:80FA  D7					xlat				; al=[al+[bx]] table
020A:80FB  3C 00				cmp	al,0
020A:80FD  75 04				jne	loc_1338		; Jump if not equal
020A:80FF  B2 20				mov	dl,20h			; ' '
020A:8101  EB 02				jmp	short loc_1339		; (8105)
020A:8103			loc_1338:
020A:8103  8A 14				mov	dl,[si]
020A:8105			loc_1339:
020A:8105  9A 16BF:0350		;*		call	far ptr sub_181		;*(16BF:0350)
020A:8105  9A 50 03 BF 16			db	 9Ah, 50h, 03h,0BFh, 16h
020A:810A  46					inc	si
020A:810B  47					inc	di
020A:810C  E2 EA				loop	locloop_1337		; Loop if cx > 0
  
020A:810E  80 3E 2642 01			cmp	data_287,1		; (020A:2642=0)
020A:8113  75 05				jne	loc_1340		; Jump if not equal
020A:8115  E8 07C4				call	sub_123			; (88DC)
020A:8118  EB 08				jmp	short loc_1341		; (8122)
020A:811A			loc_1340:
020A:811A  B4 02				mov	ah,2
020A:811C  32 FF				xor	bh,bh			; Zero register
020A:811E  5A					pop	dx
020A:811F  E8 0722				call	sub_121			; (8844)
020A:8122			loc_1341:
020A:8122  07					pop	es
020A:8123  5F					pop	di
020A:8124  5E					pop	si
020A:8125  5A					pop	dx
020A:8126  59					pop	cx
020A:8127  5B					pop	bx
020A:8128  58					pop	ax
020A:8129  C3					retn
020A:812A  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_104		proc	near
020A:812C  E8 FF51		;*		call	sub_103			;*(8080)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 264

020A:812C  E8 51 FF				db	0E8h, 51h,0FFh
020A:812F  50					push	ax
020A:8130  53					push	bx
020A:8131  52					push	dx
020A:8132  B4 02				mov	ah,2
020A:8134  32 FF				xor	bh,bh			; Zero register
020A:8136  BA 184F				mov	dx,184Fh
020A:8139  E8 0708				call	sub_121			; (8844)
020A:813C  5A					pop	dx
020A:813D  5B					pop	bx
020A:813E  58					pop	ax
020A:813F  C3					retn
				sub_104		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_105		proc	near
020A:8140  80 3E 1308 01			cmp	byte ptr ds:[1308h],1	; (9B68:1308=0A7h)
020A:8145  74 1C				je	loc_1343		; Jump if equal
020A:8147  52					push	dx
020A:8148  BA 03DA				mov	dx,3DAh
020A:814B			loc_1342:
020A:814B  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:814C  A8 08				test	al,8
020A:814E  75 FB				jnz	loc_1342		; Jump if not zero
020A:8150  BA 03D8				mov	dx,3D8h
020A:8153  1E					push	ds
020A:8154  33 C0				xor	ax,ax			; Zero register
020A:8156  8E D8				mov	ds,ax
020A:8158  A0 0465				mov	al,byte ptr ds:[465h]	; (0000:0465=29h)
020A:815B  24 F7				and	al,0F7h
020A:815D  A2 0465				mov	byte ptr ds:[465h],al	; (0000:0465=29h)
020A:8160  EE					out	dx,al			; port 3D8h, CGA video control
020A:8161  1F					pop	ds
020A:8162  5A					pop	dx
020A:8163			loc_1343:
020A:8163  C3					retn
				sub_105		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_106		proc	near
020A:8164  80 3E 1308 01			cmp	byte ptr ds:[1308h],1	; (9B68:1308=0A7h)
020A:8169  74 14				je	loc_1344		; Jump if equal
020A:816B  52					push	dx
020A:816C  BA 03D8				mov	dx,3D8h
020A:816F  1E					push	ds
020A:8170  33 C0				xor	ax,ax			; Zero register
020A:8172  8E D8				mov	ds,ax
020A:8174  A0 0465				mov	al,byte ptr ds:[465h]	; (0000:0465=29h)
020A:8177  0C 08				or	al,8
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 265

020A:8179  A2 0465				mov	byte ptr ds:[465h],al	; (0000:0465=29h)
020A:817C  EE					out	dx,al			; port 3D8h, CGA video control
020A:817D  1F					pop	ds
020A:817E  5A					pop	dx
020A:817F			loc_1344:
020A:817F  C3					retn
				sub_106		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_107		proc	near
020A:8180  80 3E 1308 01			cmp	byte ptr ds:[1308h],1	; (9B68:1308=0A7h)
020A:8185  75 04				jne	loc_1345		; Jump if not equal
020A:8187  26: 88 25				mov	es:[di],ah
020A:818A  C3					retn
020A:818B			loc_1345:
020A:818B  51					push	cx
020A:818C  52					push	dx
020A:818D  50					push	ax
020A:818E  80 3E 1309 01			cmp	byte ptr ds:[1309h],1	; (9B68:1309=0A2h)
020A:8193  74 1D				je	loc_1349		; Jump if equal
020A:8195  BA 03DA				mov	dx,3DAh
020A:8198			loc_1346:
020A:8198  FB					sti				; Enable interrupts
020A:8199  B5 09				mov	ch,9
020A:819B  FA					cli				; Disable interrupts
020A:819C  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:819D  A8 08				test	al,8
020A:819F  75 09				jnz	loc_1348		; Jump if not zero
020A:81A1  A8 01				test	al,1
020A:81A3  75 F3				jnz	loc_1346		; Jump if not zero
020A:81A5			loc_1347:
020A:81A5  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:81A6  84 C5				test	al,ch
020A:81A8  74 FB				jz	loc_1347		; Jump if zero
020A:81AA			loc_1348:
020A:81AA  FC					cld				; Clear direction
020A:81AB  8A C4				mov	al,ah
020A:81AD  AA					stosb				; Store al to es:[di]
020A:81AE  FB					sti				; Enable interrupts
020A:81AF  4F					dec	di
020A:81B0  EB 23				jmp	short loc_1350		; (81D5)
020A:81B2			loc_1349:
020A:81B2  80 FC 20				cmp	ah,20h			; ' '
020A:81B5  72 1E				jb	loc_1350		; Jump if below
020A:81B7  53					push	bx
020A:81B8  50					push	ax
020A:81B9  B2 A0				mov	dl,0A0h
020A:81BB  8B C7				mov	ax,di
020A:81BD  F6 F2				div	dl			; al, ah rem = ax/reg
020A:81BF  86 C4				xchg	al,ah
020A:81C1  D0 E8				shr	al,1			; Shift w/zeros fill
020A:81C3  8B D0				mov	dx,ax
020A:81C5  B4 02				mov	ah,2
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 266

020A:81C7  32 FF				xor	bh,bh			; Zero register
020A:81C9  E8 0678				call	sub_121			; (8844)
020A:81CC  58					pop	ax
020A:81CD  8A D4				mov	dl,ah
020A:81CF  9A 16BF:0350		;*		call	far ptr sub_181		;*(16BF:0350)
020A:81CF  9A 50 03 BF 16			db	 9Ah, 50h, 03h,0BFh, 16h
020A:81D4  5B					pop	bx
020A:81D5			loc_1350:
020A:81D5  58					pop	ax
020A:81D6  5A					pop	dx
020A:81D7  59					pop	cx
020A:81D8  C3					retn
				sub_107		endp
  
020A:81D9  87 DB				xchg	bx,bx
020A:81DB  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_108		proc	near
020A:81DC  52					push	dx
020A:81DD  E8 167E				call	sub_145			; (985E)
020A:81E0  BF 0699				mov	di,699h
020A:81E3  B9 000A				mov	cx,0Ah
020A:81E6  B0 20				mov	al,20h			; ' '
020A:81E8  FC					cld				; Clear direction
020A:81E9  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:81EB  B4 36				mov	ah,36h			; '6'
020A:81ED  32 D2				xor	dl,dl			; Zero register
020A:81EF  CD 21				int	21h			; DOS Services  ah=function 36h
										;  get free space, drive dl,1=a:
020A:81F1  3D FFFF				cmp	ax,0FFFFh
020A:81F4  75 03				jne	loc_1351		; Jump if not equal
020A:81F6  E9 0096				jmp	loc_1357		; (828F)
020A:81F9			loc_1351:
020A:81F9  F7 E1				mul	cx			; dx:ax = reg * ax
020A:81FB  F7 E3				mul	bx			; dx:ax = reg * ax
020A:81FD  81 FA 05F5				cmp	dx,5F5h
020A:8201  72 0F				jb	loc_1352		; Jump if below
020A:8203  56					push	si
020A:8204  BD 069E				mov	bp,69Eh
020A:8207  BE 4913				mov	si,4913h
020A:820A  9A 16BF:1004		;*		call	far ptr sub_197		;*(16BF:1004)
020A:820A  9A 04 10 BF 16			db	 9Ah, 04h, 10h,0BFh, 16h
020A:820F  5E					pop	si
020A:8210  EB 7D				jmp	short loc_1357		; (828F)
020A:8212			loc_1352:
020A:8212  B9 2710				mov	cx,2710h
020A:8215  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020A:8217  50					push	ax
020A:8218  BD 069E				mov	bp,69Eh
020A:821B  B3 01				mov	bl,1
020A:821D  8B C2				mov	ax,dx
020A:821F  9A 16BF:00D4		;*		call	far ptr sub_175		;*(16BF:00D4)
020A:821F  9A D4 00 BF 16			db	 9Ah,0D4h, 00h,0BFh, 16h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 267

020A:8224  83 ED 04				sub	bp,4
020A:8227  3E: 8A 4E 00				mov	cl,ds:[bp]
020A:822B  58					pop	ax
020A:822C  3D 0000				cmp	ax,0
020A:822F  75 11				jne	loc_1353		; Jump if not equal
020A:8231  80 F9 20				cmp	cl,20h			; ' '
020A:8234  74 59				je	loc_1357		; Jump if equal
020A:8236  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:823B  4D					dec	bp
020A:823C  3E: 88 4E 00				mov	ds:[bp],cl
020A:8240  EB 4D				jmp	short loc_1357		; (828F)
020A:8242			loc_1353:
020A:8242  80 F9 20				cmp	cl,20h			; ' '
020A:8245  75 02				jne	loc_1354		; Jump if not equal
020A:8247  B1 30				mov	cl,30h			; '0'
020A:8249			loc_1354:
020A:8249  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:824E  4D					dec	bp
020A:824F  3E: 88 4E 00				mov	ds:[bp],cl
020A:8253  83 C5 02				add	bp,2
020A:8256  3E: 80 7E 00 20			cmp	byte ptr ds:[bp],20h	; ' '
020A:825B  75 05				jne	loc_1355		; Jump if not equal
020A:825D  3E: C6 46 00 30			mov	byte ptr ds:[bp],30h	; '0'
020A:8262			loc_1355:
020A:8262  45					inc	bp
020A:8263  3E: 80 7E 00 20			cmp	byte ptr ds:[bp],20h	; ' '
020A:8268  75 05				jne	loc_1356		; Jump if not equal
020A:826A  3E: C6 46 00 30			mov	byte ptr ds:[bp],30h	; '0'
020A:826F			loc_1356:
020A:826F  BD 0699				mov	bp,699h
020A:8272  B3 01				mov	bl,1
020A:8274  9A 16BF:00D4		;*		call	far ptr sub_175		;*(16BF:00D4)
020A:8274  9A D4 00 BF 16			db	 9Ah,0D4h, 00h,0BFh, 16h
020A:8279  83 ED 04				sub	bp,4
020A:827C  3E: 8B 46 00				mov	ax,ds:[bp]
020A:8280  80 FC 20				cmp	ah,20h			; ' '
020A:8283  74 0A				je	loc_1357		; Jump if equal
020A:8285  3E: C6 46 01 2C			mov	byte ptr ds:[bp+1],2Ch	; ','
020A:828A  4D					dec	bp
020A:828B  3E: 89 46 00				mov	ds:[bp],ax
020A:828F			loc_1357:
020A:828F  5A					pop	dx
020A:8290  C3					retn
				sub_108		endp
  
020A:8291  87 DB				xchg	bx,bx
020A:8293  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_109		proc	near
020A:8294  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:8299  06					push	es
020A:829A  E8 15C1				call	sub_145			; (985E)
020A:829D  8A E6				mov	ah,dh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 268

020A:829F  8A 36 2A77				mov	dh,byte ptr ds:[2A77h]	; (9B68:2A77=0ABh)
020A:82A3  BE 1314				mov	si,1314h
020A:82A6  BF 0719				mov	di,719h
020A:82A9  B9 1320				mov	cx,1320h
020A:82AC  81 E9 1314				sub	cx,1314h
020A:82B0  BB 1ABA				mov	bx,1ABAh
020A:82B3			loc_1358:
020A:82B3  2E: 3A 37				cmp	dh,cs:[bx]
020A:82B6  74 0D				je	loc_1360		; Jump if equal
020A:82B8  43					inc	bx
020A:82B9  03 F1				add	si,cx
020A:82BB  2E: 80 3F 00				cmp	byte ptr cs:[bx],0
020A:82BF  74 02				je	loc_1359		; Jump if equal
020A:82C1  EB F0				jmp	short loc_1358		; (82B3)
020A:82C3			loc_1359:
020A:82C3  EB 00				jmp	short loc_1360		; (82C5)
020A:82C5			loc_1360:
020A:82C5  FC					cld				; Clear direction
020A:82C6  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:82C8  8A 36 2A79				mov	dh,byte ptr ds:[2A79h]	; (9B68:2A79=20h)
020A:82CC  BE 1380				mov	si,1380h
020A:82CF  BF 070E				mov	di,70Eh
020A:82D2  B9 1385				mov	cx,1385h
020A:82D5  81 E9 1380				sub	cx,1380h
020A:82D9  F6 C6 0F				test	dh,0Fh
020A:82DC  74 30				jz	loc_1362		; Jump if zero
020A:82DE  03 F1				add	si,cx
020A:82E0  F6 C6 01				test	dh,1
020A:82E3  75 29				jnz	loc_1362		; Jump if not zero
020A:82E5  03 F1				add	si,cx
020A:82E7  F6 C6 02				test	dh,2
020A:82EA  75 22				jnz	loc_1362		; Jump if not zero
020A:82EC  03 F1				add	si,cx
020A:82EE  52					push	dx
020A:82EF  8A D6				mov	dl,dh
020A:82F1  80 E2 FB				and	dl,0FBh
020A:82F4  F6 C2 14				test	dl,14h
020A:82F7  5A					pop	dx
020A:82F8  74 06				jz	loc_1361		; Jump if zero
020A:82FA  03 F1				add	si,cx
020A:82FC  03 F1				add	si,cx
020A:82FE  EB 0E				jmp	short loc_1362		; (830E)
020A:8300			loc_1361:
020A:8300  52					push	dx
020A:8301  8A D6				mov	dl,dh
020A:8303  80 E2 FB				and	dl,0FBh
020A:8306  F6 C2 0C				test	dl,0Ch
020A:8309  5A					pop	dx
020A:830A  74 02				jz	loc_1362		; Jump if zero
020A:830C  03 F1				add	si,cx
020A:830E			loc_1362:
020A:830E  FC					cld				; Clear direction
020A:830F  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8311  80 FC 00				cmp	ah,0
020A:8314  74 55				je	loc_1366		; Jump if equal
020A:8316  80 3E 1309 01			cmp	byte ptr ds:[1309h],1	; (9B68:1309=0A2h)
020A:831B  75 05				jne	loc_1363		; Jump if not equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 269

020A:831D  E8 FD60		;*		call	sub_103			;*(8080)
020A:831D  E8 60 FD				db	0E8h, 60h,0FDh
020A:8320  EB 49				jmp	short loc_1366		; (836B)
020A:8322			loc_1363:
020A:8322  BE 0719				mov	si,719h
020A:8325  BF 0719				mov	di,719h
020A:8328  81 EF 0076				sub	di,76h
020A:832C  D1 E7				shl	di,1			; Shift w/zeros fill
020A:832E  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:8332  A1 12FB				mov	ax,word ptr ds:[12FBh]	; (9B68:12FB=0A0AFh)
020A:8335  8E C0				mov	es,ax
020A:8337  B9 1320				mov	cx,1320h
020A:833A  81 E9 1314				sub	cx,1314h
  
020A:833E			locloop_1364:
020A:833E  8A 24				mov	ah,[si]
020A:8340  E8 FE3D				call	sub_107			; (8180)
020A:8343  83 C7 02				add	di,2
020A:8346  46					inc	si
020A:8347  E2 F5				loop	locloop_1364		; Loop if cx > 0
  
020A:8349  BE 070E				mov	si,70Eh
020A:834C  BF 070E				mov	di,70Eh
020A:834F  81 EF 0076				sub	di,76h
020A:8353  D1 E7				shl	di,1			; Shift w/zeros fill
020A:8355  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:8359  B9 1385				mov	cx,1385h
020A:835C  81 E9 1380				sub	cx,1380h
  
020A:8360			locloop_1365:
020A:8360  8A 24				mov	ah,[si]
020A:8362  E8 FE1B				call	sub_107			; (8180)
020A:8365  83 C7 02				add	di,2
020A:8368  46					inc	si
020A:8369  E2 F5				loop	locloop_1365		; Loop if cx > 0
  
020A:836B			loc_1366:
020A:836B  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8370  5A					pop	dx
020A:8371  8E C2				mov	es,dx
020A:8373  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:8378  5A					pop	dx
020A:8379  75 0A				jnz	loc_1367		; Jump if not zero
020A:837B  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:8380  74 03				je	loc_1367		; Jump if equal
020A:8382  E8 17AF				call	sub_151			; (9B34)
020A:8385			loc_1367:
020A:8385  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:838A  C3					retn
				sub_109		endp
  
020A:838B  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 270

				sub_110		proc	near
020A:838C  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:8390  B9 0011				mov	cx,11h
  
020A:8393			locloop_1368:
020A:8393  C6 47 30 07				mov	byte ptr [bx+30h],7
020A:8397  43					inc	bx
020A:8398  E2 F9				loop	locloop_1368		; Loop if cx > 0
  
020A:839A  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:839E  80 3E 2EBD 01			cmp	byte ptr ds:[2EBDh],1	; (9B68:2EBD=0EEh)
020A:83A3  74 0C				je	loc_1369		; Jump if equal
020A:83A5  C6 47 30 00				mov	byte ptr [bx+30h],0
020A:83A9  C6 47 33 00				mov	byte ptr [bx+33h],0
020A:83AD  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:83B1			loc_1369:
020A:83B1  C3					retn
				sub_110		endp
  
020A:83B2  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_111		proc	near
020A:83B4  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:83B8  B9 0011				mov	cx,11h
  
020A:83BB			locloop_1370:
020A:83BB  C6 47 30 0F				mov	byte ptr [bx+30h],0Fh
020A:83BF  43					inc	bx
020A:83C0  E2 F9				loop	locloop_1370		; Loop if cx > 0
  
020A:83C2  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:83C6  80 3E 2EBD 01			cmp	byte ptr ds:[2EBDh],1	; (9B68:2EBD=0EEh)
020A:83CB  74 0C				je	loc_1371		; Jump if equal
020A:83CD  C6 47 30 00				mov	byte ptr [bx+30h],0
020A:83D1  C6 47 33 00				mov	byte ptr [bx+33h],0
020A:83D5  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:83D9			loc_1371:
020A:83D9  2E: 80 3E 4CE7 01			cmp	byte ptr cs:data_526+47h,1	; (020A:4CE7=42h)
020A:83DF  75 04				jne	loc_1372		; Jump if not equal
020A:83E1  C6 47 38 07				mov	byte ptr [bx+38h],7
020A:83E5			loc_1372:
020A:83E5  C3					retn
				sub_111		endp
  
020A:83E6  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_112		proc	near
020A:83E8  57					push	di
020A:83E9  56					push	si
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 271

020A:83EA  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:83EF  06					push	es
020A:83F0  E8 146B				call	sub_145			; (985E)
020A:83F3  B9 15FB				mov	cx,15FBh
020A:83F6  81 E9 15B1				sub	cx,15B1h
020A:83FA  BE 15B1				mov	si,15B1h
020A:83FD  8A C1				mov	al,cl
020A:83FF  F6 E4				mul	ah			; ax = reg * al
020A:8401  03 F0				add	si,ax
020A:8403  BF 07A9				mov	di,7A9h
020A:8406  FC					cld				; Clear direction
020A:8407  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8409  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:840E  5A					pop	dx
020A:840F  8E C2				mov	es,dx
020A:8411  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:8416  5A					pop	dx
020A:8417  75 0A				jnz	loc_1373		; Jump if not zero
020A:8419  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:841E  74 03				je	loc_1373		; Jump if equal
020A:8420  E8 1711				call	sub_151			; (9B34)
020A:8423			loc_1373:
020A:8423  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:8428  5E					pop	si
020A:8429  5F					pop	di
020A:842A  C3					retn
				sub_112		endp
  
020A:842B  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_113		proc	near
020A:842C  50					push	ax
020A:842D  53					push	bx
020A:842E  51					push	cx
020A:842F  52					push	dx
020A:8430  56					push	si
020A:8431  57					push	di
020A:8432  55					push	bp
020A:8433  06					push	es
020A:8434  BD 068E				mov	bp,68Eh
020A:8437  A1 2A63				mov	ax,word ptr ds:[2A63h]	; (B9E8:2A63=2007h)
020A:843A  B3 01				mov	bl,1
020A:843C  9A 16BF:00D4		;*		call	far ptr sub_175		;*(16BF:00D4)
020A:843C  9A D4 00 BF 16			db	 9Ah,0D4h, 00h,0BFh, 16h
020A:8441  BD 072E				mov	bp,72Eh
020A:8444  A1 2A67				mov	ax,word ptr ds:[2A67h]	; (B9E8:2A67=2007h)
020A:8447  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:844D  75 04				jne	loc_1374		; Jump if not equal
020A:844F  03 06 2A6F				add	ax,word ptr ds:[2A6Fh]	; (B9E8:2A6F=2007h)
020A:8453			loc_1374:
020A:8453  B3 01				mov	bl,1
020A:8455  9A 16BF:00D4		;*		call	far ptr sub_175		;*(16BF:00D4)
020A:8455  9A D4 00 BF 16			db	 9Ah,0D4h, 00h,0BFh, 16h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 272

020A:845A  BD 06DE				mov	bp,6DEh
020A:845D  A1 2A6B				mov	ax,word ptr ds:[2A6Bh]	; (B9E8:2A6B=2007h)
020A:8460  B3 01				mov	bl,1
020A:8462  9A 16BF:00D4		;*		call	far ptr sub_175		;*(16BF:00D4)
020A:8462  9A D4 00 BF 16			db	 9Ah,0D4h, 00h,0BFh, 16h
020A:8467  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (B9E8:1306=720h)
020A:846B  80 7F 4E 00				cmp	byte ptr [bx+4Eh],0
020A:846F  75 03				jne	loc_1375		; Jump if not equal
020A:8471  E9 0090				jmp	loc_1382		; (8504)
020A:8474			loc_1375:
020A:8474  BE 068E				mov	si,68Eh
020A:8477  B9 0005				mov	cx,5
020A:847A  80 3E 1309 01			cmp	byte ptr ds:[1309h],1	; (B9E8:1309=7)
020A:847F  75 29				jne	loc_1378		; Jump if not equal
020A:8481  B3 03				mov	bl,3
020A:8483  BA 1328				mov	dx,1328h
020A:8486			loc_1376:
020A:8486  B4 02				mov	ah,2
020A:8488  32 FF				xor	bh,bh			; Zero register
020A:848A  E8 03B7				call	sub_121			; (8844)
020A:848D  FC					cld				; Clear direction
020A:848E  B9 0005				mov	cx,5
020A:8491  52					push	dx
  
020A:8492			locloop_1377:
020A:8492  AC					lodsb				; String [si] to al
020A:8493  8A D0				mov	dl,al
020A:8495  9A 16BF:0350		;*		call	far ptr sub_181		;*(16BF:0350)
020A:8495  9A 50 03 BF 16			db	 9Ah, 50h, 03h,0BFh, 16h
020A:849A  E2 F6				loop	locloop_1377		; Loop if cx > 0
  
020A:849C  5A					pop	dx
020A:849D  81 C2 0100				add	dx,100h
020A:84A1  83 C6 4B				add	si,4Bh
020A:84A4  FE CB				dec	bl
020A:84A6  75 DE				jnz	loc_1376		; Jump if not zero
020A:84A8  EB 5A				jmp	short loc_1382		; (8504)
020A:84AA			loc_1378:
020A:84AA  A1 12FB				mov	ax,word ptr ds:[12FBh]	; (B9E8:12FB=2007h)
020A:84AD  8E C0				mov	es,ax
020A:84AF  BF 068E				mov	di,68Eh
020A:84B2  81 EF 0076				sub	di,76h
020A:84B6  D1 E7				shl	di,1			; Shift w/zeros fill
020A:84B8  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (B9E8:12FD=2007h)
  
020A:84BC			locloop_1379:
020A:84BC  FC					cld				; Clear direction
020A:84BD  AC					lodsb				; String [si] to al
020A:84BE  8A E0				mov	ah,al
020A:84C0  E8 FCBD				call	sub_107			; (8180)
020A:84C3  83 C7 02				add	di,2
020A:84C6  E2 F4				loop	locloop_1379		; Loop if cx > 0
  
020A:84C8  BE 06DE				mov	si,6DEh
020A:84CB  BF 06DE				mov	di,6DEh
020A:84CE  81 EF 0076				sub	di,76h
020A:84D2  D1 E7				shl	di,1			; Shift w/zeros fill
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 273

020A:84D4  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (B9E8:12FD=2007h)
020A:84D8  B9 0005				mov	cx,5
  
020A:84DB			locloop_1380:
020A:84DB  AC					lodsb				; String [si] to al
020A:84DC  8A E0				mov	ah,al
020A:84DE  E8 FC9F				call	sub_107			; (8180)
020A:84E1  83 C7 02				add	di,2
020A:84E4  E2 F5				loop	locloop_1380		; Loop if cx > 0
  
020A:84E6  BE 072E				mov	si,72Eh
020A:84E9  BF 072E				mov	di,72Eh
020A:84EC  81 EF 0076				sub	di,76h
020A:84F0  D1 E7				shl	di,1			; Shift w/zeros fill
020A:84F2  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (B9E8:12FD=2007h)
020A:84F6  B9 0005				mov	cx,5
  
020A:84F9			locloop_1381:
020A:84F9  AC					lodsb				; String [si] to al
020A:84FA  8A E0				mov	ah,al
020A:84FC  E8 FC81				call	sub_107			; (8180)
020A:84FF  83 C7 02				add	di,2
020A:8502  E2 F5				loop	locloop_1381		; Loop if cx > 0
  
020A:8504			loc_1382:
020A:8504  07					pop	es
020A:8505  5D					pop	bp
020A:8506  5F					pop	di
020A:8507  5E					pop	si
020A:8508  5A					pop	dx
020A:8509  59					pop	cx
020A:850A  5B					pop	bx
020A:850B  58					pop	ax
020A:850C  C3					retn
				sub_113		endp
  
020A:850D  87 DB				xchg	bx,bx
020A:850F  90					nop
020A:8510  50					push	ax
020A:8511  53					push	bx
020A:8512  51					push	cx
020A:8513  52					push	dx
020A:8514  57					push	di
020A:8515  55					push	bp
020A:8516  06					push	es
020A:8517  A1 2D82				mov	ax,data_383		; (020A:2D82=3233h)
020A:851A  BD 07BC				mov	bp,7BCh
020A:851D  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:851D  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:8522  A1 2D84				mov	ax,data_384		; (020A:2D84=433Bh)
020A:8525  45					inc	bp
020A:8526  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:8526  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:852B  A1 12FB				mov	ax,data_212		; (020A:12FB=0)
020A:852E  8E C0				mov	es,ax
020A:8530  BF 07A9				mov	di,7A9h
020A:8533  83 C7 13				add	di,13h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 274

020A:8536  81 EF 0076				sub	di,76h
020A:853A  D1 E7				shl	di,1			; Shift w/zeros fill
020A:853C  03 3E 12FD				add	di,data_213		; (020A:12FD=0)
020A:8540  BD 07BC				mov	bp,7BCh
020A:8543  B9 0009				mov	cx,9
  
020A:8546			locloop_1383:
020A:8546  3E: 8A 66 00				mov	ah,ds:[bp]
020A:854A  E8 FC33				call	sub_107			; (8180)
020A:854D  47					inc	di
020A:854E  47					inc	di
020A:854F  45					inc	bp
020A:8550  E2 F4				loop	locloop_1383		; Loop if cx > 0
  
020A:8552  8B 1E 2D88				mov	bx,data_386		; (020A:2D88=4957h)
020A:8556  2B 1E 2D86				sub	bx,data_385		; (020A:2D86=5C3Ah)
020A:855A  74 70				jz	loc_1386		; Jump if zero
020A:855C  A1 2D84				mov	ax,data_384		; (020A:2D84=433Bh)
020A:855F  2B 06 2D86				sub	ax,data_385		; (020A:2D86=5C3Ah)
020A:8563  B9 0040				mov	cx,40h
020A:8566  F7 E1				mul	cx			; dx:ax = reg * ax
020A:8568  F7 F3				div	bx			; ax,dx rem=dx:ax/reg
020A:856A  8B 0E 2D84				mov	cx,data_384		; (020A:2D84=433Bh)
020A:856E  3B 0E 2A3E				cmp	cx,data_350		; (020A:2A3E=0AF20h)
020A:8572  74 06				je	loc_1384		; Jump if equal
020A:8574  3B 06 2D8A				cmp	ax,data_387		; (020A:2D8A=444Eh)
020A:8578  74 52				je	loc_1386		; Jump if equal
020A:857A			loc_1384:
020A:857A  8B D0				mov	dx,ax
020A:857C  BF 07A9				mov	di,7A9h
020A:857F  83 C7 1E				add	di,1Eh
020A:8582  81 EF 0076				sub	di,76h
020A:8586  D1 E7				shl	di,1			; Shift w/zeros fill
020A:8588  03 3E 12FD				add	di,data_213		; (020A:12FD=0)
020A:858C  A1 2D8A				mov	ax,data_387		; (020A:2D8A=444Eh)
020A:858F  24 FE				and	al,0FEh
020A:8591  03 F8				add	di,ax
020A:8593  B4 FA				mov	ah,0FAh
020A:8595  E8 FBE8				call	sub_107			; (8180)
020A:8598  47					inc	di
020A:8599  B4 0F				mov	ah,0Fh
020A:859B  E8 FBE2				call	sub_107			; (8180)
020A:859E  89 16 2D8A				mov	data_387,dx		; (020A:2D8A=444Eh)
020A:85A2  BF 07A9				mov	di,7A9h
020A:85A5  83 C7 1E				add	di,1Eh
020A:85A8  81 EF 0076				sub	di,76h
020A:85AC  D1 E7				shl	di,1			; Shift w/zeros fill
020A:85AE  03 3E 12FD				add	di,data_213		; (020A:12FD=0)
020A:85B2  B4 DD				mov	ah,0DDh
020A:85B4  F7 C2 0001				test	dx,1
020A:85B8  74 02				jz	loc_1385		; Jump if zero
020A:85BA  B4 DE				mov	ah,0DEh
020A:85BC			loc_1385:
020A:85BC  80 E2 FE				and	dl,0FEh
020A:85BF  03 FA				add	di,dx
020A:85C1  E8 FBBC				call	sub_107			; (8180)
020A:85C4  47					inc	di
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 275

020A:85C5  8A 26 11E7				mov	ah,data_210		; (020A:11E7=0)
020A:85C9  E8 FBB4				call	sub_107			; (8180)
020A:85CC			loc_1386:
020A:85CC  07					pop	es
020A:85CD  5D					pop	bp
020A:85CE  5F					pop	di
020A:85CF  5A					pop	dx
020A:85D0  59					pop	cx
020A:85D1  5B					pop	bx
020A:85D2  58					pop	ax
020A:85D3  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_114		proc	near
020A:85D4  52					push	dx
020A:85D5  51					push	cx
020A:85D6  56					push	si
020A:85D7  57					push	di
020A:85D8  06					push	es
020A:85D9  E8 1282				call	sub_145			; (985E)
020A:85DC  BE 1595				mov	si,1595h
020A:85DF  F6 06 1594 03			test	byte ptr ds:[1594h],3	; (9B68:1594=20h)
020A:85E4  75 03				jnz	loc_1387		; Jump if not zero
020A:85E6  BE 15A3				mov	si,15A3h
020A:85E9			loc_1387:
020A:85E9  BF 06B9				mov	di,6B9h
020A:85EC  B9 15A3				mov	cx,15A3h
020A:85EF  81 E9 1595				sub	cx,1595h
020A:85F3  FC					cld				; Clear direction
020A:85F4  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:85F6  32 D2				xor	dl,dl			; Zero register
020A:85F8  E8 125A				call	sub_142			; (9855)
020A:85FB  26: A1 0000				mov	ax,word ptr es:[0]	; (A0AF:0000=0)
020A:85FF  3D FFFF				cmp	ax,0FFFFh
020A:8602  75 04				jne	loc_1388		; Jump if not equal
020A:8604  B2 01				mov	dl,1
020A:8606  33 C0				xor	ax,ax			; Zero register
020A:8608			loc_1388:
020A:8608  BD 0679				mov	bp,679h
020A:860B  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:860B  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:8610  26: A1 0002				mov	ax,word ptr es:[2]	; (A0AF:0002=0)
020A:8614  0A D2				or	dl,dl			; Zero ?
020A:8616  74 02				jz	loc_1389		; Jump if zero
020A:8618  33 C0				xor	ax,ax			; Zero register
020A:861A			loc_1389:
020A:861A  BD 067E				mov	bp,67Eh
020A:861D  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:861D  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:8622  BE 0000				mov	si,0
020A:8625  F6 06 1594 03			test	byte ptr ds:[1594h],3	; (9B68:1594=20h)
020A:862A  75 0B				jnz	loc_1390		; Jump if not zero
020A:862C  A0 2A2B				mov	al,byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:862F  FE C8				dec	al
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 276

020A:8631  B3 15				mov	bl,15h
020A:8633  F6 E3				mul	bl			; ax = reg * al
020A:8635  03 F0				add	si,ax
020A:8637			loc_1390:
020A:8637  26: 8B 04				mov	ax,es:[si]
020A:863A  0A D2				or	dl,dl			; Zero ?
020A:863C  74 02				jz	loc_1391		; Jump if zero
020A:863E  33 C0				xor	ax,ax			; Zero register
020A:8640			loc_1391:
020A:8640  BD 06C9				mov	bp,6C9h
020A:8643  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:8643  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:8648  26: 8B 44 04				mov	ax,es:[si+4]
020A:864C  BD 06CE				mov	bp,6CEh
020A:864F  0A D2				or	dl,dl			; Zero ?
020A:8651  74 02				jz	loc_1392		; Jump if zero
020A:8653  33 C0				xor	ax,ax			; Zero register
020A:8655			loc_1392:
020A:8655  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:8655  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:865A  07					pop	es
020A:865B  5F					pop	di
020A:865C  5E					pop	si
020A:865D  5A					pop	dx
020A:865E  59					pop	cx
020A:865F  E8 11E7				call	sub_140			; (9849)
020A:8662  C3					retn
				sub_114		endp
  
020A:8663  90					nop
020A:8664  BF 2D5B				mov	di,2D5Bh
020A:8667  57					push	di
020A:8668  B9 003C				mov	cx,3Ch
020A:866B  B3 00				mov	bl,0
  
020A:866D			locloop_1393:
020A:866D  26: 8A 04				mov	al,es:[si]
020A:8670  3C 20				cmp	al,20h			; ' '
020A:8672  72 0B				jb	loc_1394		; Jump if below
020A:8674  3C 80				cmp	al,80h
020A:8676  73 07				jae	loc_1394		; Jump if above or =
020A:8678  88 05				mov	[di],al
020A:867A  FE C3				inc	bl
020A:867C  47					inc	di
020A:867D  EB 0E				jmp	short loc_1395		; (868D)
020A:867F			loc_1394:
020A:867F  80 FB 00				cmp	bl,0
020A:8682  74 09				je	loc_1395		; Jump if equal
020A:8684  80 FB 08				cmp	bl,8
020A:8687  77 0C				ja	loc_1396		; Jump if above
020A:8689  5F					pop	di
020A:868A  57					push	di
020A:868B  B3 00				mov	bl,0
020A:868D			loc_1395:
020A:868D  46					inc	si
020A:868E  80 FB 20				cmp	bl,20h			; ' '
020A:8691  77 02				ja	loc_1396		; Jump if above
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 277

020A:8693  E2 D8				loop	locloop_1393		; Loop if cx > 0
  
020A:8695			loc_1396:
020A:8695  5F					pop	di
020A:8696  C3					retn
020A:8697  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_115		proc	near
020A:8698  50					push	ax
020A:8699  B5 20				mov	ch,20h			; ' '
020A:869B  B4 01				mov	ah,1
020A:869D  E8 01A4				call	sub_121			; (8844)
020A:86A0  58					pop	ax
020A:86A1  C3					retn
				sub_115		endp
  
020A:86A2  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_116		proc	near
020A:86A4  50					push	ax
020A:86A5  8B 0E 2A91				mov	cx,word ptr ds:[2A91h]	; (9B68:2A91=0AAE2h)
020A:86A9  B4 01				mov	ah,1
020A:86AB  E8 0196				call	sub_121			; (8844)
020A:86AE  58					pop	ax
020A:86AF  C3					retn
				sub_116		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_117		proc	near
020A:86B0  06					push	es
020A:86B1  A1 12FB				mov	ax,word ptr ds:[12FBh]	; (9B68:12FB=0A0AFh)
020A:86B4  8E C0				mov	es,ax
020A:86B6  BF 06E7				mov	di,6E7h
020A:86B9  81 EF 0643				sub	di,643h
020A:86BD  81 C7 0190				add	di,190h
020A:86C1  D1 E7				shl	di,1			; Shift w/zeros fill
020A:86C3  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:86C7  B9 0019				mov	cx,19h
020A:86CA  B2 41				mov	dl,41h			; 'A'
020A:86CC  B6 61				mov	dh,61h			; 'a'
  
020A:86CE			locloop_1397:
020A:86CE  8A E2				mov	ah,dl
020A:86D0  A0 11E7				mov	al,byte ptr ds:[11E7h]	; (9B68:11E7=0A8h)
020A:86D3  F7 C3 8000				test	bx,8000h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 278

020A:86D7  75 04				jnz	loc_1398		; Jump if not zero
020A:86D9  8A E6				mov	ah,dh
020A:86DB  B0 07				mov	al,7
020A:86DD			loc_1398:
020A:86DD  E8 FAA0				call	sub_107			; (8180)
020A:86E0  47					inc	di
020A:86E1  8A E0				mov	ah,al
020A:86E3  E8 FA9A				call	sub_107			; (8180)
020A:86E6  81 C7 009F				add	di,9Fh
020A:86EA  FE C2				inc	dl
020A:86EC  FE C6				inc	dh
020A:86EE  D1 C3				rol	bx,1			; Rotate
020A:86F0  83 F9 0C				cmp	cx,0Ch
020A:86F3  75 11				jne	loc_1399		; Jump if not equal
020A:86F5  BF 070D				mov	di,70Dh
020A:86F8  81 EF 0643				sub	di,643h
020A:86FC  81 C7 0190				add	di,190h
020A:8700  D1 E7				shl	di,1			; Shift w/zeros fill
020A:8702  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:8706			loc_1399:
020A:8706  83 F9 0A				cmp	cx,0Ah
020A:8709  75 0E				jne	loc_1400		; Jump if not equal
020A:870B  81 C7 01E0				add	di,1E0h
020A:870F  8A 3E 430B				mov	bh,byte ptr ds:[430Bh]	; (9B68:430B=0)
020A:8713  D0 CF				ror	bh,1			; Rotate
020A:8715  D0 CF				ror	bh,1			; Rotate
020A:8717  D0 CF				ror	bh,1			; Rotate
020A:8719			loc_1400:
020A:8719  83 F9 06				cmp	cx,6
020A:871C  75 04				jne	loc_1401		; Jump if not equal
020A:871E  8A 3E 42CE				mov	bh,byte ptr ds:[42CEh]	; (9B68:42CE=0)
020A:8722			loc_1401:
020A:8722  E2 AA				loop	locloop_1397		; Loop if cx > 0
  
020A:8724  07					pop	es
020A:8725  C3					retn
				sub_117		endp
  
020A:8726  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_118		proc	near
020A:8728  51					push	cx
020A:8729  57					push	di
020A:872A  56					push	si
020A:872B  06					push	es
020A:872C  E8 112F				call	sub_145			; (985E)
020A:872F  BE 14A6				mov	si,14A6h
020A:8732  BF 02EF				mov	di,2EFh
020A:8735  B9 0003				mov	cx,3
020A:8738  F6 06 430B 07			test	byte ptr ds:[430Bh],7	; (9B68:430B=0)
020A:873D  75 02				jnz	loc_1402		; Jump if not zero
020A:873F  03 F1				add	si,cx
020A:8741			loc_1402:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 279

020A:8741  FC					cld				; Clear direction
020A:8742  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8744  BE 02EF				mov	si,2EFh
020A:8747  BF 02EF				mov	di,2EFh
020A:874A  81 EF 0076				sub	di,76h
020A:874E  D1 E7				shl	di,1			; Shift w/zeros fill
020A:8750  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:8754  A1 12FB				mov	ax,word ptr ds:[12FBh]	; (9B68:12FB=0A0AFh)
020A:8757  8E C0				mov	es,ax
020A:8759  B9 0003				mov	cx,3
  
020A:875C			locloop_1403:
020A:875C  8A 24				mov	ah,[si]
020A:875E  E8 FA1F				call	sub_107			; (8180)
020A:8761  83 C7 02				add	di,2
020A:8764  46					inc	si
020A:8765  E2 F5				loop	locloop_1403		; Loop if cx > 0
  
020A:8767  07					pop	es
020A:8768  5E					pop	si
020A:8769  5F					pop	di
020A:876A  59					pop	cx
020A:876B  C3					retn
				sub_118		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_119		proc	near
020A:876C  E8 10EF				call	sub_145			; (985E)
020A:876F  A0 14AD				mov	al,byte ptr ds:[14ADh]	; (9B68:14AD=0E3h)
020A:8772  B9 14C5				mov	cx,14C5h
020A:8775  81 E9 14AE				sub	cx,14AEh
020A:8779  F6 E1				mul	cl			; ax = reg * al
020A:877B  05 14AE				add	ax,14AEh
020A:877E  8B F0				mov	si,ax
020A:8780  BF 0460				mov	di,460h
020A:8783  B9 14B9				mov	cx,14B9h
020A:8786  81 E9 14AE				sub	cx,14AEh
020A:878A  FC					cld				; Clear direction
020A:878B  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:878D  B9 14C5				mov	cx,14C5h
020A:8790  81 E9 14B9				sub	cx,14B9h
020A:8794  BF 0552				mov	di,552h
020A:8797  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8799  B9 151A				mov	cx,151Ah
020A:879C  81 E9 150A				sub	cx,150Ah
020A:87A0  BE 150A				mov	si,150Ah
020A:87A3  BF 046F				mov	di,46Fh
020A:87A6  F6 06 14AD 02			test	byte ptr ds:[14ADh],2	; (9B68:14AD=0E3h)
020A:87AB  74 03				jz	loc_1404		; Jump if zero
020A:87AD  BE 151A				mov	si,151Ah
020A:87B0			loc_1404:
020A:87B0  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:87B2  C3					retn
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 280

				sub_119		endp
  
020A:87B3  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_120		proc	near
020A:87B4  E8 10A7				call	sub_145			; (985E)
020A:87B7  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:87BB  C6 47 6F 00				mov	byte ptr [bx+6Fh],0
020A:87BF  C6 47 5C 00				mov	byte ptr [bx+5Ch],0
020A:87C3  C6 47 6E 00				mov	byte ptr [bx+6Eh],0
020A:87C7  A0 152A				mov	al,byte ptr ds:[152Ah]	; (9B68:152A=20h)
020A:87CA  A8 01				test	al,1
020A:87CC  74 04				jz	loc_1405		; Jump if zero
020A:87CE  C6 47 6F 07				mov	byte ptr [bx+6Fh],7
020A:87D2			loc_1405:
020A:87D2  A8 02				test	al,2
020A:87D4  74 04				jz	loc_1406		; Jump if zero
020A:87D6  C6 47 5C 07				mov	byte ptr [bx+5Ch],7
020A:87DA			loc_1406:
020A:87DA  A8 04				test	al,4
020A:87DC  74 04				jz	loc_1407		; Jump if zero
020A:87DE  C6 47 6E 07				mov	byte ptr [bx+6Eh],7
020A:87E2			loc_1407:
020A:87E2  BB 1534				mov	bx,1534h
020A:87E5  D7					xlat				; al=[al+[bx]] table
020A:87E6  8A E0				mov	ah,al
020A:87E8  25 0FF0				and	ax,0FF0h
020A:87EB  B1 04				mov	cl,4
020A:87ED  D2 C8				ror	al,cl			; Rotate
020A:87EF  8A DC				mov	bl,ah
020A:87F1  32 E4				xor	ah,ah			; Zero register
020A:87F3  B9 1542				mov	cx,1542h
020A:87F6  81 E9 153C				sub	cx,153Ch
020A:87FA  F6 E1				mul	cl			; ax = reg * al
020A:87FC  05 153C				add	ax,153Ch
020A:87FF  8B F0				mov	si,ax
020A:8801  BF 051D				mov	di,51Dh
020A:8804  FC					cld				; Clear direction
020A:8805  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8807  B8 1564				mov	ax,1564h
020A:880A  2D 1554				sub	ax,1554h
020A:880D  8B C8				mov	cx,ax
020A:880F  F6 E3				mul	bl			; ax = reg * al
020A:8811  8B F0				mov	si,ax
020A:8813  81 C6 1554				add	si,1554h
020A:8817  BF 0563				mov	di,563h
020A:881A  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:881C  C3					retn
				sub_120		endp
  
020A:881D  87 DB				xchg	bx,bx
020A:881F  90					nop
020A:8820  50					push	ax
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 281

020A:8821  53					push	bx
020A:8822  8A E0				mov	ah,al
020A:8824  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (020A:1306=0)
020A:8828  A0 11E8				mov	al,data_211		; (020A:11E8=0)
020A:882B  88 47 52				mov	[bx+52h],al
020A:882E  E8 FBB7				call	sub_112			; (83E8)
020A:8831  E8 F84C		;*		call	sub_103			;*(8080)
020A:8831  E8 4C F8				db	0E8h, 4Ch,0F8h
020A:8834  9A 16BF:0340		;*		call	far ptr sub_180		;*(16BF:0340)
020A:8834  9A 40 03 BF 16			db	 9Ah, 40h, 03h,0BFh, 16h
020A:8839  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (020A:1306=0)
020A:883D  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:8841  5B					pop	bx
020A:8842  58					pop	ax
020A:8843  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_121		proc	near
020A:8844  80 3E 2642 01			cmp	byte ptr ds:[2642h],1	; (9B68:2642=0A8h)
020A:8849  74 02				je	loc_1408		; Jump if equal
020A:884B  EB 58				jmp	short loc_1411		; (88A5)
020A:884D			loc_1408:
020A:884D  80 FC 02				cmp	ah,2
020A:8850  74 02				je	loc_1409		; Jump if equal
020A:8852  EB 53				jmp	short loc_1412		; (88A7)
020A:8854			loc_1409:
020A:8854  50					push	ax
020A:8855  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:885A  1E					push	ds
020A:885B  E8 0FEB				call	sub_140			; (9849)
020A:885E  8A C6				mov	al,dh
020A:8860  FE C0				inc	al
020A:8862  D4 0A				aam				; Ascii adjust
020A:8864  0D 3030				or	ax,3030h
020A:8867  86 E0				xchg	ah,al
020A:8869  A3 2646				mov	word ptr ds:[2646h],ax	; (9B68:2646=20AEh)
020A:886C  8A C2				mov	al,dl
020A:886E  FE C0				inc	al
020A:8870  D4 0A				aam				; Ascii adjust
020A:8872  0D 3030				or	ax,3030h
020A:8875  86 E0				xchg	ah,al
020A:8877  A3 2649				mov	word ptr ds:[2649h],ax	; (9B68:2649=0AAA5h)
020A:887A  52					push	dx
020A:887B  BA 2644				mov	dx,2644h
020A:887E  B4 09				mov	ah,9
020A:8880  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020A:8882  5A					pop	dx
020A:8883  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8888  5A					pop	dx
020A:8889  8E DA				mov	ds,dx
020A:888B  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:8890  5A					pop	dx
020A:8891  75 0A				jnz	loc_1410		; Jump if not zero
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 282

020A:8893  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:8898  74 03				je	loc_1410		; Jump if equal
020A:889A  E8 1297				call	sub_151			; (9B34)
020A:889D			loc_1410:
020A:889D  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:88A2  58					pop	ax
020A:88A3  EB 02				jmp	short loc_1412		; (88A7)
020A:88A5			loc_1411:
020A:88A5  CD 10				int	10h			; Video display   ah=functn 02h
										;  set cursor location in dx
020A:88A7			loc_1412:
020A:88A7  C3					retn
				sub_121		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_122		proc	near
020A:88A8  52					push	dx
020A:88A9  50					push	ax
020A:88AA  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:88AF  1E					push	ds
020A:88B0  E8 0F96				call	sub_140			; (9849)
020A:88B3  BA 2651				mov	dx,2651h
020A:88B6  B4 09				mov	ah,9
020A:88B8  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020A:88BA  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:88BF  5A					pop	dx
020A:88C0  8E DA				mov	ds,dx
020A:88C2  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:88C7  5A					pop	dx
020A:88C8  75 0A				jnz	loc_1413		; Jump if not zero
020A:88CA  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:88CF  74 03				je	loc_1413		; Jump if equal
020A:88D1  E8 1260				call	sub_151			; (9B34)
020A:88D4			loc_1413:
020A:88D4  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:88D9  58					pop	ax
020A:88DA  5A					pop	dx
020A:88DB  C3					retn
				sub_122		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_123		proc	near
020A:88DC  52					push	dx
020A:88DD  50					push	ax
020A:88DE  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:88E3  1E					push	ds
020A:88E4  E8 0F62				call	sub_140			; (9849)
020A:88E7  BA 264D				mov	dx,264Dh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 283

020A:88EA  B4 09				mov	ah,9
020A:88EC  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020A:88EE  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:88F3  5A					pop	dx
020A:88F4  8E DA				mov	ds,dx
020A:88F6  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:88FB  5A					pop	dx
020A:88FC  75 0A				jnz	loc_1414		; Jump if not zero
020A:88FE  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:8903  74 03				je	loc_1414		; Jump if equal
020A:8905  E8 122C				call	sub_151			; (9B34)
020A:8908			loc_1414:
020A:8908  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:890D  58					pop	ax
020A:890E  5A					pop	dx
020A:890F  C3					retn
				sub_123		endp
  
020A:8910  50					push	ax
020A:8911			loc_1415:
020A:8911  3E: 81 7E 00 2020			cmp	word ptr ds:[bp],2020h
020A:8917  74 05				je	loc_1416		; Jump if equal
020A:8919  45					inc	bp
020A:891A  FE C8				dec	al
020A:891C  75 F3				jnz	loc_1415		; Jump if not zero
020A:891E			loc_1416:
020A:891E  58					pop	ax
020A:891F  C3					retn
020A:8920  E8 0F3B				call	sub_145			; (985E)
020A:8923  8B 36 2D84				mov	si,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:8927  BF 2791				mov	di,2791h
020A:892A  A1 2D82				mov	ax,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:892D  8E D8				mov	ds,ax
020A:892F  B9 0010				mov	cx,10h
020A:8932  FC					cld				; Clear direction
020A:8933  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8935  E8 0F11				call	sub_140			; (9849)
020A:8938  BE 2791				mov	si,2791h
020A:893B  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_124		proc	near
020A:893C  53					push	bx
020A:893D  51					push	cx
020A:893E  56					push	si
020A:893F  8B DF				mov	bx,di
020A:8941  03 D9				add	bx,cx
020A:8943  26: 8A 45 05				mov	al,es:[di+5]
020A:8947  A8 02				test	al,2
020A:8949  74 03				jz	loc_1417		; Jump if zero
020A:894B  E9 019E				jmp	loc_1444		; (8AEC)
020A:894E			loc_1417:
020A:894E  24 0C				and	al,0Ch
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 284

020A:8950  B9 0001				mov	cx,1
020A:8953  80 3E 14AD 02			cmp	data_222,2		; (020A:14AD=0)
020A:8958  74 25				je	loc_1420		; Jump if equal
020A:895A  B9 0004				mov	cx,4
020A:895D  3C 04				cmp	al,4
020A:895F  74 1E				je	loc_1420		; Jump if equal
020A:8961  B9 0003				mov	cx,3
020A:8964  0A C0				or	al,al			; Zero ?
020A:8966  75 17				jnz	loc_1420		; Jump if not zero
020A:8968  26: 80 7D 06 FF			cmp	byte ptr es:[di+6],0FFh
020A:896D  75 04				jne	loc_1418		; Jump if not equal
020A:896F  B0 0C				mov	al,0Ch
020A:8971  EB 09				jmp	short loc_1419		; (897C)
020A:8973			loc_1418:
020A:8973  26: 80 7D 06 FE			cmp	byte ptr es:[di+6],0FEh
020A:8978  75 05				jne	loc_1420		; Jump if not equal
020A:897A  B0 10				mov	al,10h
020A:897C			loc_1419:
020A:897C  B9 0007				mov	cx,7
020A:897F			loc_1420:
020A:897F  D0 E0				shl	al,1			; Shift w/zeros fill
020A:8981  32 E4				xor	ah,ah			; Zero register
020A:8983  BE 2FFD				mov	si,2FFDh
020A:8986  03 F0				add	si,ax
  
020A:8988			locloop_1421:
020A:8988  8A 04				mov	al,[si]
020A:898A  3E: 88 46 00				mov	ds:[bp],al
020A:898E  46					inc	si
020A:898F  45					inc	bp
020A:8990  E2 F6				loop	locloop_1421		; Loop if cx > 0
  
020A:8992  3E: C6 46 00 5F			mov	byte ptr ds:[bp],5Fh	; '_'
020A:8997  45					inc	bp
020A:8998  80 3E 14AD 01			cmp	data_222,1		; (020A:14AD=0)
020A:899D  77 46				ja	loc_1427		; Jump if above
020A:899F  26: 8B 07				mov	ax,es:[bx]
020A:89A2  3D FFFF				cmp	ax,0FFFFh
020A:89A5  75 08				jne	loc_1422		; Jump if not equal
020A:89A7  C6 06 2EB7 01			mov	data_399,1		; (020A:2EB7=54h)
020A:89AC  B8 270F				mov	ax,270Fh
020A:89AF			loc_1422:
020A:89AF  32 DB				xor	bl,bl			; Zero register
020A:89B1  80 3E 14AD 00			cmp	data_222,0		; (020A:14AD=0)
020A:89B6  74 02				je	loc_1423		; Jump if equal
020A:89B8  FE C3				inc	bl
020A:89BA			loc_1423:
020A:89BA  9A 16BF:00D4		;*		call	far ptr sub_175		;*(16BF:00D4)
020A:89BA  9A D4 00 BF 16			db	 9Ah,0D4h, 00h,0BFh, 16h
020A:89BF  80 3E 14AD 00			cmp	data_222,0		; (020A:14AD=0)
020A:89C4  74 1C				je	loc_1426		; Jump if equal
020A:89C6  83 ED 05				sub	bp,5
020A:89C9  B9 0004				mov	cx,4
  
020A:89CC			locloop_1424:
020A:89CC  3E: 8A 46 01				mov	al,ds:[bp+1]
020A:89D0  3C 20				cmp	al,20h			; ' '
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 285

020A:89D2  75 02				jne	loc_1425		; Jump if not equal
020A:89D4  B0 30				mov	al,30h			; '0'
020A:89D6			loc_1425:
020A:89D6  3E: 88 46 00				mov	ds:[bp],al
020A:89DA  45					inc	bp
020A:89DB  E2 EF				loop	locloop_1424		; Loop if cx > 0
  
020A:89DD  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:89E2			loc_1426:
020A:89E2  E9 00DF				jmp	loc_1441		; (8AC4)
020A:89E5			loc_1427:
020A:89E5  80 3E 2A31 00			cmp	byte ptr ds:[2A31h],0	; (020A:2A31=0A1h)
020A:89EA  75 0C				jne	loc_1428		; Jump if not equal
020A:89EC  26: 8B 05				mov	ax,es:[di]
020A:89EF  3B 06 2D82				cmp	ax,data_383		; (020A:2D82=3233h)
020A:89F3  75 03				jne	loc_1428		; Jump if not equal
020A:89F5  E9 00A6				jmp	loc_1439		; (8A9E)
020A:89F8			loc_1428:
020A:89F8  80 3E 14AD 02			cmp	data_222,2		; (020A:14AD=0)
020A:89FD  75 03				jne	loc_1429		; Jump if not equal
020A:89FF  E9 008E				jmp	loc_1437		; (8A90)
020A:8A02			loc_1429:
020A:8A02  26: 8B 05				mov	ax,es:[di]
020A:8A05  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:8A0A  06					push	es
020A:8A0B  E8 0E47				call	sub_142			; (9855)
020A:8A0E  BB 0000				mov	bx,0
020A:8A11			loc_1430:
020A:8A11  26: 83 3F FF				cmp	word ptr es:[bx],0FFFFh
020A:8A15  74 46				je	loc_1434		; Jump if equal
020A:8A17  26: 39 07				cmp	es:[bx],ax
020A:8A1A  74 05				je	loc_1431		; Jump if equal
020A:8A1C  83 C3 15				add	bx,15h
020A:8A1F  EB F0				jmp	short loc_1430		; (8A11)
020A:8A21			loc_1431:
020A:8A21  26: 8B 47 0C				mov	ax,es:[bx+0Ch]
020A:8A25  0A 06 2EB8				or	al,data_400		; (020A:2EB8=45h)
020A:8A29  3E: 88 46 00				mov	ds:[bp],al
020A:8A2D  45					inc	bp
020A:8A2E  80 FC 20				cmp	ah,20h			; ' '
020A:8A31  74 09				je	loc_1432		; Jump if equal
020A:8A33  0A 26 2EB8				or	ah,data_400		; (020A:2EB8=45h)
020A:8A37  3E: 88 66 00				mov	ds:[bp],ah
020A:8A3B  45					inc	bp
020A:8A3C			loc_1432:
020A:8A3C  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8A41  5A					pop	dx
020A:8A42  8E C2				mov	es,dx
020A:8A44  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:8A49  5A					pop	dx
020A:8A4A  75 0A				jnz	loc_1433		; Jump if not zero
020A:8A4C  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:8A51  74 03				je	loc_1433		; Jump if equal
020A:8A53  E8 10DE				call	sub_151			; (9B34)
020A:8A56			loc_1433:
020A:8A56  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:8A5B  EB 3B				jmp	short loc_1438		; (8A98)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 286

020A:8A5D			loc_1434:
020A:8A5D  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8A62  5A					pop	dx
020A:8A63  8E C2				mov	es,dx
020A:8A65  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:8A6A  5A					pop	dx
020A:8A6B  75 0A				jnz	loc_1435		; Jump if not zero
020A:8A6D  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:8A72  74 03				je	loc_1435		; Jump if equal
020A:8A74  E8 10BD				call	sub_151			; (9B34)
020A:8A77			loc_1435:
020A:8A77  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:8A7C  83 ED 03				sub	bp,3
020A:8A7F  26: 8A 45 05				mov	al,es:[di+5]
020A:8A83  24 0C				and	al,0Ch
020A:8A85  3C 04				cmp	al,4
020A:8A87  75 01				jne	loc_1436		; Jump if not equal
020A:8A89  4D					dec	bp
020A:8A8A			loc_1436:
020A:8A8A  3E: C6 46 00 5F			mov	byte ptr ds:[bp],5Fh	; '_'
020A:8A8F  45					inc	bp
020A:8A90			loc_1437:
020A:8A90  26: 8B 05				mov	ax,es:[di]
020A:8A93  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:8A93  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:8A98			loc_1438:
020A:8A98  3E: C6 46 00 5F			mov	byte ptr ds:[bp],5Fh	; '_'
020A:8A9D  45					inc	bp
020A:8A9E			loc_1439:
020A:8A9E  26: 8B 45 02				mov	ax,es:[di+2]
020A:8AA2  26: 8A 4D 05				mov	cl,es:[di+5]
020A:8AA6  80 E1 0C				and	cl,0Ch
020A:8AA9  80 F9 04				cmp	cl,4
020A:8AAC  75 11				jne	loc_1440		; Jump if not equal
020A:8AAE  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:8AB3  74 0A				jz	loc_1440		; Jump if zero
020A:8AB5  26: 8B 4D 06				mov	cx,es:[di+6]
020A:8AB9  81 E1 03FF				and	cx,3FFh
020A:8ABD  2B C1				sub	ax,cx
020A:8ABF			loc_1440:
020A:8ABF  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:8ABF  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:8AC4			loc_1441:
020A:8AC4  26: 8A 45 05				mov	al,es:[di+5]
020A:8AC8  24 0C				and	al,0Ch
020A:8ACA  3C 04				cmp	al,4
020A:8ACC  75 1C				jne	loc_1443		; Jump if not equal
020A:8ACE  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:8AD3  74 15				jz	loc_1443		; Jump if zero
020A:8AD5  26: F6 45 05 01			test	byte ptr es:[di+5],1
020A:8ADA  75 06				jnz	loc_1442		; Jump if not zero
020A:8ADC  3E: C6 46 00 5F			mov	byte ptr ds:[bp],5Fh	; '_'
020A:8AE1  45					inc	bp
020A:8AE2			loc_1442:
020A:8AE2  A0 3046				mov	al,data_416		; (020A:3046=0F9h)
020A:8AE5  3E: 88 46 00				mov	ds:[bp],al
020A:8AE9  45					inc	bp
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 287

020A:8AEA			loc_1443:
020A:8AEA  EB 28				jmp	short loc_1447		; (8B14)
020A:8AEC			loc_1444:
020A:8AEC  B9 000F				mov	cx,0Fh
020A:8AEF  26: 80 3F 7F				cmp	byte ptr es:[bx],7Fh
020A:8AF3  73 06				jae	loc_1445		; Jump if above or =
020A:8AF5  26: 80 3F 20				cmp	byte ptr es:[bx],20h	; ' '
020A:8AF9  73 0A				jae	locloop_1446		; Jump if above or =
020A:8AFB			loc_1445:
020A:8AFB  3E: C7 46 00 3F3F			mov	word ptr ds:[bp],3F3Fh
020A:8B01  45					inc	bp
020A:8B02  45					inc	bp
020A:8B03  EB 0F				jmp	short loc_1447		; (8B14)
  
020A:8B05			locloop_1446:
020A:8B05  26: 8A 07				mov	al,es:[bx]
020A:8B08  3C 20				cmp	al,20h			; ' '
020A:8B0A  74 08				je	loc_1447		; Jump if equal
020A:8B0C  3E: 88 46 00				mov	ds:[bp],al
020A:8B10  43					inc	bx
020A:8B11  45					inc	bp
020A:8B12  E2 F1				loop	locloop_1446		; Loop if cx > 0
  
020A:8B14			loc_1447:
020A:8B14  26: 8A 45 05				mov	al,es:[di+5]
020A:8B18  24 0C				and	al,0Ch
020A:8B1A  3C 04				cmp	al,4
020A:8B1C  75 19				jne	loc_1448		; Jump if not equal
020A:8B1E  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:8B23  74 12				jz	loc_1448		; Jump if zero
020A:8B25  3E: C6 46 00 2B			mov	byte ptr ds:[bp],2Bh	; '+'
020A:8B2A  45					inc	bp
020A:8B2B  26: 8B 45 06				mov	ax,es:[di+6]
020A:8B2F  25 03FF				and	ax,3FFh
020A:8B32  9A 16BF:0088		;*		call	far ptr sub_174		;*(16BF:0088)
020A:8B32  9A 88 00 BF 16			db	 9Ah, 88h, 00h,0BFh, 16h
020A:8B37			loc_1448:
020A:8B37  5E					pop	si
020A:8B38  59					pop	cx
020A:8B39  5B					pop	bx
020A:8B3A  C3					retn
				sub_124		endp
  
020A:8B3B  90					nop
020A:8B3C  06					push	es
020A:8B3D  F6 06 2EB1 01			test	byte ptr ds:[2EB1h],1	; (020A:2EB1=43h)
020A:8B42  74 3C				jz	loc_1450		; Jump if zero
020A:8B44  BF 06E8				mov	di,6E8h
020A:8B47  81 EF 0076				sub	di,76h
020A:8B4B  D1 E7				shl	di,1			; Shift w/zeros fill
020A:8B4D  03 3E 12FD				add	di,data_213		; (020A:12FD=0)
020A:8B51  A1 12FB				mov	ax,data_212		; (020A:12FB=0)
020A:8B54  8E C0				mov	es,ax
020A:8B56  BE 2791				mov	si,2791h
020A:8B59  B9 0004				mov	cx,4
  
020A:8B5C			locloop_1449:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 288

020A:8B5C  8A 04				mov	al,[si]
020A:8B5E  9A 16BF:0000		;*		call	far ptr sub_169		;*(16BF:0000)
020A:8B5E  9A 00 00 BF 16			db	 9Ah, 00h, 00h,0BFh, 16h
020A:8B63  8A E3				mov	ah,bl
020A:8B65  E8 F618				call	sub_107			; (8180)
020A:8B68  47					inc	di
020A:8B69  B4 0F				mov	ah,0Fh
020A:8B6B  E8 F612				call	sub_107			; (8180)
020A:8B6E  47					inc	di
020A:8B6F  8A E7				mov	ah,bh
020A:8B71  E8 F60C				call	sub_107			; (8180)
020A:8B74  47					inc	di
020A:8B75  B4 0F				mov	ah,0Fh
020A:8B77  E8 F606				call	sub_107			; (8180)
020A:8B7A  83 C7 03				add	di,3
020A:8B7D  46					inc	si
020A:8B7E  E2 DC				loop	locloop_1449		; Loop if cx > 0
  
020A:8B80			loc_1450:
020A:8B80  F6 06 2EB1 02			test	byte ptr ds:[2EB1h],2	; (020A:2EB1=43h)
020A:8B85  74 15				jz	loc_1452		; Jump if zero
020A:8B87  B9 5000				mov	cx,5000h
020A:8B8A  F6 06 2A78 F0			test	data_362,0F0h		; (020A:2A78=20h)
020A:8B8F  75 03				jnz	locloop_1451		; Jump if not zero
020A:8B91  B9 1000				mov	cx,1000h
  
020A:8B94			locloop_1451:
020A:8B94  EB 00				jmp	short $+2		; delay for I/O
020A:8B96  EB 00				jmp	short $+2		; delay for I/O
020A:8B98  EB 00				jmp	short $+2		; delay for I/O
020A:8B9A  E2 F8				loop	locloop_1451		; Loop if cx > 0
  
020A:8B9C			loc_1452:
020A:8B9C  F6 06 2EB1 08			test	byte ptr ds:[2EB1h],8	; (020A:2EB1=43h)
020A:8BA1  74 2C				jz	loc_1454		; Jump if zero
020A:8BA3  A0 2EB2				mov	al,byte ptr ds:[2EB2h]	; (020A:2EB2=3Ah)
020A:8BA6  3A 06 263D				cmp	al,byte ptr ds:[263Dh]	; (020A:263D=99h)
020A:8BAA  77 06				ja	loc_1453		; Jump if above
020A:8BAC  3A 06 2638				cmp	al,byte ptr ds:[2638h]	; (020A:2638=0B4h)
020A:8BB0  75 1D				jne	loc_1454		; Jump if not equal
020A:8BB2			loc_1453:
020A:8BB2  A1 2EB3				mov	ax,data_397		; (020A:2EB3=5300h)
020A:8BB5  3B 06 2D82				cmp	ax,data_383		; (020A:2D82=3233h)
020A:8BB9  75 14				jne	loc_1454		; Jump if not equal
020A:8BBB  A1 2EB5				mov	ax,data_398		; (020A:2EB5=5359h)
020A:8BBE  3B 06 2D84				cmp	ax,data_384		; (020A:2D84=433Bh)
020A:8BC2  75 0B				jne	loc_1454		; Jump if not equal
020A:8BC4  9A 16BF:0628		;*		call	far ptr sub_187		;*(16BF:0628)
020A:8BC4  9A 28 06 BF 16			db	 9Ah, 28h, 06h,0BFh, 16h
020A:8BC9  9A 16BF:0340		;*		call	far ptr sub_180		;*(16BF:0340)
020A:8BC9  9A 40 03 BF 16			db	 9Ah, 40h, 03h,0BFh, 16h
020A:8BCE  90					nop
020A:8BCF			loc_1454:
020A:8BCF  07					pop	es
020A:8BD0  C3					retn
020A:8BD1  87 DB				xchg	bx,bx
020A:8BD3  90					nop
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 289

  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_125		proc	near
020A:8BD4  57					push	di
020A:8BD5  06					push	es
020A:8BD6  A2 263D				mov	byte ptr ds:[263Dh],al	; (9B68:263D=0AEh)
020A:8BD9  8A E0				mov	ah,al
020A:8BDB  D0 EC				shr	ah,1			; Shift w/zeros fill
020A:8BDD  80 C4 30				add	ah,30h			; '0'
020A:8BE0  88 26 5806				mov	byte ptr ds:[5806h],ah	; (9B68:5806=1Ch)
020A:8BE4  BD 0752				mov	bp,752h
020A:8BE7  3E: 88 66 00				mov	ds:[bp],ah
020A:8BEB  8B 1E 12FB				mov	bx,word ptr ds:[12FBh]	; (9B68:12FB=0A0AFh)
020A:8BEF  8E C3				mov	es,bx
020A:8BF1  BF 0752				mov	di,752h
020A:8BF4  81 EF 0076				sub	di,76h
020A:8BF8  D1 E7				shl	di,1			; Shift w/zeros fill
020A:8BFA  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:8BFE  E8 F57F				call	sub_107			; (8180)
020A:8C01  07					pop	es
020A:8C02  80 3E 2EBD 00			cmp	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:8C07  74 1D				je	loc_1457		; Jump if equal
020A:8C09  80 3E 263D 0A			cmp	byte ptr ds:[263Dh],0Ah	; (9B68:263D=0AEh)
020A:8C0E  72 0E				jb	loc_1455		; Jump if below
020A:8C10  F6 06 430B 07			test	byte ptr ds:[430Bh],7	; (9B68:430B=0)
020A:8C15  75 0C				jnz	loc_1456		; Jump if not zero
020A:8C17  80 0E 430B 07			or	byte ptr ds:[430Bh],7	; (9B68:430B=0)
020A:8C1C  EB 05				jmp	short loc_1456		; (8C23)
020A:8C1E			loc_1455:
020A:8C1E  80 26 430B F8			and	byte ptr ds:[430Bh],0F8h	; (9B68:430B=0)
020A:8C23			loc_1456:
020A:8C23  E8 FB02				call	sub_118			; (8728)
020A:8C26			loc_1457:
020A:8C26  5F					pop	di
020A:8C27  C3					retn
				sub_125		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_126		proc	near
020A:8C28  50					push	ax
020A:8C29  53					push	bx
020A:8C2A  56					push	si
020A:8C2B  55					push	bp
020A:8C2C  C6 06 47B3 00			mov	byte ptr ds:[47B3h],0	; (020A:47B3=0F8h)
020A:8C31  BD 0002				mov	bp,2
020A:8C34  8B F0				mov	si,ax
020A:8C36  A3 37A4				mov	data_429,ax		; (020A:37A4=117h)
020A:8C39  8B CB				mov	cx,bx
020A:8C3B  89 1E 37A2				mov	data_428,bx		; (020A:37A2=6C6h)
020A:8C3F  83 FA 20				cmp	dx,20h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 290

020A:8C42  75 0B				jne	loc_1458		; Jump if not equal
020A:8C44  E8 0C17				call	sub_145			; (985E)
020A:8C47  BA 002C				mov	dx,2Ch
020A:8C4A  BF 3C7D				mov	di,3C7Dh
020A:8C4D  EB 58				jmp	short loc_1465		; (8CA7)
020A:8C4F			loc_1458:
020A:8C4F  83 FA 10				cmp	dx,10h
020A:8C52  75 0B				jne	loc_1459		; Jump if not equal
020A:8C54  E8 0BFE				call	sub_142			; (9855)
020A:8C57  BA 0015				mov	dx,15h
020A:8C5A  BF 0000				mov	di,0
020A:8C5D  EB 48				jmp	short loc_1465		; (8CA7)
020A:8C5F			loc_1459:
020A:8C5F  83 FA 01				cmp	dx,1
020A:8C62  74 2D				je	loc_1462		; Jump if equal
020A:8C64  83 FA 02				cmp	dx,2
020A:8C67  74 33				je	loc_1464		; Jump if equal
020A:8C69  83 FA 04				cmp	dx,4
020A:8C6C  74 0B				je	loc_1460		; Jump if equal
020A:8C6E  83 FA 40				cmp	dx,40h
020A:8C71  74 11				je	loc_1461		; Jump if equal
020A:8C73  BB 0004				mov	bx,4
020A:8C76  E9 AC76		;*		jmp	loc_392			;*(38EF)
020A:8C76  E9 76 AC				db	0E9h, 76h,0ACh
020A:8C79			loc_1460:
020A:8C79  E8 0FD4				call	sub_154			; (9C50)
020A:8C7C  BB 003B				mov	bx,3Bh
020A:8C7F  BA 004A				mov	dx,4Ah
020A:8C82  EB 52				jmp	short loc_1475		; (8CD6)
020A:8C84			loc_1461:
020A:8C84  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:8C8A  74 05				je	loc_1462		; Jump if equal
020A:8C8C  E8 0BD8				call	sub_147			; (9867)
020A:8C8F  EB 03				jmp	short loc_1463		; (8C94)
020A:8C91			loc_1462:
020A:8C91  E8 0F48				call	sub_153			; (9BDC)
020A:8C94			loc_1463:
020A:8C94  BB 0007				mov	bx,7
020A:8C97  BA 0016				mov	dx,16h
020A:8C9A  EB 3A				jmp	short loc_1475		; (8CD6)
020A:8C9C			loc_1464:
020A:8C9C  E8 0EC9				call	sub_152			; (9B68)
020A:8C9F  BB 000A				mov	bx,0Ah
020A:8CA2  BA 0019				mov	dx,19h
020A:8CA5  EB 2F				jmp	short loc_1475		; (8CD6)
020A:8CA7			loc_1465:
020A:8CA7  33 ED				xor	bp,bp			; Zero register
020A:8CA9  06					push	es
020A:8CAA  8C D8				mov	ax,ds
020A:8CAC  8E C0				mov	es,ax
020A:8CAE  1F					pop	ds
020A:8CAF  BB FFFF				mov	bx,0FFFFh
020A:8CB2			loc_1466:
020A:8CB2  39 75 02				cmp	[di+2],si
020A:8CB5  74 09				je	loc_1469		; Jump if equal
020A:8CB7			loc_1467:
020A:8CB7  39 1D				cmp	[di],bx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 291

020A:8CB9  74 0B				je	loc_1470		; Jump if equal
020A:8CBB			loc_1468:
020A:8CBB  03 FA				add	di,dx
020A:8CBD  45					inc	bp
020A:8CBE  EB F2				jmp	short loc_1466		; (8CB2)
020A:8CC0			loc_1469:
020A:8CC0  39 0D				cmp	[di],cx
020A:8CC2  75 F3				jne	loc_1467		; Jump if not equal
020A:8CC4  EB 09				jmp	short loc_1472		; (8CCF)
020A:8CC6			loc_1470:
020A:8CC6  39 5D 02				cmp	[di+2],bx
020A:8CC9  75 02				jne	loc_1471		; Jump if not equal
020A:8CCB  EB 05				jmp	short loc_1473		; (8CD2)
020A:8CCD			loc_1471:
020A:8CCD  EB EC				jmp	short loc_1468		; (8CBB)
020A:8CCF			loc_1472:
020A:8CCF  F9					stc				; Set carry flag
020A:8CD0  EB 01				jmp	short loc_1474		; (8CD3)
020A:8CD2			loc_1473:
020A:8CD2  F8					clc				; Clear carry flag
020A:8CD3			loc_1474:
020A:8CD3  E9 023C				jmp	loc_1519		; (8F12)
020A:8CD6			loc_1475:
020A:8CD6  BF 0008				mov	di,8
020A:8CD9  26: A1 0002				mov	ax,word ptr es:[2]	; (9B68:0002=0B1E8h)
020A:8CDD  3B C1				cmp	ax,cx
020A:8CDF  77 0F				ja	loc_1477		; Jump if above
020A:8CE1  72 08				jc	loc_1476		; Jump if carry Set
020A:8CE3  26: A1 0004				mov	ax,word ptr es:[4]	; (9B68:0004=1E00h)
020A:8CE7  3B C6				cmp	ax,si
020A:8CE9  77 05				ja	loc_1477		; Jump if above
020A:8CEB			loc_1476:
020A:8CEB  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (9B68:0006=1F06h)
020A:8CF0			loc_1477:
020A:8CF0  06					push	es
020A:8CF1  8C D8				mov	ax,ds
020A:8CF3  8E C0				mov	es,ax
020A:8CF5  1F					pop	ds
020A:8CF6  B4 03				mov	ah,3
020A:8CF8  26: 80 3E 14AD 01			cmp	byte ptr es:[14ADh],1	; (D233:14AD=4)
020A:8CFE  77 05				ja	loc_1478		; Jump if above
020A:8D00  03 DD				add	bx,bp
020A:8D02  E9 009E				jmp	loc_1493		; (8DA3)
020A:8D05			loc_1478:
020A:8D05  39 0D				cmp	[di],cx
020A:8D07  73 28				jae	loc_1481		; Jump if above or =
020A:8D09  8A 45 05				mov	al,[di+5]
020A:8D0C  84 C4				test	al,ah
020A:8D0E  75 04				jnz	loc_1479		; Jump if not zero
020A:8D10  03 FB				add	di,bx
020A:8D12  EB F1				jmp	short loc_1478		; (8D05)
020A:8D14			loc_1479:
020A:8D14  A8			data_553	db	0A8h
020A:8D15  02 75 06				add	dh,[di+6]
020A:8D18  03 FB				add	di,bx
020A:8D1A  03 FD				add	di,bp
020A:8D1C  EB E7				jmp	short loc_1478		; (8D05)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 292

020A:8D1E  A8 01				test	al,1
020A:8D20  75 04				jnz	loc_1480		; Jump if not zero
020A:8D22  03 FA				add	di,dx
020A:8D24  EB DF				jmp	short loc_1478		; (8D05)
020A:8D26			loc_1480:
020A:8D26  8A 45 06				mov	al,[di+6]
020A:8D29  32 E4				xor	ah,ah			; Zero register
020A:8D2B  03 F8				add	di,ax
020A:8D2D  B4 03				mov	ah,3
020A:8D2F  EB D4				jmp	short loc_1478		; (8D05)
020A:8D31			loc_1481:
020A:8D31  74 0B				jz	loc_1482		; Jump if zero
020A:8D33  83 3D FF				cmp	word ptr [di],0FFFFh
020A:8D36  75 39				jne	loc_1488		; Jump if not equal
020A:8D38  83 7D 02 FF				cmp	word ptr [di+2],0FFFFh
020A:8D3C  74 33				je	loc_1488		; Jump if equal
020A:8D3E			loc_1482:
020A:8D3E  39 0D				cmp	[di],cx
020A:8D40  75 2F				jne	loc_1488		; Jump if not equal
020A:8D42  39 75 02				cmp	[di+2],si
020A:8D45  73 28				jae	loc_1487		; Jump if above or =
020A:8D47			loc_1483:
020A:8D47  8A 45 05				mov	al,[di+5]
020A:8D4A  84 C4				test	al,ah
020A:8D4C  75 04				jnz	loc_1484		; Jump if not zero
020A:8D4E  03 FB				add	di,bx
020A:8D50  EB EC				jmp	short loc_1482		; (8D3E)
020A:8D52			loc_1484:
020A:8D52  A8 02				test	al,2
020A:8D54  75 06				jnz	loc_1485		; Jump if not zero
020A:8D56  03 FB				add	di,bx
020A:8D58  03 FD				add	di,bp
020A:8D5A  EB E2				jmp	short loc_1482		; (8D3E)
020A:8D5C			loc_1485:
020A:8D5C  A8 01				test	al,1
020A:8D5E  75 04				jnz	loc_1486		; Jump if not zero
020A:8D60  03 FA				add	di,dx
020A:8D62  EB DA				jmp	short loc_1482		; (8D3E)
020A:8D64			loc_1486:
020A:8D64  8A 45 06				mov	al,[di+6]
020A:8D67  32 E4				xor	ah,ah			; Zero register
020A:8D69  03 F8				add	di,ax
020A:8D6B  B4 03				mov	ah,3
020A:8D6D  EB CF				jmp	short loc_1482		; (8D3E)
020A:8D6F			loc_1487:
020A:8D6F  74 02				jz	loc_1489		; Jump if zero
020A:8D71			loc_1488:
020A:8D71  EB 2D				jmp	short loc_1492		; (8DA0)
020A:8D73			loc_1489:
020A:8D73  83 FA 16				cmp	dx,16h
020A:8D76  75 25				jne	loc_1491		; Jump if not equal
020A:8D78  26: 80 3E 4204 01			cmp	byte ptr es:[4204h],1	; (D233:4204=8Bh)
020A:8D7E  74 1D				je	loc_1491		; Jump if equal
020A:8D80  26: 80 3E 47B3 00			cmp	byte ptr es:[47B3h],0	; (D233:47B3=0C3h)
020A:8D86  75 0A				jne	loc_1490		; Jump if not equal
020A:8D88  89 3E 0006				mov	word ptr ds:[6],di	; (9B68:0006=1F06h)
020A:8D8C  26: C6 06 47B3 01			mov	byte ptr es:[47B3h],1	; (D233:47B3=0C3h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 293

020A:8D92			loc_1490:
020A:8D92  8A 45 04				mov	al,[di+4]
020A:8D95  24 1F				and	al,1Fh
020A:8D97  3C 1F				cmp	al,1Fh
020A:8D99  75 02				jne	loc_1491		; Jump if not equal
020A:8D9B  EB AA				jmp	short loc_1483		; (8D47)
020A:8D9D			loc_1491:
020A:8D9D  E9 00A0				jmp	loc_1507		; (8E40)
020A:8DA0			loc_1492:
020A:8DA0  E9 0115				jmp	loc_1514		; (8EB8)
020A:8DA3			loc_1493:
020A:8DA3  39 0D				cmp	[di],cx
020A:8DA5  73 2A				jae	loc_1497		; Jump if above or =
020A:8DA7  8A 45 05				mov	al,[di+5]
020A:8DAA  22 C4				and	al,ah
020A:8DAC  3C 01				cmp	al,1
020A:8DAE  75 04				jne	loc_1494		; Jump if not equal
020A:8DB0  03 FB				add	di,bx
020A:8DB2  EB EF				jmp	short loc_1493		; (8DA3)
020A:8DB4			loc_1494:
020A:8DB4  0A C0				or	al,al			; Zero ?
020A:8DB6  75 06				jnz	loc_1495		; Jump if not zero
020A:8DB8  03 FB				add	di,bx
020A:8DBA  2B FD				sub	di,bp
020A:8DBC  EB E5				jmp	short loc_1493		; (8DA3)
020A:8DBE			loc_1495:
020A:8DBE  3C 02				cmp	al,2
020A:8DC0  75 04				jne	loc_1496		; Jump if not equal
020A:8DC2  03 FA				add	di,dx
020A:8DC4  EB DD				jmp	short loc_1493		; (8DA3)
020A:8DC6			loc_1496:
020A:8DC6  8A 45 06				mov	al,[di+6]
020A:8DC9  32 E4				xor	ah,ah			; Zero register
020A:8DCB  03 F8				add	di,ax
020A:8DCD  B4 03				mov	ah,3
020A:8DCF  EB D2				jmp	short loc_1493		; (8DA3)
020A:8DD1			loc_1497:
020A:8DD1  74 0B				jz	loc_1498		; Jump if zero
020A:8DD3  83 3D FF				cmp	word ptr [di],0FFFFh
020A:8DD6  75 3B				jne	loc_1504		; Jump if not equal
020A:8DD8  83 7D 02 FF				cmp	word ptr [di+2],0FFFFh
020A:8DDC  74 35				je	loc_1504		; Jump if equal
020A:8DDE			loc_1498:
020A:8DDE  39 0D				cmp	[di],cx
020A:8DE0  75 31				jne	loc_1504		; Jump if not equal
020A:8DE2  39 75 02				cmp	[di+2],si
020A:8DE5  73 2A				jae	loc_1503		; Jump if above or =
020A:8DE7			loc_1499:
020A:8DE7  8A 45 05				mov	al,[di+5]
020A:8DEA  22 C4				and	al,ah
020A:8DEC  3C 01				cmp	al,1
020A:8DEE  75 04				jne	loc_1500		; Jump if not equal
020A:8DF0  03 FB				add	di,bx
020A:8DF2  EB EA				jmp	short loc_1498		; (8DDE)
020A:8DF4			loc_1500:
020A:8DF4  0A C0				or	al,al			; Zero ?
020A:8DF6  75 06				jnz	loc_1501		; Jump if not zero
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 294

020A:8DF8  03 FB				add	di,bx
020A:8DFA  2B FD				sub	di,bp
020A:8DFC  EB E0				jmp	short loc_1498		; (8DDE)
020A:8DFE			loc_1501:
020A:8DFE  3C 02				cmp	al,2
020A:8E00  75 04				jne	loc_1502		; Jump if not equal
020A:8E02  03 FA				add	di,dx
020A:8E04  EB D8				jmp	short loc_1498		; (8DDE)
020A:8E06			loc_1502:
020A:8E06  8A 45 06				mov	al,[di+6]
020A:8E09  32 E4				xor	ah,ah			; Zero register
020A:8E0B  03 F8				add	di,ax
020A:8E0D  B4 03				mov	ah,3
020A:8E0F  EB CD				jmp	short loc_1498		; (8DDE)
020A:8E11			loc_1503:
020A:8E11  74 03				jz	loc_1505		; Jump if zero
020A:8E13			loc_1504:
020A:8E13  E9 00A2				jmp	loc_1514		; (8EB8)
020A:8E16			loc_1505:
020A:8E16  83 FA 16				cmp	dx,16h
020A:8E19  75 25				jne	loc_1507		; Jump if not equal
020A:8E1B  26: 80 3E 4204 01			cmp	byte ptr es:[4204h],1	; (D233:4204=8Bh)
020A:8E21  74 1D				je	loc_1507		; Jump if equal
020A:8E23  26: 80 3E 47B3 00			cmp	byte ptr es:[47B3h],0	; (D233:47B3=0C3h)
020A:8E29  75 0A				jne	loc_1506		; Jump if not equal
020A:8E2B  89 3E 0006				mov	word ptr ds:[6],di	; (9B68:0006=1F06h)
020A:8E2F  26: C6 06 47B3 01			mov	byte ptr es:[47B3h],1	; (D233:47B3=0C3h)
020A:8E35			loc_1506:
020A:8E35  8A 45 04				mov	al,[di+4]
020A:8E38  24 1F				and	al,1Fh
020A:8E3A  3C 1F				cmp	al,1Fh
020A:8E3C  75 02				jne	loc_1507		; Jump if not equal
020A:8E3E  EB A7				jmp	short loc_1499		; (8DE7)
020A:8E40			loc_1507:
020A:8E40  8B 05				mov	ax,[di]
020A:8E42  A3 0002				mov	word ptr ds:[2],ax	; (9B68:0002=0B1E8h)
020A:8E45  8B 45 02				mov	ax,[di+2]
020A:8E48  A3 0004				mov	word ptr ds:[4],ax	; (9B68:0004=1E00h)
020A:8E4B  26: 80 3E 47B3 00			cmp	byte ptr es:[47B3h],0	; (D233:47B3=0C3h)
020A:8E51  75 04				jne	loc_1508		; Jump if not equal
020A:8E53  89 3E 0006				mov	word ptr ds:[6],di	; (9B68:0006=1F06h)
020A:8E57			loc_1508:
020A:8E57  26: A1 37A2				mov	ax,word ptr es:[37A2h]	; (D233:37A2=0CFh)
020A:8E5B  26: 3B 06 2D82			cmp	ax,word ptr es:[2D82h]	; (D233:2D82=0E865h)
020A:8E60  75 53				jne	loc_1513		; Jump if not equal
020A:8E62  26: A1 37A4				mov	ax,word ptr es:[37A4h]	; (D233:37A4=0B9E8h)
020A:8E66  26: 3B 06 2D84			cmp	ax,word ptr es:[2D84h]	; (D233:2D84=8E4h)
020A:8E6B  75 48				jne	loc_1513		; Jump if not equal
020A:8E6D  BB 377F				mov	bx,377Fh
020A:8E70  8A 45 05				mov	al,[di+5]
020A:8E73  25 000F				and	ax,0Fh
020A:8E76  26: D7				xlat es:[bx]			; al=[al+[bx]] table
020A:8E78  0A C0				or	al,al			; Zero ?
020A:8E7A  75 03				jnz	loc_1509		; Jump if not zero
020A:8E7C  8A 45 06				mov	al,[di+6]
020A:8E7F			loc_1509:
020A:8E7F  8B D8				mov	bx,ax
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 295

020A:8E81  8B 01				mov	ax,[bx+di]
020A:8E83  26: 3B 06 2D82			cmp	ax,word ptr es:[2D82h]	; (D233:2D82=0E865h)
020A:8E88  8B 41 02				mov	ax,[bx+di+2]
020A:8E8B  74 03				jz	loc_1510		; Jump if zero
020A:8E8D  B8 FFFF				mov	ax,0FFFFh
020A:8E90			loc_1510:
020A:8E90  8A 51 05				mov	dl,[bx+di+5]
020A:8E93  80 E2 0C				and	dl,0Ch
020A:8E96  80 FA 00				cmp	dl,0
020A:8E99  74 10				je	loc_1511		; Jump if equal
020A:8E9B  80 FA 04				cmp	dl,4
020A:8E9E  74 11				je	loc_1512		; Jump if equal
020A:8EA0  80 FA 08				cmp	dl,8
020A:8EA3  75 10				jne	loc_1513		; Jump if not equal
020A:8EA5  26: A3 4317				mov	word ptr es:[4317h],ax	; (D233:4317=0FFFFh)
020A:8EA9  EB 0A				jmp	short loc_1513		; (8EB5)
020A:8EAB			loc_1511:
020A:8EAB  26: A3 4315				mov	word ptr es:[4315h],ax	; (D233:4315=3D06h)
020A:8EAF  EB 04				jmp	short loc_1513		; (8EB5)
020A:8EB1			loc_1512:
020A:8EB1  26: A3 4313				mov	word ptr es:[4313h],ax	; (D233:4313=478Bh)
020A:8EB5			loc_1513:
020A:8EB5  F9					stc				; Set carry flag
020A:8EB6  EB 5A				jmp	short loc_1519		; (8F12)
020A:8EB8			loc_1514:
020A:8EB8  8B 05				mov	ax,[di]
020A:8EBA  A3 0002				mov	word ptr ds:[2],ax	; (9B68:0002=0B1E8h)
020A:8EBD  8B 45 02				mov	ax,[di+2]
020A:8EC0  A3 0004				mov	word ptr ds:[4],ax	; (9B68:0004=1E00h)
020A:8EC3  89 3E 0006				mov	word ptr ds:[6],di	; (9B68:0006=1F06h)
020A:8EC7  26: A1 37A2				mov	ax,word ptr es:[37A2h]	; (D233:37A2=0CFh)
020A:8ECB  26: 3B 06 2D82			cmp	ax,word ptr es:[2D82h]	; (D233:2D82=0E865h)
020A:8ED0  75 3F				jne	loc_1518		; Jump if not equal
020A:8ED2  26: A1 37A4				mov	ax,word ptr es:[37A4h]	; (D233:37A4=0B9E8h)
020A:8ED6  26: 3B 06 2D84			cmp	ax,word ptr es:[2D84h]	; (D233:2D84=8E4h)
020A:8EDB  75 34				jne	loc_1518		; Jump if not equal
020A:8EDD  B8 FFFF				mov	ax,0FFFFh
020A:8EE0  8B 1D				mov	bx,[di]
020A:8EE2  26: 3B 1E 2D82			cmp	bx,word ptr es:[2D82h]	; (D233:2D82=0E865h)
020A:8EE7  75 03				jne	loc_1515		; Jump if not equal
020A:8EE9  8B 45 02				mov	ax,[di+2]
020A:8EEC			loc_1515:
020A:8EEC  8A 55 05				mov	dl,[di+5]
020A:8EEF  80 E2 0C				and	dl,0Ch
020A:8EF2  80 FA 00				cmp	dl,0
020A:8EF5  74 10				je	loc_1516		; Jump if equal
020A:8EF7  80 FA 04				cmp	dl,4
020A:8EFA  74 11				je	loc_1517		; Jump if equal
020A:8EFC  80 FA 08				cmp	dl,8
020A:8EFF  75 10				jne	loc_1518		; Jump if not equal
020A:8F01  26: A3 4317				mov	word ptr es:[4317h],ax	; (D233:4317=0FFFFh)
020A:8F05  EB 0A				jmp	short loc_1518		; (8F11)
020A:8F07			loc_1516:
020A:8F07  26: A3 4315				mov	word ptr es:[4315h],ax	; (D233:4315=3D06h)
020A:8F0B  EB 04				jmp	short loc_1518		; (8F11)
020A:8F0D			loc_1517:
020A:8F0D  26: A3 4313				mov	word ptr es:[4313h],ax	; (D233:4313=478Bh)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 296

020A:8F11			loc_1518:
020A:8F11  F8					clc				; Clear carry flag
020A:8F12			loc_1519:
020A:8F12  1E					push	ds
020A:8F13  8C C0				mov	ax,es
020A:8F15  8E D8				mov	ds,ax
020A:8F17  07					pop	es
020A:8F18  8B CD				mov	cx,bp
020A:8F1A  5D					pop	bp
020A:8F1B  5E					pop	si
020A:8F1C  5B					pop	bx
020A:8F1D  58					pop	ax
020A:8F1E  C3					retn
				sub_126		endp
  
020A:8F1F  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_127		proc	near
  
020A:8F20			locloop_1520:
020A:8F20  8A 04				mov	al,[si]
020A:8F22  A8 40				test	al,40h			; '@'
020A:8F24  74 18				jz	loc_1522		; Jump if zero
020A:8F26  3C 40				cmp	al,40h			; '@'
020A:8F28  74 14				je	loc_1522		; Jump if equal
020A:8F2A  3C 5B				cmp	al,5Bh			; '['
020A:8F2C  72 08				jb	loc_1521		; Jump if below
020A:8F2E  3C 7B				cmp	al,7Bh			; '{'
020A:8F30  73 0C				jae	loc_1522		; Jump if above or =
020A:8F32  3C 60				cmp	al,60h			; '`'
020A:8F34  76 08				jbe	loc_1522		; Jump if below or =
020A:8F36			loc_1521:
020A:8F36  24 DF				and	al,0DFh
020A:8F38  0A 06 2EB8				or	al,data_400		; (020A:2EB8=45h)
020A:8F3C  88 04				mov	[si],al
020A:8F3E			loc_1522:
020A:8F3E  46					inc	si
020A:8F3F  E2 DF				loop	locloop_1520		; Loop if cx > 0
  
020A:8F41  C3					retn
				sub_127		endp
  
020A:8F42  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_128		proc	near
020A:8F44  52					push	dx
020A:8F45  51					push	cx
020A:8F46  8B D7				mov	dx,di
020A:8F48  B0 43				mov	al,43h			; 'C'
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 297

020A:8F4A  B4 00				mov	ah,0
020A:8F4C			loc_1523:
020A:8F4C  8B FA				mov	di,dx
020A:8F4E  59					pop	cx
020A:8F4F  51					push	cx
020A:8F50			loc_1524:
020A:8F50  FC					cld				; Clear direction
020A:8F51  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:8F53  83 F9 00				cmp	cx,0
020A:8F56  75 0B				jne	loc_1526		; Jump if not equal
020A:8F58  3C 63				cmp	al,63h			; 'c'
020A:8F5A  75 03				jne	loc_1525		; Jump if not equal
020A:8F5C  E9 00C6				jmp	loc_1537		; (9025)
020A:8F5F			loc_1525:
020A:8F5F  B0 63				mov	al,63h			; 'c'
020A:8F61  EB E9				jmp	short loc_1523		; (8F4C)
020A:8F63			loc_1526:
020A:8F63  26: 80 7D FE 28			cmp	byte ptr es:[di-2],28h	; '('
020A:8F68  75 1A				jne	loc_1528		; Jump if not equal
020A:8F6A  26: 80 3D 29				cmp	byte ptr es:[di],29h	; ')'
020A:8F6E  74 10				je	loc_1527		; Jump if equal
020A:8F70  26: 8B 1D				mov	bx,es:[di]
020A:8F73  81 E3 DFDF				and	bx,0DFDFh
020A:8F77  81 FB 2943				cmp	bx,2943h
020A:8F7B  75 D3				jne	loc_1524		; Jump if not equal
020A:8F7D  B4 01				mov	ah,1
020A:8F7F  4F					dec	di
020A:8F80			loc_1527:
020A:8F80  4F					dec	di
020A:8F81  4F					dec	di
020A:8F82  EB 38				jmp	short loc_1531		; (8FBC)
020A:8F84			loc_1528:
020A:8F84  26: 8B 1D				mov	bx,es:[di]
020A:8F87  81 E3 DFDF				and	bx,0DFDFh
020A:8F8B  81 FB 504F				cmp	bx,504Fh
020A:8F8F  75 14				jne	loc_1529		; Jump if not equal
020A:8F91  26: 8B 5D 02				mov	bx,es:[di+2]
020A:8F95  81 E3 DFDF				and	bx,0DFDFh
020A:8F99  81 FB 5259				cmp	bx,5259h
020A:8F9D  74 1C				je	loc_1530		; Jump if equal
020A:8F9F  81 FB 2E52				cmp	bx,2E52h
020A:8FA3  74 16				je	loc_1530		; Jump if equal
020A:8FA5			loc_1529:
020A:8FA5  81 FB 4F43				cmp	bx,4F43h
020A:8FA9  75 A5				jne	loc_1524		; Jump if not equal
020A:8FAB  26: 8B 5D 02				mov	bx,es:[di+2]
020A:8FAF  81 E3 DFDF				and	bx,0DFDFh
020A:8FB3  81 FB 504F				cmp	bx,504Fh
020A:8FB7  75 97				jne	loc_1524		; Jump if not equal
020A:8FB9  B4 01				mov	ah,1
020A:8FBB			loc_1530:
020A:8FBB  4F					dec	di
020A:8FBC			loc_1531:
020A:8FBC  57					push	di
020A:8FBD  BE 512A				mov	si,512Ah
020A:8FC0  B9 0032				mov	cx,32h
  
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 298

020A:8FC3			locloop_1532:
020A:8FC3  26: 8A 05				mov	al,es:[di]
020A:8FC6  3C 20				cmp	al,20h			; ' '
020A:8FC8  72 1E				jb	loc_1535		; Jump if below
020A:8FCA  3C 80				cmp	al,80h
020A:8FCC  73 1A				jae	loc_1535		; Jump if above or =
020A:8FCE  88 04				mov	[si],al
020A:8FD0  80 FC 01				cmp	ah,1
020A:8FD3  75 08				jne	loc_1533		; Jump if not equal
020A:8FD5  47					inc	di
020A:8FD6  26: 3A 05				cmp	al,es:[di]
020A:8FD9  75 0D				jne	loc_1535		; Jump if not equal
020A:8FDB  EB 07				jmp	short loc_1534		; (8FE4)
020A:8FDD			loc_1533:
020A:8FDD  26: 81 3D 2020			cmp	word ptr es:[di],2020h
020A:8FE2  74 04				je	loc_1535		; Jump if equal
020A:8FE4			loc_1534:
020A:8FE4  47					inc	di
020A:8FE5  46					inc	si
020A:8FE6  E2 DB				loop	locloop_1532		; Loop if cx > 0
  
020A:8FE8			loc_1535:
020A:8FE8  8B CF				mov	cx,di
020A:8FEA  5F					pop	di
020A:8FEB  2B CF				sub	cx,di
020A:8FED  8B C7				mov	ax,di
020A:8FEF  8C C3				mov	bx,es
020A:8FF1  5A					pop	dx
020A:8FF2  51					push	cx
020A:8FF3  BA 0002				mov	dx,2
020A:8FF6  E8 FC2F				call	sub_126			; (8C28)
020A:8FF9  59					pop	cx
020A:8FFA  72 26				jc	loc_1536		; Jump if carry Set
020A:8FFC  BF 472B				mov	di,472Bh
020A:8FFF  89 1D				mov	[di],bx
020A:9001  89 45 02				mov	[di+2],ax
020A:9004  C6 45 04 60				mov	byte ptr [di+4],60h	; '`'
020A:9008  C6 45 05 06				mov	byte ptr [di+5],6
020A:900C  89 4D 08				mov	[di+8],cx
020A:900F  C7 45 06 0000			mov	word ptr [di+6],0
020A:9014  B8 000A				mov	ax,0Ah
020A:9017  BE 33AA				mov	si,33AAh
020A:901A  9A 16BF:1018		;*		call	far ptr sub_198		;*(16BF:1018)
020A:901A  9A 18 10 BF 16			db	 9Ah, 18h, 10h,0BFh, 16h
020A:901F  E8 188E				call	sub_157			; (A8B0)
020A:9022			loc_1536:
020A:9022  F9					stc				; Set carry flag
020A:9023  EB 02				jmp	short loc_1538		; (9027)
020A:9025			loc_1537:
020A:9025  59					pop	cx
020A:9026  F8					clc				; Clear carry flag
020A:9027			loc_1538:
020A:9027  5A					pop	dx
020A:9028  C3					retn
				sub_128		endp
  
020A:9029  87 DB				xchg	bx,bx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 299

020A:902B  90					nop
020A:902C  C6 06 2A35 00			mov	byte ptr ds:[2A35h],0	; (020A:2A35=0A3h)
020A:9031  BA 0002				mov	dx,2
020A:9034  BB 439C				mov	bx,439Ch
020A:9037  E8 B4D6		;*		call	sub_47			;*(4510)
020A:9037  E8 D6 B4				db	0E8h,0D6h,0B4h
020A:903A  C3					retn
020A:903B  90					nop
020A:903C  BF 0008				mov	di,8
020A:903F  BE 0000				mov	si,0
020A:9042  E8 07FB				call	sub_138			; (9840)
020A:9045			loc_1539:
020A:9045  8B 04				mov	ax,[si]
020A:9047  8B 5C 02				mov	bx,[si+2]
020A:904A  8B 4C 04				mov	cx,[si+4]
020A:904D  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:9051  74 79				je	loc_1542		; Jump if equal
020A:9053  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:9058  74 75				jz	loc_1543		; Jump if zero
020A:905A  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:905F  75 6E				jnz	loc_1543		; Jump if not zero
020A:9061  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:9066  75 62				jnz	loc_1541		; Jump if not zero
020A:9068  26: 3B 05				cmp	ax,es:[di]
020A:906B  72 64				jb	loc_1544		; Jump if below
020A:906D  77 5B				ja	loc_1541		; Jump if above
020A:906F  26: 3B 5D 02				cmp	bx,es:[di+2]
020A:9073  77 55				ja	loc_1541		; Jump if above
020A:9075  26: 3B 4D 02				cmp	cx,es:[di+2]
020A:9079  72 56				jb	loc_1544		; Jump if below
020A:907B  1E					push	ds
020A:907C  E8 07CA				call	sub_140			; (9849)
020A:907F  F7 06 42CC 0100			test	data_473,100h		; (020A:42CC=92h)
020A:9085  1F					pop	ds
020A:9086  75 54				jnz	loc_1545		; Jump if not zero
020A:9088  8B 54 0A				mov	dx,[si+0Ah]
020A:908B  80 E2 03				and	dl,3
020A:908E  80 FA 01				cmp	dl,1
020A:9091  77 49				ja	loc_1545		; Jump if above
020A:9093  26: 8A 55 04				mov	dl,es:[di+4]
020A:9097  F6 C2 80				test	dl,80h
020A:909A  74 40				jz	loc_1545		; Jump if zero
020A:909C  F6 C2 10				test	dl,10h
020A:909F  75 3B				jnz	loc_1545		; Jump if not zero
020A:90A1  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:90A6  75 34				jnz	loc_1545		; Jump if not zero
020A:90A8  26: 81 7D 02 0200			cmp	word ptr es:[di+2],200h
020A:90AE  73 2C				jae	loc_1545		; Jump if above or =
020A:90B0  1E					push	ds
020A:90B1  E8 0795				call	sub_140			; (9849)
020A:90B4  F7 06 42CC 0200			test	data_473,200h		; (020A:42CC=92h)
020A:90BA  1F					pop	ds
020A:90BB  75 08				jnz	loc_1540		; Jump if not zero
020A:90BD  26: 81 7D 02 0100			cmp	word ptr es:[di+2],100h
020A:90C3  73 17				jae	loc_1545		; Jump if above or =
020A:90C5			loc_1540:
020A:90C5  26: 80 65 04 BF			and	byte ptr es:[di+4],0BFh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 300

020A:90CA			loc_1541:
020A:90CA  EB 3B				jmp	short loc_1547		; (9107)
020A:90CC			loc_1542:
020A:90CC  E9 00E5				jmp	loc_1552		; (91B4)
020A:90CF			loc_1543:
020A:90CF  EB 0B				jmp	short loc_1545		; (90DC)
020A:90D1			loc_1544:
020A:90D1  83 C6 15				add	si,15h
020A:90D4  83 3C FF				cmp	word ptr [si],0FFFFh
020A:90D7  74 2E				je	loc_1547		; Jump if equal
020A:90D9  E9 FF69				jmp	loc_1539		; (9045)
020A:90DC			loc_1545:
020A:90DC  E8 0761				call	sub_138			; (9840)
020A:90DF  BB 377F				mov	bx,377Fh
020A:90E2  26: 8A 45 05				mov	al,es:[di+5]
020A:90E6  25 000F				and	ax,0Fh
020A:90E9  1E					push	ds
020A:90EA  E8 075C				call	sub_140			; (9849)
020A:90ED  D7					xlat				; al=[al+[bx]] table
020A:90EE  1F					pop	ds
020A:90EF  0A C0				or	al,al			; Zero ?
020A:90F1  75 04				jnz	loc_1546		; Jump if not zero
020A:90F3  26: 8A 45 06				mov	al,es:[di+6]
020A:90F7			loc_1546:
020A:90F7  03 F8				add	di,ax
020A:90F9  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:90FD  74 CD				je	loc_1542		; Jump if equal
020A:90FF  83 3C FF				cmp	word ptr [si],0FFFFh
020A:9102  74 03				je	loc_1547		; Jump if equal
020A:9104  E9 FF3E				jmp	loc_1539		; (9045)
020A:9107			loc_1547:
020A:9107  E8 073F				call	sub_140			; (9849)
020A:910A  26: 80 4D 07 40			or	byte ptr es:[di+7],40h	; '@'
020A:910F  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:9114  26: 80 4D 05 40			or	byte ptr es:[di+5],40h	; '@'
020A:9119  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:911E  75 BC				jnz	loc_1545		; Jump if not zero
020A:9120  E8 02A1				call	sub_131			; (93C4)
020A:9123  BD 27CF				mov	bp,27CFh
020A:9126  3E: C6 46 00 3D			mov	byte ptr ds:[bp],3Dh	; '='
020A:912B  45					inc	bp
020A:912C  45					inc	bp
020A:912D  26: 8B 45 02				mov	ax,es:[di+2]
020A:9131  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:9131  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:9136  BD 27EA				mov	bp,27EAh
020A:9139  B9 000A				mov	cx,0Ah
020A:913C  E8 F7FD				call	sub_124			; (893C)
020A:913F  B1 00				mov	cl,0
020A:9141  C6 06 27FA 65			mov	data_338,65h		; (020A:27FA=0A0h) 'e'
020A:9146  C7 06 27FB 7571			mov	data_339,7571h		; (020A:27FB=0AD20h)
020A:914C  80 3E 2EB8 00			cmp	data_400,0		; (020A:2EB8=45h)
020A:9151  75 0B				jne	loc_1548		; Jump if not equal
020A:9153  C6 06 27FA 45			mov	data_338,45h		; (020A:27FA=0A0h) 'E'
020A:9158  C7 06 27FB 5551			mov	data_339,5551h		; (020A:27FB=0AD20h)
020A:915E			loc_1548:
020A:915E  BD 2802				mov	bp,2802h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 301

020A:9161  26: 8B 45 02				mov	ax,es:[di+2]
020A:9165  9A 16BF:0088		;*		call	far ptr sub_174		;*(16BF:0088)
020A:9165  9A 88 00 BF 16			db	 9Ah, 88h, 00h,0BFh, 16h
020A:916A  B7 00				mov	bh,0
020A:916C  26: 8A 45 04				mov	al,es:[di+4]
020A:9170  24 3F				and	al,3Fh			; '?'
020A:9172  3C 02				cmp	al,2
020A:9174  74 0B				je	loc_1549		; Jump if equal
020A:9176  3C 00				cmp	al,0
020A:9178  75 09				jne	loc_1550		; Jump if not equal
020A:917A  26: 83 7D 08 02			cmp	word ptr es:[di+8],2
020A:917F  75 02				jne	loc_1550		; Jump if not equal
020A:9181			loc_1549:
020A:9181  B7 20				mov	bh,20h			; ' '
020A:9183			loc_1550:
020A:9183  E8 0032				call	sub_129			; (91B8)
020A:9186  BA 27CA				mov	dx,27CAh
020A:9189  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:918E  06					push	es
020A:918F  E8 EA16				call	sub_99			; (7BA8)
020A:9192  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9197  5A					pop	dx
020A:9198  8E C2				mov	es,dx
020A:919A  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:919F  5A					pop	dx
020A:91A0  75 0A				jnz	loc_1551		; Jump if not zero
020A:91A2  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:91A7  74 03				je	loc_1551		; Jump if equal
020A:91A9  E8 0988				call	sub_151			; (9B34)
020A:91AC			loc_1551:
020A:91AC  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:91B1  E9 FF28				jmp	loc_1545		; (90DC)
020A:91B4			loc_1552:
020A:91B4  C3					retn
020A:91B5  87 DB				xchg	bx,bx
020A:91B7  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_129		proc	near
020A:91B8  51					push	cx
020A:91B9  06					push	es
020A:91BA  55					push	bp
020A:91BB  F6 06 152A 01			test	data_223,1		; (020A:152A=0)
020A:91C0  74 0E				jz	loc_1553		; Jump if zero
020A:91C2  80 3E 152B 01			cmp	data_224,1		; (020A:152B=0)
020A:91C7  74 07				je	loc_1553		; Jump if equal
020A:91C9  80 3E 4202 01			cmp	byte ptr ds:[4202h],1	; (020A:4202=0FFh)
020A:91CE  75 03				jne	loc_1554		; Jump if not equal
020A:91D0			loc_1553:
020A:91D0  E9 00F6				jmp	loc_1568		; (92C9)
020A:91D3			loc_1554:
020A:91D3  E8 00FE				call	sub_130			; (92D4)
020A:91D6  32 C9				xor	cl,cl			; Zero register
020A:91D8  B0 28				mov	al,28h			; '('
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 302

020A:91DA  80 3E 2A35 00			cmp	byte ptr ds:[2A35h],0	; (020A:2A35=0A3h)
020A:91DF  74 02				je	loc_1555		; Jump if equal
020A:91E1  B0 5B				mov	al,5Bh			; '['
020A:91E3			loc_1555:
020A:91E3  3E: 88 46 00				mov	ds:[bp],al
020A:91E7  45					inc	bp
020A:91E8  53					push	bx
020A:91E9  8C C8				mov	ax,cs
020A:91EB  26: 3B 05				cmp	ax,es:[di]
020A:91EE  75 0A				jne	loc_1556		; Jump if not equal
020A:91F0  3E: C7 46 00 7373			mov	word ptr ds:[bp],7373h
020A:91F6  45					inc	bp
020A:91F7  45					inc	bp
020A:91F8  EB 4C				jmp	short loc_1561		; (9246)
020A:91FA			loc_1556:
020A:91FA  26: 8B 05				mov	ax,es:[di]
020A:91FD  25 FFF0				and	ax,0FFF0h
020A:9200  3D FBA0				cmp	ax,0FBA0h
020A:9203  75 22				jne	loc_1559		; Jump if not equal
020A:9205  FE C1				inc	cl
020A:9207  3E: C7 46 00 3F3F			mov	word ptr ds:[bp],3F3Fh
020A:920D  45					inc	bp
020A:920E  45					inc	bp
020A:920F  26: 8B 05				mov	ax,es:[di]
020A:9212  24 0F				and	al,0Fh
020A:9214  3C 0F				cmp	al,0Fh
020A:9216  74 0D				je	loc_1558		; Jump if equal
020A:9218  04 30				add	al,30h			; '0'
020A:921A  3C 39				cmp	al,39h			; '9'
020A:921C  76 02				jbe	loc_1557		; Jump if below or =
020A:921E  04 07				add	al,7
020A:9220			loc_1557:
020A:9220  3E: 88 46 00				mov	ds:[bp],al
020A:9224  45					inc	bp
020A:9225			loc_1558:
020A:9225  EB 1F				jmp	short loc_1561		; (9246)
020A:9227			loc_1559:
020A:9227  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:922C  75 10				jnz	loc_1560		; Jump if not zero
020A:922E  80 3E 14AD 02			cmp	data_222,2		; (020A:14AD=0)
020A:9233  72 09				jb	loc_1560		; Jump if below
020A:9235  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:923A  74 02				jz	loc_1560		; Jump if zero
020A:923C  EB 17				jmp	short loc_1562		; (9255)
020A:923E			loc_1560:
020A:923E  26: 8B 05				mov	ax,es:[di]
020A:9241  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:9241  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:9246			loc_1561:
020A:9246  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:924B  45					inc	bp
020A:924C  26: 8B 45 02				mov	ax,es:[di+2]
020A:9250  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:9250  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:9255			loc_1562:
020A:9255  5B					pop	bx
020A:9256  0A C9				or	cl,cl			; Zero ?
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 303

020A:9258  75 5F				jnz	loc_1566		; Jump if not zero
020A:925A  F6 C7 30				test	bh,30h			; '0'
020A:925D  74 07				jz	loc_1563		; Jump if zero
020A:925F  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:9264  74 53				je	loc_1566		; Jump if equal
020A:9266			loc_1563:
020A:9266  3E: C6 46 00 3D			mov	byte ptr ds:[bp],3Dh	; '='
020A:926B  45					inc	bp
020A:926C  F6 C7 30				test	bh,30h			; '0'
020A:926F  74 39				jz	loc_1565		; Jump if zero
020A:9271  F6 C7 20				test	bh,20h			; ' '
020A:9274  74 23				jz	loc_1564		; Jump if zero
020A:9276  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (020A:2ECA=54h)
020A:927B  74 1C				jz	loc_1564		; Jump if zero
020A:927D  26: 83 7D 02 FC			cmp	word ptr es:[di+2],0FFFCh
020A:9282  77 35				ja	loc_1566		; Jump if above
020A:9284  26: 8B 5D 02				mov	bx,es:[di+2]
020A:9288  26: 8E 05				mov	es,es:[di]
020A:928B  26: 8B 47 02				mov	ax,es:[bx+2]
020A:928F  26: 8B 1F				mov	bx,es:[bx]
020A:9292  9A 16BF:01E8		;*		call	far ptr sub_176		;*(16BF:01E8)
020A:9292  9A E8 01 BF 16			db	 9Ah,0E8h, 01h,0BFh, 16h
020A:9297  EB 20				jmp	short loc_1566		; (92B9)
020A:9299			loc_1564:
020A:9299  26: 8B 5D 02				mov	bx,es:[di+2]
020A:929D  26: 8E 05				mov	es,es:[di]
020A:92A0  26: 8B 07				mov	ax,es:[bx]
020A:92A3  9A 16BF:0088		;*		call	far ptr sub_174		;*(16BF:0088)
020A:92A3  9A 88 00 BF 16			db	 9Ah, 88h, 00h,0BFh, 16h
020A:92A8  EB 0F				jmp	short loc_1566		; (92B9)
020A:92AA			loc_1565:
020A:92AA  26: 8B 5D 02				mov	bx,es:[di+2]
020A:92AE  26: 8E 05				mov	es,es:[di]
020A:92B1  26: 8A 07				mov	al,es:[bx]
020A:92B4  9A 16BF:0034		;*		call	far ptr sub_171		;*(16BF:0034)
020A:92B4  9A 34 00 BF 16			db	 9Ah, 34h, 00h,0BFh, 16h
020A:92B9			loc_1566:
020A:92B9  B0 29				mov	al,29h			; ')'
020A:92BB  80 3E 2A35 00			cmp	byte ptr ds:[2A35h],0	; (020A:2A35=0A3h)
020A:92C0  74 02				je	loc_1567		; Jump if equal
020A:92C2  B0 5D				mov	al,5Dh			; ']'
020A:92C4			loc_1567:
020A:92C4  3E: 88 46 00				mov	ds:[bp],al
020A:92C8  45					inc	bp
020A:92C9			loc_1568:
020A:92C9  5D					pop	bp
020A:92CA  07					pop	es
020A:92CB  59					pop	cx
020A:92CC  C6 06 2A35 00			mov	byte ptr ds:[2A35h],0	; (020A:2A35=0A3h)
020A:92D1  C3					retn
				sub_129		endp
  
020A:92D2  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 304

  
				sub_130		proc	near
020A:92D4  50					push	ax
020A:92D5  51					push	cx
020A:92D6  57					push	di
020A:92D7  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:92DC  06					push	es
020A:92DD  E8 057E				call	sub_145			; (985E)
020A:92E0  32 E4				xor	ah,ah			; Zero register
020A:92E2  BF 284E				mov	di,284Eh
020A:92E5  B9 0026				mov	cx,26h
020A:92E8  B0 3B				mov	al,3Bh			; ';'
020A:92EA  FD					std				; Set direction flag
020A:92EB  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:92ED  0B C9				or	cx,cx			; Zero ?
020A:92EF  75 02				jnz	loc_1569		; Jump if not zero
020A:92F1  FE C4				inc	ah
020A:92F3			loc_1569:
020A:92F3  BF 284E				mov	di,284Eh
020A:92F6  B9 0026				mov	cx,26h
020A:92F9  B0 20				mov	al,20h			; ' '
020A:92FB  FD					std				; Set direction flag
020A:92FC  F3/ AE				repe	scasb			; Rep zf=1+cx >0 Scan es:[di] for al
020A:92FE  47					inc	di
020A:92FF  47					inc	di
020A:9300  0A E4				or	ah,ah			; Zero ?
020A:9302  74 04				jz	loc_1570		; Jump if zero
020A:9304  C6			data_559	db	0C6h
020A:9305  05 473B				add	ax,473Bh
020A:9308			loc_1570:
020A:9308  47					inc	di
020A:9309  FC					cld				; Clear direction
020A:930A  8B EF				mov	bp,di
020A:930C  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9311  5A					pop	dx
020A:9312  8E C2				mov	es,dx
020A:9314  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:9319  5A					pop	dx
020A:931A  75 0A				jnz	loc_1571		; Jump if not zero
020A:931C  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:9321  74 03				je	loc_1571		; Jump if equal
020A:9323  E8 080E				call	sub_151			; (9B34)
020A:9326			loc_1571:
020A:9326  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:932B  5F					pop	di
020A:932C  59					pop	cx
020A:932D  58					pop	ax
020A:932E  C3					retn
				sub_130		endp
  
020A:932F  90					nop
020A:9330  80 3E 263D 06			cmp	byte ptr ds:[263Dh],6	; (020A:263D=99h)
020A:9335  73 02				jae	loc_1572		; Jump if above or =
020A:9337  EB 19				jmp	short loc_1574		; (9352)
020A:9339			loc_1572:
020A:9339  80 3E 2638 04			cmp	byte ptr ds:[2638h],4	; (020A:2638=0B4h)
020A:933E  76 12				jbe	loc_1574		; Jump if below or =
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 305

020A:9340  F6 06 2638 01			test	byte ptr ds:[2638h],1	; (020A:2638=0B4h)
020A:9345  75 02				jnz	loc_1573		; Jump if not zero
020A:9347  EB 09				jmp	short loc_1574		; (9352)
020A:9349			loc_1573:
020A:9349  BA 0007				mov	dx,7
020A:934C  BB 46B4				mov	bx,46B4h
020A:934F  E8 B1BE		;*		call	sub_47			;*(4510)
020A:934F  E8 BE B1				db	0E8h,0BEh,0B1h
020A:9352			loc_1574:
020A:9352  C3					retn
020A:9353  90					nop
020A:9354  50					push	ax
020A:9355  53					push	bx
020A:9356  51					push	cx
020A:9357  52					push	dx
020A:9358  56					push	si
020A:9359  57					push	di
020A:935A  55					push	bp
020A:935B  BF 0008				mov	di,8
020A:935E			loc_1575:
020A:935E  BD 0001				mov	bp,1
020A:9361  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:9365  75 07				jne	loc_1576		; Jump if not equal
020A:9367  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:936C  74 4E				je	loc_1580		; Jump if equal
020A:936E			loc_1576:
020A:936E  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:9373  75 30				jnz	loc_1578		; Jump if not zero
020A:9375  26: 8A 65 05				mov	ah,es:[di+5]
020A:9379  80 E4 0C				and	ah,0Ch
020A:937C  80 FC 04				cmp	ah,4
020A:937F  75 1D				jne	loc_1577		; Jump if not equal
020A:9381  26: 8A 65 04				mov	ah,es:[di+4]
020A:9385  80 E4 3F				and	ah,3Fh			; '?'
020A:9388  80 FC 21				cmp	ah,21h			; '!'
020A:938B  74 18				je	loc_1578		; Jump if equal
020A:938D  80 FC 22				cmp	ah,22h			; '"'
020A:9390  74 13				je	loc_1578		; Jump if equal
020A:9392  80 FC 20				cmp	ah,20h			; ' '
020A:9395  75 07				jne	loc_1577		; Jump if not equal
020A:9397  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:939C  74 07				jz	loc_1578		; Jump if zero
020A:939E			loc_1577:
020A:939E  8B F7				mov	si,di
020A:93A0  E8 16C9				call	sub_158			; (AA6C)
020A:93A3  EB B9				jmp	short loc_1575		; (935E)
020A:93A5			loc_1578:
020A:93A5  BB 377F				mov	bx,377Fh
020A:93A8  26: 8A 45 05				mov	al,es:[di+5]
020A:93AC  25 000F				and	ax,0Fh
020A:93AF  D7					xlat				; al=[al+[bx]] table
020A:93B0  0A C0				or	al,al			; Zero ?
020A:93B2  75 04				jnz	loc_1579		; Jump if not zero
020A:93B4  26: 8A 45 06				mov	al,es:[di+6]
020A:93B8			loc_1579:
020A:93B8  03 F8				add	di,ax
020A:93BA  EB A2				jmp	short loc_1575		; (935E)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 306

020A:93BC			loc_1580:
020A:93BC  5D					pop	bp
020A:93BD  5F					pop	di
020A:93BE  5E					pop	si
020A:93BF  5A					pop	dx
020A:93C0  59					pop	cx
020A:93C1  5B					pop	bx
020A:93C2  58					pop	ax
020A:93C3  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_131		proc	near
020A:93C4  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:93C9  06					push	es
020A:93CA  57					push	di
020A:93CB  B0 20				mov	al,20h			; ' '
020A:93CD  E8 048E				call	sub_145			; (985E)
020A:93D0  BF 27CA				mov	di,27CAh
020A:93D3  B9 2850				mov	cx,2850h
020A:93D6  81 E9 27CA				sub	cx,27CAh
020A:93DA  FC					cld				; Clear direction
020A:93DB  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:93DD  5F					pop	di
020A:93DE  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:93E3  5A					pop	dx
020A:93E4  8E C2				mov	es,dx
020A:93E6  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:93EB  5A					pop	dx
020A:93EC  75 0A				jnz	loc_1581		; Jump if not zero
020A:93EE  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:93F3  74 03				je	loc_1581		; Jump if equal
020A:93F5  E8 073C				call	sub_151			; (9B34)
020A:93F8			loc_1581:
020A:93F8  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:93FD  C3					retn
				sub_131		endp
  
020A:93FE  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_132		proc	near
020A:9400  50					push	ax
020A:9401  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:9406  06					push	es
020A:9407  E8 044B				call	sub_142			; (9855)
020A:940A  C6 06 2C3E 01			mov	byte ptr ds:[2C3Eh],1	; (9B68:2C3E=0E1h)
020A:940F  26: A1 0000				mov	ax,word ptr es:[0]	; (A0AF:0000=0)
020A:9413  3D 0000				cmp	ax,0
020A:9416  75 08				jne	loc_1582		; Jump if not equal
020A:9418  26: 83 3E 0004 00			cmp	word ptr es:[4],0	; (A0AF:0004=0)
020A:941E  74 18				je	loc_1583		; Jump if equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 307

020A:9420			loc_1582:
020A:9420  26: 83 3E 0002 FF			cmp	word ptr es:[2],0FFFFh	; (A0AF:0002=0)
020A:9426  74 10				je	loc_1583		; Jump if equal
020A:9428  26: A1 0002				mov	ax,word ptr es:[2]	; (A0AF:0002=0)
020A:942C  26: 3B 06 0004			cmp	ax,word ptr es:[4]	; (A0AF:0004=0)
020A:9431  73 05				jae	loc_1583		; Jump if above or =
020A:9433  C6 06 2C3E 00			mov	byte ptr ds:[2C3Eh],0	; (9B68:2C3E=0E1h)
020A:9438			loc_1583:
020A:9438  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:943D  5A					pop	dx
020A:943E  8E C2				mov	es,dx
020A:9440  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:9445  5A					pop	dx
020A:9446  75 0A				jnz	loc_1584		; Jump if not zero
020A:9448  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:944D  74 03				je	loc_1584		; Jump if equal
020A:944F  E8 06E2				call	sub_151			; (9B34)
020A:9452			loc_1584:
020A:9452  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:9457  58					pop	ax
020A:9458  C3					retn
				sub_132		endp
  
020A:9459  87 DB				xchg	bx,bx
020A:945B  90					nop
020A:945C  E8 03FC				call	sub_144			; (985B)
020A:945F  BF 7420				mov	di,7420h
020A:9462  BE 2791				mov	si,2791h
020A:9465  8B 04				mov	ax,[si]
020A:9467  24 F8				and	al,0F8h
020A:9469  D0 E8				shr	al,1			; Shift w/zeros fill
020A:946B  D0 E8				shr	al,1			; Shift w/zeros fill
020A:946D  32 E4				xor	ah,ah			; Zero register
020A:946F  03 F8				add	di,ax
020A:9471  26: 8B 3D				mov	di,es:[di]
020A:9474  8B 04				mov	ax,[si]
020A:9476			loc_1585:
020A:9476  26: 3A 05				cmp	al,es:[di]
020A:9479  74 15				je	loc_1587		; Jump if equal
020A:947B  72 10				jc	loc_1586		; Jump if carry Set
020A:947D  50					push	ax
020A:947E  B8 7474				mov	ax,7474h
020A:9481  2D 7460				sub	ax,7460h
020A:9484  03 F8				add	di,ax
020A:9486  58					pop	ax
020A:9487  26: 83 3D 00				cmp	word ptr es:[di],0
020A:948B  75 E9				jne	loc_1585		; Jump if not equal
020A:948D			loc_1586:
020A:948D  F8					clc				; Clear carry flag
020A:948E  EB 01				jmp	short loc_1588		; (9491)
020A:9490			loc_1587:
020A:9490  F9					stc				; Set carry flag
020A:9491			loc_1588:
020A:9491  C3					retn
020A:9492  87 DB				xchg	bx,bx
020A:9494  50					push	ax
020A:9495  51					push	cx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 308

020A:9496  56					push	si
020A:9497  B9 7474				mov	cx,7474h
020A:949A  81 E9 7460				sub	cx,7460h
020A:949E  BE 27A1				mov	si,27A1h
  
020A:94A1			locloop_1589:
020A:94A1  26: 8A 05				mov	al,es:[di]
020A:94A4  88 04				mov	[si],al
020A:94A6  47					inc	di
020A:94A7  46					inc	si
020A:94A8  E2 F7				loop	locloop_1589		; Loop if cx > 0
  
020A:94AA  BF 27A1				mov	di,27A1h
020A:94AD  E8 03AE				call	sub_145			; (985E)
020A:94B0  5E					pop	si
020A:94B1  59					pop	cx
020A:94B2  58					pop	ax
020A:94B3  C3					retn
020A:94B4  00 87 90DB				add	byte ptr ds:[90DBh][bx],al	; (020A:90DB=0FFh)
020A:94B8  06					push	es
020A:94B9  57					push	di
020A:94BA  2E: C4 3E 4857			les	di,dword ptr cs:[4857h]	; (020A:4857=9136h) Load 32 bit ptr
020A:94BF			loc_1590:
020A:94BF  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:94C3  75 09				jne	loc_1591		; Jump if not equal
020A:94C5  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:94CA  75 02				jne	loc_1591		; Jump if not equal
020A:94CC  EB 24				jmp	short loc_1594		; (94F2)
020A:94CE			loc_1591:
020A:94CE  26: 39 1D				cmp	es:[di],bx
020A:94D1  75 1A				jne	loc_1593		; Jump if not equal
020A:94D3  2E: 80 3E 4814 01			cmp	byte ptr cs:[4814h],1	; (020A:4814=2)
020A:94D9  74 0C				je	loc_1592		; Jump if equal
020A:94DB  26: 3B 45 04				cmp	ax,es:[di+4]
020A:94DF  77 0C				ja	loc_1593		; Jump if above
020A:94E1  26: 3B 45 02				cmp	ax,es:[di+2]
020A:94E5  72 06				jb	loc_1593		; Jump if below
020A:94E7			loc_1592:
020A:94E7  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:94EB  EB 07				jmp	short loc_1595		; (94F4)
020A:94ED			loc_1593:
020A:94ED  83 C7 15				add	di,15h
020A:94F0  EB CD				jmp	short loc_1590		; (94BF)
020A:94F2			loc_1594:
020A:94F2  33 C0				xor	ax,ax			; Zero register
020A:94F4			loc_1595:
020A:94F4  5F					pop	di
020A:94F5  07					pop	es
020A:94F6  C3					retn
020A:94F7  00 00				add	[bx+si],al
020A:94F9  64					db	64h
020A:94FA  1F					pop	ds
020A:94FB  90					nop
020A:94FC  E8 EC81				call	sub_107			; (8180)
020A:94FF  CB					retf				; Return far
020A:9500  00 00				add	[bx+si],al
020A:9502  00 FF				add	bh,bh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 309

020A:9504  FF 64 5F				jmp	word ptr [si+5Fh]	;*
020A:9507  6B					db	6Bh
020A:9508  60					db	60h
020A:9509  93					xchg	ax,bx
020A:950A  23 00				and	ax,[bx+si]
020A:950C  00 64 1F				add	[si+1Fh],ah
020A:950F  13 22				adc	sp,[bp+si]
020A:9511  8B 18				mov	bx,[bx+si]
020A:9513  FF					db	0FFh
020A:9514  FF					db	0FFh
020A:9515  FF					db	0FFh
020A:9516  FF					db	0FFh
020A:9517  FF					db	0FFh
020A:9518  FF 87 90DB				inc	word ptr ds:[90DBh][bx]	; (020A:90DB=0E8FFh)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_133		proc	near
020A:951C  E8 0041				call	sub_135			; (9560)
020A:951F  2E: 8B 16 486B			mov	dx,cs:data_511		; (020A:486B=6F6h)
020A:9524  B8 0001				mov	ax,1
020A:9527  E8 164E				call	sub_159			; (AB78)
020A:952A  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9530  75 15				jne	loc_1596		; Jump if not equal
020A:9532  BA FFFF				mov	dx,0FFFFh
020A:9535  B8 0002				mov	ax,2
020A:9538  E8 163D				call	sub_159			; (AB78)
020A:953B  B8 0001				mov	ax,1
020A:953E  E8 1637				call	sub_159			; (AB78)
020A:9541  B8 0004				mov	ax,4
020A:9544  E8 1631				call	sub_159			; (AB78)
020A:9547			loc_1596:
020A:9547  2E: C7 06 486D 1F64			mov	cs:data_512,1F64h	; (020A:486D=9B68h)
020A:954E  2E: C7 06 486F 2213			mov	cs:data_513,2213h	; (020A:486F=7502h)
020A:9555  C3					retn
				sub_133		endp
  
020A:9556  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_134		proc	near
020A:9558  2E: C7 06 4871 188B			mov	cs:data_514,188Bh	; (020A:4871=0B418h)
020A:955F  C3					retn
				sub_134		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_135		proc	near
020A:9560  50					push	ax
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 310

020A:9561  53					push	bx
020A:9562  51					push	cx
020A:9563  52					push	dx
020A:9564  56					push	si
020A:9565  57					push	di
020A:9566  55					push	bp
020A:9567  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:956C  1E					push	ds
020A:956D  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:9572  06					push	es
020A:9573  2E: 80 3E 4860 FF			cmp	byte ptr cs:[4860h],0FFh	; (020A:4860=93h)
020A:9579  2E: C6 06 4860 00			mov	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:957F  75 03				jnz	loc_1597		; Jump if not zero
020A:9581  E9 01A1				jmp	loc_1607		; (9725)
020A:9584			loc_1597:
020A:9584  B8 188B				mov	ax,188Bh
020A:9587  8E D8				mov	ds,ax
020A:9589  B8 3D00				mov	ax,3D00h
020A:958C  BA 6C70				mov	dx,6C70h
020A:958F  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:9591  73 03				jnc	loc_1598		; Jump if carry=0
020A:9593  E9 018F				jmp	loc_1607		; (9725)
020A:9596			loc_1598:
020A:9596  8B D8				mov	bx,ax
020A:9598  B4 44				mov	ah,44h			; 'D'
020A:959A  B0 07				mov	al,7
020A:959C  B9 0000				mov	cx,0
020A:959F  BA 6C79				mov	dx,6C79h
020A:95A2  CD 21				int	21h			; DOS Services  ah=function 44h
										;  device drivr cntrl al=subfunc
020A:95A4  50					push	ax
020A:95A5  B4 3E				mov	ah,3Eh			; '>'
020A:95A7  CD 21				int	21h			; DOS Services  ah=function 3Eh
										;  close file, bx=file handle
020A:95A9  73 09				jnc	loc_1600		; Jump if carry=0
020A:95AB  58					pop	ax
020A:95AC			loc_1599:
020A:95AC  9A 16BF:07E8		;*		call	far ptr sub_191		;*(16BF:07E8)
020A:95AC  9A E8 07 BF 16			db	 9Ah,0E8h, 07h,0BFh, 16h
020A:95B1  E9 0171				jmp	loc_1607		; (9725)
020A:95B4			loc_1600:
020A:95B4  58					pop	ax
020A:95B5  0A C0				or	al,al			; Zero ?
020A:95B7  74 F3				jz	loc_1599		; Jump if zero
020A:95B9  B4 40				mov	ah,40h			; '@'
020A:95BB  CD 67				int	67h			; EMS Memory        ah=func 40h
										;  get manager status in ah
020A:95BD  80 FC 00				cmp	ah,0
020A:95C0  75 EA				jne	loc_1599		; Jump if not equal
020A:95C2  B4 42				mov	ah,42h			; 'B'
020A:95C4  CD 67				int	67h			; EMS Memory        ah=func 42h
										;  get pages, bx=unused,dx=total
020A:95C6  0A E4				or	ah,ah			; Zero ?
020A:95C8  75 E2				jnz	loc_1599		; Jump if not zero
020A:95CA  83 FB 14				cmp	bx,14h
020A:95CD  72 DD				jb	loc_1599		; Jump if below
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 311

020A:95CF  B4 41				mov	ah,41h			; 'A'
020A:95D1  CD 67				int	67h			; EMS Memory        ah=func 41h
										;  get page frame segment in bx
020A:95D3  0A E4				or	ah,ah			; Zero ?
020A:95D5  75 D5				jnz	loc_1599		; Jump if not zero
020A:95D7  2E: 89 1E 4861			mov	cs:data_506,bx		; (020A:4861=0D233h)
020A:95DC  C6 06 6CC1 01			mov	byte ptr ds:[6CC1h],1	; (188B:6CC1=0)
020A:95E1  B4 43				mov	ah,43h			; 'C'
020A:95E3  BB 0004				mov	bx,4
020A:95E6  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:95E8  0A E4				or	ah,ah			; Zero ?
020A:95EA  75 C0				jnz	loc_1599		; Jump if not zero
020A:95EC  2E: 89		data_560	db	89h
020A:95EE  16					push	ss
020A:95EF  6B					db	6Bh
020A:95F0  48					dec	ax
020A:95F1  89 16 6CC2				mov	word ptr ds:[6CC2h],dx	; (188B:6CC2=0FFFFh)
020A:95F5  B4 43				mov	ah,43h			; 'C'
020A:95F7  BB 0004				mov	bx,4
020A:95FA  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:95FC  0A E4				or	ah,ah			; Zero ?
020A:95FE  75 AC				jnz	loc_1599		; Jump if not zero
020A:9600  2E: 89 16 4869			mov	cs:data_510,dx		; (020A:4869=64Dh)
020A:9605  89 16 6CC4				mov	word ptr ds:[6CC4h],dx	; (188B:6CC4=0FFFFh)
020A:9609  B4 43				mov	ah,43h			; 'C'
020A:960B  BB 0004				mov	bx,4
020A:960E  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:9610  0A E4				or	ah,ah			; Zero ?
020A:9612  75 98				jnz	loc_1599		; Jump if not zero
020A:9614  89 16 6CC6				mov	word ptr ds:[6CC6h],dx	; (188B:6CC6=0FFFFh)
020A:9618  B4 43				mov	ah,43h			; 'C'
020A:961A  BB 0004				mov	bx,4
020A:961D  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:961F  0A E4				or	ah,ah			; Zero ?
020A:9621  75 89				jnz	loc_1599		; Jump if not zero
020A:9623  89 16 6CC8				mov	word ptr ds:[6CC8h],dx	; (188B:6CC8=0FFFFh)
020A:9627  B4 43				mov	ah,43h			; 'C'
020A:9629  BB 0004				mov	bx,4
020A:962C  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:962E  0A E4				or	ah,ah			; Zero ?
020A:9630  75 11				jnz	loc_1601		; Jump if not zero
020A:9632  89 16 6CCA				mov	word ptr ds:[6CCAh],dx	; (188B:6CCA=0FFFFh)
020A:9636  C6 06 6D8A 03			mov	byte ptr ds:[6D8Ah],3	; (188B:6D8A=0)
020A:963B  C6 06 6D8B 01			mov	byte ptr ds:[6D8Bh],1	; (188B:6D8B=0)
020A:9640  EB 09				jmp	short loc_1602		; (964B)
020A:9642  90					nop
020A:9643			loc_1601:
020A:9643  9A 16BF:07E8		;*		call	far ptr sub_191		;*(16BF:07E8)
020A:9643  9A E8 07 BF 16			db	 9Ah,0E8h, 07h,0BFh, 16h
020A:9648  E9 00DA				jmp	loc_1607		; (9725)
020A:964B			loc_1602:
020A:964B  BA 491E				mov	dx,491Eh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 312

020A:964E  B4 09				mov	ah,9
020A:9650  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020A:9652  B9 0004				mov	cx,4
020A:9655  BD 0000				mov	bp,0
020A:9658  8B 16 6CC2				mov	dx,word ptr ds:[6CC2h]	; (188B:6CC2=0FFFFh)
020A:965C  BE 6CAB				mov	si,6CABh
020A:965F  E8 0132				call	sub_136			; (9794)
020A:9662  72 DF				jc	loc_1601		; Jump if carry Set
020A:9664  BA 2393				mov	dx,2393h
020A:9667  8E C2				mov	es,dx
020A:9669  8B 16 6CC4				mov	dx,word ptr ds:[6CC4h]	; (188B:6CC4=0FFFFh)
020A:966D  E8 0188				call	sub_137			; (97F8)
020A:9670  72 D1				jc	loc_1601		; Jump if carry Set
020A:9672  8B 16 6CC6				mov	dx,word ptr ds:[6CC6h]	; (188B:6CC6=0FFFFh)
020A:9676  BE 6C7B				mov	si,6C7Bh
020A:9679  E8 0118				call	sub_136			; (9794)
020A:967C  72 C5				jc	loc_1601		; Jump if carry Set
020A:967E  8B 16 6CC8				mov	dx,word ptr ds:[6CC8h]	; (188B:6CC8=0FFFFh)
020A:9682  BE 6C9B				mov	si,6C9Bh
020A:9685  E8 010C				call	sub_136			; (9794)
020A:9688  72 B9				jc	loc_1601		; Jump if carry Set
020A:968A  8B 16 6CCA				mov	dx,word ptr ds:[6CCAh]	; (188B:6CCA=0FFFFh)
020A:968E  BE 6C8B				mov	si,6C8Bh
020A:9691  E8 0100				call	sub_136			; (9794)
020A:9694  72 AD				jc	loc_1601		; Jump if carry Set
020A:9696  2E: C6 06 4860 01			mov	byte ptr cs:[4860h],1	; (020A:4860=93h)
020A:969C  B8 2393				mov	ax,2393h
020A:969F  8E C0				mov	es,ax
020A:96A1  B8 5F64				mov	ax,5F64h
020A:96A4  8E D8				mov	ds,ax
020A:96A6  33 FF				xor	di,di			; Zero register
020A:96A8  8B F7				mov	si,di
020A:96AA  FC					cld				; Clear direction
020A:96AB  B9 1064				mov	cx,1064h
020A:96AE  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:96B0  2E: 8C 06 4865			mov	cs:data_508,es		; (020A:4865=75FCh)
020A:96B5  8C C0				mov	ax,es
020A:96B7  BB 1064				mov	bx,1064h
020A:96BA  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:96BC  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:96BE  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:96C0  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:96C2  03 C3				add	ax,bx
020A:96C4  40					inc	ax
020A:96C5  2E: A3 4867				mov	cs:data_509,ax		; (020A:4867=0E825h)
020A:96C9  B8 188B				mov	ax,188Bh
020A:96CC  8E D8				mov	ds,ax
020A:96CE  B4 42				mov	ah,42h			; 'B'
020A:96D0  CD 67				int	67h			; EMS Memory        ah=func 42h
										;  get pages, bx=unused,dx=total
020A:96D2  0A E4				or	ah,ah			; Zero ?
020A:96D4  75 4B				jnz	loc_1606		; Jump if not zero
020A:96D6  83 FB 0C				cmp	bx,0Ch
020A:96D9  72 46				jb	loc_1606		; Jump if below
020A:96DB  8B C3				mov	ax,bx
020A:96DD  B3 0C				mov	bl,0Ch
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 313

020A:96DF  F6 F3				div	bl			; al, ah rem = ax/reg
020A:96E1  3C 00				cmp	al,0
020A:96E3  74 3C				je	loc_1606		; Jump if equal
020A:96E5  32 E4				xor	ah,ah			; Zero register
020A:96E7  3D 001F				cmp	ax,1Fh
020A:96EA  72 03				jb	loc_1603		; Jump if below
020A:96EC  B8 001F				mov	ax,1Fh
020A:96EF			loc_1603:
020A:96EF  8B C8				mov	cx,ax
020A:96F1  BF 000A				mov	di,0Ah
  
020A:96F4			locloop_1604:
020A:96F4  51					push	cx
020A:96F5  B9 0003				mov	cx,3
  
020A:96F8			locloop_1605:
020A:96F8  B4 43				mov	ah,43h			; 'C'
020A:96FA  BB 0004				mov	bx,4
020A:96FD  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:96FF  0A E4				or	ah,ah			; Zero ?
020A:9701  75 1E				jnz	loc_1606		; Jump if not zero
020A:9703  89 95 6CC2				mov	word ptr ds:[6CC2h][di],dx	; (188B:6CC2=0FFFFh)
020A:9707  FE 06 6D8A				inc	byte ptr ds:[6D8Ah]	; (188B:6D8A=0)
020A:970B  BE 0000				mov	si,0
020A:970E  E8 0083				call	sub_136			; (9794)
020A:9711  72 0E				jc	loc_1606		; Jump if carry Set
020A:9713  47					inc	di
020A:9714  47					inc	di
020A:9715  E2 E1				loop	locloop_1605		; Loop if cx > 0
  
020A:9717  59					pop	cx
020A:9718  FE 06 6D8B				inc	byte ptr ds:[6D8Bh]	; (188B:6D8B=0)
020A:971C  E2 D6				loop	locloop_1604		; Loop if cx > 0
  
020A:971E  EB 2E				jmp	short loc_1608		; (974E)
020A:9720  90					nop
020A:9721			loc_1606:
020A:9721  59					pop	cx
020A:9722  EB 2A				jmp	short loc_1608		; (974E)
020A:9724  90					nop
020A:9725			loc_1607:
020A:9725  2E: C7 06 4865 5F64			mov	cs:data_508,5F64h	; (020A:4865=75FCh)
020A:972C  B8 5F64				mov	ax,5F64h
020A:972F  BB 1064				mov	bx,1064h
020A:9732  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:9734  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:9736  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:9738  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:973A  03 C3				add	ax,bx
020A:973C  40					inc	ax
020A:973D  2E: A3 4867				mov	cs:data_509,ax		; (020A:4867=0E825h)
020A:9741  2E: C7 06 4869 2393			mov	cs:data_510,2393h	; (020A:4869=64Dh)
020A:9748  2E: C6 06 4860 00			mov	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:974E			loc_1608:
020A:974E  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9753  5A					pop	dx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 314

020A:9754  8E C2				mov	es,dx
020A:9756  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:975B  5A					pop	dx
020A:975C  75 0A				jnz	loc_1609		; Jump if not zero
020A:975E  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:9763  74 03				je	loc_1609		; Jump if equal
020A:9765  E8 03CC				call	sub_151			; (9B34)
020A:9768			loc_1609:
020A:9768  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:976D  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9772  5A					pop	dx
020A:9773  8E DA				mov	ds,dx
020A:9775  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:977A  5A					pop	dx
020A:977B  75 0A				jnz	loc_1610		; Jump if not zero
020A:977D  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:9782  74 03				je	loc_1610		; Jump if equal
020A:9784  E8 03AD				call	sub_151			; (9B34)
020A:9787			loc_1610:
020A:9787  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:978C  5D					pop	bp
020A:978D  5F					pop	di
020A:978E  5E					pop	si
020A:978F  5A					pop	dx
020A:9790  59					pop	cx
020A:9791  5B					pop	bx
020A:9792  58					pop	ax
020A:9793  C3					retn
				sub_135		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_136		proc	near
020A:9794  50					push	ax
020A:9795  53					push	bx
020A:9796  51					push	cx
020A:9797  55					push	bp
020A:9798  33 ED				xor	bp,bp			; Zero register
020A:979A  B9 0004				mov	cx,4
  
020A:979D			locloop_1611:
020A:979D  B4 44				mov	ah,44h			; 'D'
020A:979F  8B DD				mov	bx,bp
020A:97A1  8A C3				mov	al,bl
020A:97A3  CD 67				int	67h			; EMS Memory        ah=func 44h
										;  map memory, dx=handle
020A:97A5  0A E4				or	ah,ah			; Zero ?
020A:97A7  75 46				jnz	loc_1614		; Jump if not zero
020A:97A9  45					inc	bp
020A:97AA  E2 F1				loop	locloop_1611		; Loop if cx > 0
  
020A:97AC  06					push	es
020A:97AD  57					push	di
020A:97AE  2E: 8E 06 4861			mov	es,cs:data_506		; (020A:4861=0D233h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 315

020A:97B3  33 FF				xor	di,di			; Zero register
020A:97B5  B8 FFFF				mov	ax,0FFFFh
020A:97B8  B9 8000				mov	cx,8000h
020A:97BB  FC					cld				; Clear direction
020A:97BC  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:97BE  B9 0010				mov	cx,10h
020A:97C1  83 FE 00				cmp	si,0
020A:97C4  74 08				je	loc_1612		; Jump if equal
020A:97C6  BF FFF0				mov	di,0FFF0h
020A:97C9  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:97CB  EB 03				jmp	short loc_1613		; (97D0)
020A:97CD  90					nop
020A:97CE			loc_1612:
020A:97CE  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:97D0			loc_1613:
020A:97D0  1E					push	ds
020A:97D1  2E: 8E 1E 4861			mov	ds,cs:data_506		; (020A:4861=0D233h)
020A:97D6  BD FFFC				mov	bp,0FFFCh
020A:97D9  8B C2				mov	ax,dx
020A:97DB  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:97DB  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:97E0  1F					pop	ds
020A:97E1  5F					pop	di
020A:97E2  07					pop	es
020A:97E3  B4 47				mov	ah,47h			; 'G'
020A:97E5  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020A:97E7  0A E4				or	ah,ah			; Zero ?
020A:97E9  75 04				jnz	loc_1614		; Jump if not zero
020A:97EB  F8					clc				; Clear carry flag
020A:97EC  EB 02				jmp	short loc_1615		; (97F0)
020A:97EE  90					nop
020A:97EF			loc_1614:
020A:97EF  F9					stc				; Set carry flag
020A:97F0			loc_1615:
020A:97F0  5D					pop	bp
020A:97F1  59					pop	cx
020A:97F2  5B					pop	bx
020A:97F3  58					pop	ax
020A:97F4  C3					retn
				sub_136		endp
  
020A:97F5  87 DB				xchg	bx,bx
020A:97F7  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_137		proc	near
020A:97F8  50					push	ax
020A:97F9  53					push	bx
020A:97FA  51					push	cx
020A:97FB  55					push	bp
020A:97FC  33 ED				xor	bp,bp			; Zero register
020A:97FE  B9 0004				mov	cx,4
  
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 316

020A:9801			locloop_1616:
020A:9801  B4 44				mov	ah,44h			; 'D'
020A:9803  8B DD				mov	bx,bp
020A:9805  8A C3				mov	al,bl
020A:9807  CD 67				int	67h			; EMS Memory        ah=func 44h
										;  map memory, dx=handle
020A:9809  0A E4				or	ah,ah			; Zero ?
020A:980B  75 28				jnz	loc_1617		; Jump if not zero
020A:980D  45					inc	bp
020A:980E  E2 F1				loop	locloop_1616		; Loop if cx > 0
  
020A:9810  06					push	es
020A:9811  1E					push	ds
020A:9812  57					push	di
020A:9813  56					push	si
020A:9814  06					push	es
020A:9815  1F					pop	ds
020A:9816  2E: 8E 06 4861			mov	es,cs:data_506		; (020A:4861=0D233h)
020A:981B  33 FF				xor	di,di			; Zero register
020A:981D  8B F7				mov	si,di
020A:981F  B9 8000				mov	cx,8000h
020A:9822  FC					cld				; Clear direction
020A:9823  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
020A:9825  5E					pop	si
020A:9826  5F					pop	di
020A:9827  1F					pop	ds
020A:9828  07					pop	es
020A:9829  B4 47				mov	ah,47h			; 'G'
020A:982B  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020A:982D  0A E4				or	ah,ah			; Zero ?
020A:982F  75 04				jnz	loc_1617		; Jump if not zero
020A:9831  F8					clc				; Clear carry flag
020A:9832  EB 05				jmp	short loc_1618		; (9839)
020A:9834  90					nop
020A:9835			loc_1617:
020A:9835  F9					stc				; Set carry flag
020A:9836  EB 01				jmp	short loc_1618		; (9839)
020A:9838  90					nop
020A:9839			loc_1618:
020A:9839  5D					pop	bp
020A:983A  59					pop	cx
020A:983B  5B					pop	bx
020A:983C  58					pop	ax
020A:983D  C3					retn
				sub_137		endp
  
020A:983E  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_138		proc	near
020A:9840  EB 3D				jmp	short loc_1619		; (987F)
020A:9842  90					nop
020A:9843  EB 40				jmp	short loc_1620		; (9885)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 317

020A:9845  90					nop
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_139:
020A:9846  EB 43				jmp	short loc_1621		; (988B)
020A:9848  90					nop
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_140:
020A:9849  EB 5E				jmp	short loc_1623		; (98A9)
020A:984B  90					nop
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_141:
020A:984C  EB 61				jmp	short loc_1624		; (98AF)
020A:984E  90					nop
020A:984F  EB 64				jmp	short loc_1625		; (98B5)
020A:9851  90					nop
020A:9852  EB 67				jmp	short loc_1626		; (98BB)
020A:9854  90					nop
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_142:
020A:9855  E9 0083				jmp	loc_1628		; (98DB)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_143:
020A:9858  E9 0086				jmp	loc_1629		; (98E1)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_144:
020A:985B  E9 0089				jmp	loc_1630		; (98E7)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_145:
020A:985E  E9 00A4				jmp	loc_1632		; (9905)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_146:
020A:9861  E9 00A7				jmp	loc_1633		; (990B)
020A:9864  E9 00AA				jmp	loc_1634		; (9911)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_147:
020A:9867  E9 00AD				jmp	loc_1635		; (9917)
020A:986A  E9 00CA				jmp	loc_1637		; (9937)
020A:986D  E9 00CC				jmp	loc_1638		; (993C)
020A:9870  E9 00CE				jmp	loc_1639		; (9941)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 318

020A:9873  E9 00E7				jmp	loc_1641		; (995D)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_148:
020A:9876  E9 00E9				jmp	loc_1642		; (9962)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_149:
020A:9879  E9 00EB				jmp	loc_1643		; (9967)
020A:987C  E9 00ED				jmp	loc_1644		; (996C)
020A:987F			loc_1619:
020A:987F  2E: 8E 1E 486D			mov	ds,cs:data_512		; (020A:486D=9B68h)
020A:9884  C3					retn
020A:9885			loc_1620:
020A:9885  2E: 8E 1E 486F			mov	ds,cs:data_513		; (020A:486F=7502h)
020A:988A  C3					retn
020A:988B			loc_1621:
020A:988B  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9891  75 06				jne	loc_1622		; Jump if not equal
020A:9893  2E: 8E 1E 4869			mov	ds,cs:data_510		; (020A:4869=64Dh)
020A:9898  C3					retn
020A:9899			loc_1622:
020A:9899  52					push	dx
020A:989A  2E: 8B 16 4869			mov	dx,cs:data_510		; (020A:4869=64Dh)
020A:989F  E8 0292				call	sub_151			; (9B34)
020A:98A2  2E: 8E 1E 4861			mov	ds,cs:data_506		; (020A:4861=0D233h)
020A:98A7  5A					pop	dx
020A:98A8  C3					retn
020A:98A9			loc_1623:
020A:98A9  2E: 8E 1E 4871			mov	ds,cs:data_514		; (020A:4871=0B418h)
020A:98AE  C3					retn
020A:98AF			loc_1624:
020A:98AF  2E: 8E 1E 4865			mov	ds,cs:data_508		; (020A:4865=75FCh)
020A:98B4  C3					retn
020A:98B5			loc_1625:
020A:98B5  2E: 8E 1E 4867			mov	ds,cs:data_509		; (020A:4867=0E825h)
020A:98BA  C3					retn
020A:98BB			loc_1626:
020A:98BB  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:98C1  75 08				jne	loc_1627		; Jump if not equal
020A:98C3  50					push	ax
020A:98C4  B8 4F64				mov	ax,4F64h
020A:98C7  8E D8				mov	ds,ax
020A:98C9  58					pop	ax
020A:98CA  C3					retn
020A:98CB			loc_1627:
020A:98CB  52					push	dx
020A:98CC  2E: 8B 16 486B			mov	dx,cs:data_511		; (020A:486B=6F6h)
020A:98D1  E8 0260				call	sub_151			; (9B34)
020A:98D4  2E: 8E 1E 4861			mov	ds,cs:data_506		; (020A:4861=0D233h)
020A:98D9  5A					pop	dx
020A:98DA  C3					retn
020A:98DB			loc_1628:
020A:98DB  2E: 8E 06 486D			mov	es,cs:data_512		; (020A:486D=9B68h)
020A:98E0  C3					retn
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 319

020A:98E1			loc_1629:
020A:98E1  2E: 8E 06 486F			mov	es,cs:data_513		; (020A:486F=7502h)
020A:98E6  C3					retn
020A:98E7			loc_1630:
020A:98E7  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:98ED  75 06				jne	loc_1631		; Jump if not equal
020A:98EF  2E: 8E 06 4869			mov	es,cs:data_510		; (020A:4869=64Dh)
020A:98F4  C3					retn
020A:98F5			loc_1631:
020A:98F5  52					push	dx
020A:98F6  2E: 8B 16 4869			mov	dx,cs:data_510		; (020A:4869=64Dh)
020A:98FB  E8 0236				call	sub_151			; (9B34)
020A:98FE  2E: 8E 06 4861			mov	es,cs:data_506		; (020A:4861=0D233h)
020A:9903  5A					pop	dx
020A:9904  C3					retn
020A:9905			loc_1632:
020A:9905  2E: 8E 06 4871			mov	es,cs:data_514		; (020A:4871=0B418h)
020A:990A  C3					retn
020A:990B			loc_1633:
020A:990B  2E: 8E 06 4865			mov	es,cs:data_508		; (020A:4865=75FCh)
020A:9910  C3					retn
020A:9911			loc_1634:
020A:9911  2E: 8E 06 4867			mov	es,cs:data_509		; (020A:4867=0E825h)
020A:9916  C3					retn
020A:9917			loc_1635:
020A:9917  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:991D  75 08				jne	loc_1636		; Jump if not equal
020A:991F  50					push	ax
020A:9920  B8 4F64				mov	ax,4F64h
020A:9923  8E C0				mov	es,ax
020A:9925  58					pop	ax
020A:9926  C3					retn
020A:9927			loc_1636:
020A:9927  52					push	dx
020A:9928  2E: 8B 16 486B			mov	dx,cs:data_511		; (020A:486B=6F6h)
020A:992D  E8 0204				call	sub_151			; (9B34)
020A:9930  2E: 8E 06 4861			mov	es,cs:data_506		; (020A:4861=0D233h)
020A:9935  5A					pop	dx
020A:9936  C3					retn
020A:9937			loc_1637:
020A:9937  2E: A1 486D				mov	ax,cs:data_512		; (020A:486D=9B68h)
020A:993B  2EC3 6FA1		data_561	dw	2EC3h, 6FA1h
020A:993F  48					dec	ax
020A:9940  C3					retn
020A:9941			loc_1639:
020A:9941  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9947  75 05				jne	loc_1640		; Jump if not equal
020A:9949  2E: A1 4869				mov	ax,cs:data_510		; (020A:4869=64Dh)
020A:994D  C3					retn
020A:994E			loc_1640:
020A:994E  52					push	dx
020A:994F  2E: 8B 16 4869			mov	dx,cs:data_510		; (020A:4869=64Dh)
020A:9954  E8 01DD				call	sub_151			; (9B34)
020A:9957  2E: A1 4861				mov	ax,cs:data_506		; (020A:4861=0D233h)
020A:995B  5A					pop	dx
020A:995C  C3					retn
020A:995D			loc_1641:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 320

020A:995D  2E: A1 4871				mov	ax,cs:data_514		; (020A:4871=0B418h)
020A:9961  C3					retn
020A:9962			loc_1642:
020A:9962  2E: A1		data_563	db	0A1h
020A:9964  65			data_564	db	65h
020A:9965  48					dec	ax
020A:9966  C3					retn
020A:9967			loc_1643:
020A:9967  2E: A1 4867				mov	ax,cs:data_509		; (020A:4867=0E825h)
020A:996B  C3					retn
020A:996C			loc_1644:
020A:996C  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9972  75 04				jne	loc_1645		; Jump if not equal
020A:9974  B8 4F64				mov	ax,4F64h
020A:9977  C3					retn
020A:9978			loc_1645:
020A:9978  52					push	dx
020A:9979  2E: 8B 16 486B			mov	dx,cs:data_511		; (020A:486B=6F6h)
020A:997E  E8 01B3				call	sub_151			; (9B34)
020A:9981  2E: A1 4861				mov	ax,cs:data_506		; (020A:4861=0D233h)
020A:9985  5A					pop	dx
020A:9986  C3					retn
				sub_138		endp
  
020A:9987  01 2E 3E80				add	word ptr ds:[3E80h],bp	; (020A:3E80=0E9A6h)
020A:998B  E7 4C				out	4Ch,ax			; port 4Ch
020A:998D  00 74 03				add	[si+3],dh
020A:9990  E9 019F				jmp	loc_1661		; (9B32)
020A:9993  2E: FE 06 4CE7			inc	byte ptr cs:data_526+47h	; (020A:4CE7=42h)
020A:9998  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:999E  75 03				jne	loc_1646		; Jump if not equal
020A:99A0  E9 018F				jmp	loc_1661		; (9B32)
020A:99A3			loc_1646:
020A:99A3  50					push	ax
020A:99A4  53					push	bx
020A:99A5  51					push	cx
020A:99A6  52					push	dx
020A:99A7  56					push	si
020A:99A8  57					push	di
020A:99A9  55					push	bp
020A:99AA  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:99AF  06					push	es
020A:99B0  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:99B5  1E					push	ds
020A:99B6  E8 FE9C				call	sub_142			; (9855)
020A:99B9  E8 FE8D				call	sub_140			; (9849)
020A:99BC  33 F6				xor	si,si			; Zero register
020A:99BE  33 C9				xor	cx,cx			; Zero register
020A:99C0  26: 8B 44 04				mov	ax,es:[si+4]
020A:99C4  26: 3B 44 02				cmp	ax,es:[si+2]
020A:99C8  75 09				jne	loc_1647		; Jump if not equal
020A:99CA  2E: C6 06 4CE7 00			mov	byte ptr cs:data_526+47h,0	; (020A:4CE7=42h)
020A:99D0  E9 011A				jmp	loc_1658		; (9AED)
020A:99D3			loc_1647:
020A:99D3  26: 8B 04				mov	ax,es:[si]
020A:99D6  3D FFFF				cmp	ax,0FFFFh
020A:99D9  74 1C				je	loc_1648		; Jump if equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 321

020A:99DB  26: 8B 54 04				mov	dx,es:[si+4]
020A:99DF  26: 2B 54 02				sub	dx,es:[si+2]
020A:99E3  01 16 6CBB				add	data_544,dx		; (020A:6CBB=80B9h)
020A:99E7  83			data_567	db	83h
020A:99E8  16					push	ss
020A:99E9  BD 006C				mov	bp,6Ch
020A:99EC  83 C6 15				add	si,15h
020A:99EF  26: 3B 04				cmp	ax,es:[si]
020A:99F2  74 DF				je	loc_1647		; Jump if equal
020A:99F4  41					inc	cx
020A:99F5  EB DC				jmp	short loc_1647		; (99D3)
020A:99F7			loc_1648:
020A:99F7  89 0E 6CBF				mov	data_546,cx		; (020A:6CBF=0AE3Eh)
020A:99FB  3A 0E 6D8B				cmp	cl,data_550		; (020A:6D8B=74h)
020A:99FF  77 49				ja	loc_1651		; Jump if above
020A:9A01  33 F6				xor	si,si			; Zero register
020A:9A03  BB 0004				mov	bx,4
020A:9A06			loc_1649:
020A:9A06  26: 8B 04				mov	ax,es:[si]
020A:9A09  3D FFFF				cmp	ax,0FFFFh
020A:9A0C  74 39				je	loc_1650		; Jump if equal
020A:9A0E  50					push	ax
020A:9A0F  8B 97 6CC2				mov	dx,word ptr ds:[6CC2h][bx]	; (020A:6CC2=75FFh)
020A:9A13  26: 89 54 11				mov	es:[si+11h],dx
020A:9A17  B8 0002				mov	ax,2
020A:9A1A  E8 115B				call	sub_159			; (AB78)
020A:9A1D  8B 97 6CC4				mov	dx,word ptr ds:[6CC4h][bx]	; (020A:6CC4=0FE06h)
020A:9A21  26: 89 54 13				mov	es:[si+13h],dx
020A:9A25  B8 0001				mov	ax,1
020A:9A28  E8 114D				call	sub_159			; (AB78)
020A:9A2B  8B 97 6CC6				mov	dx,word ptr ds:[6CC6h][bx]	; (020A:6CC6=0AE06h)
020A:9A2F  26: 89 54 0F				mov	es:[si+0Fh],dx
020A:9A33  B8 0004				mov	ax,4
020A:9A36  E8 113F				call	sub_159			; (AB78)
020A:9A39  58					pop	ax
020A:9A3A  83 C6 15				add	si,15h
020A:9A3D  26: 3B 04				cmp	ax,es:[si]
020A:9A40  74 C4				je	loc_1649		; Jump if equal
020A:9A42  83 C3 06				add	bx,6
020A:9A45  EB BF				jmp	short loc_1649		; (9A06)
020A:9A47			loc_1650:
020A:9A47  E9 00A3				jmp	loc_1658		; (9AED)
020A:9A4A			loc_1651:
020A:9A4A  32 FF				xor	bh,bh			; Zero register
020A:9A4C  8A 1E 6D8B				mov	bl,data_550		; (020A:6D8B=74h)
020A:9A50  B8 FFFF				mov	ax,0FFFFh
020A:9A53  F7 E3				mul	bx			; dx:ax = reg * ax
020A:9A55  3B 16 6CBD				cmp	dx,data_545		; (020A:6CBD=8000h)
020A:9A59  77 0E				ja	loc_1653		; Jump if above
020A:9A5B  72 06				jc	loc_1652		; Jump if carry Set
020A:9A5D  3B 06 6CBB				cmp	ax,data_544		; (020A:6CBB=80B9h)
020A:9A61  77 06				ja	loc_1653		; Jump if above
020A:9A63			loc_1652:
020A:9A63  B8 FFFF				mov	ax,0FFFFh
020A:9A66  EB 10				jmp	short loc_1654		; (9A78)
020A:9A68  90					nop
020A:9A69			loc_1653:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 322

020A:9A69  32 FF				xor	bh,bh			; Zero register
020A:9A6B  8A 1E 6D8B				mov	bl,data_550		; (020A:6D8B=74h)
020A:9A6F  8B 16 6CBD				mov	dx,data_545		; (020A:6CBD=8000h)
020A:9A73  A1 6CBB				mov	ax,data_544		; (020A:6CBB=80B9h)
020A:9A76  F7 F3				div	bx			; ax,dx rem=dx:ax/reg
020A:9A78			loc_1654:
020A:9A78  8B E8				mov	bp,ax
020A:9A7A  33 C9				xor	cx,cx			; Zero register
020A:9A7C  33 D2				xor	dx,dx			; Zero register
020A:9A7E  FE C6				inc	dh
020A:9A80  33 F6				xor	si,si			; Zero register
020A:9A82  BF 0004				mov	di,4
020A:9A85			loc_1655:
020A:9A85  26: 8B 1C				mov	bx,es:[si]
020A:9A88  83 FB FF				cmp	bx,0FFFFh
020A:9A8B  74 60				je	loc_1658		; Jump if equal
020A:9A8D  26: 8B 44 04				mov	ax,es:[si+4]
020A:9A91  26: 2B 44 02				sub	ax,es:[si+2]
020A:9A95  03 C8				add	cx,ax
020A:9A97  9C					pushf				; Push flags
020A:9A98  8B 85 6CC2				mov	ax,word ptr ds:[6CC2h][di]	; (020A:6CC2=75FFh)
020A:9A9C  26: 89 44 11				mov	es:[si+11h],ax
020A:9AA0  50					push	ax
020A:9AA1  52					push	dx
020A:9AA2  8B D0				mov	dx,ax
020A:9AA4  B8 0002				mov	ax,2
020A:9AA7  E8 10CE				call	sub_159			; (AB78)
020A:9AAA  5A					pop	dx
020A:9AAB  58					pop	ax
020A:9AAC  8B 85 6CC4				mov	ax,word ptr ds:[6CC4h][di]	; (020A:6CC4=0FE06h)
020A:9AB0  26: 89 44 13				mov	es:[si+13h],ax
020A:9AB4  50					push	ax
020A:9AB5  52					push	dx
020A:9AB6  8B D0				mov	dx,ax
020A:9AB8  B8 0001				mov	ax,1
020A:9ABB  E8 10BA				call	sub_159			; (AB78)
020A:9ABE  5A					pop	dx
020A:9ABF  58					pop	ax
020A:9AC0  8B 85 6CC6				mov	ax,word ptr ds:[6CC6h][di]	; (020A:6CC6=0AE06h)
020A:9AC4  26			data_570	db	26h
020A:9AC5  4489			data_571	dw	4489h
020A:9AC7  500F					dw	500Fh
020A:9AC9  52					push	dx
020A:9ACA  8B D0				mov	dx,ax
020A:9ACC  B8 0004				mov	ax,4
020A:9ACF  E8 10A6				call	sub_159			; (AB78)
020A:9AD2  5A					pop	dx
020A:9AD3  58					pop	ax
020A:9AD4  83 C6 15				add	si,15h
020A:9AD7  9D					popf				; Pop flags
020A:9AD8  72 04				jc	loc_1656		; Jump if carry Set
020A:9ADA  3B CD				cmp	cx,bp
020A:9ADC  72 0D				jb	loc_1657		; Jump if below
020A:9ADE			loc_1656:
020A:9ADE  33 C9				xor	cx,cx			; Zero register
020A:9AE0  3A 36 6D8B				cmp	dh,data_550		; (020A:6D8B=74h)
020A:9AE4  73 05				jae	loc_1657		; Jump if above or =
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 323

020A:9AE6  83 C7 06				add	di,6
020A:9AE9  FE C6				inc	dh
020A:9AEB			loc_1657:
020A:9AEB  EB 98				jmp	short loc_1655		; (9A85)
020A:9AED			loc_1658:
020A:9AED  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9AF2  5A					pop	dx
020A:9AF3  8E DA				mov	ds,dx
020A:9AF5  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:9AFA  5A					pop	dx
020A:9AFB  75 0A				jnz	loc_1659		; Jump if not zero
020A:9AFD  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:9B02  74 03				je	loc_1659		; Jump if equal
020A:9B04  E8 002D				call	sub_151			; (9B34)
020A:9B07			loc_1659:
020A:9B07  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:9B0C  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9B11  5A					pop	dx
020A:9B12  8E C2				mov	es,dx
020A:9B14  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:9B19  5A					pop	dx
020A:9B1A  75 0A				jnz	loc_1660		; Jump if not zero
020A:9B1C  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:9B21  74 03				je	loc_1660		; Jump if equal
020A:9B23  E8 000E				call	sub_151			; (9B34)
020A:9B26			loc_1660:
020A:9B26  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:9B2B  5D					pop	bp
020A:9B2C  5F					pop	di
020A:9B2D  5E					pop	si
020A:9B2E  5A					pop	dx
020A:9B2F  59					pop	cx
020A:9B30  5B					pop	bx
020A:9B31  58					pop	ax
020A:9B32			loc_1661:
020A:9B32  C3					retn
020A:9B33  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_151		proc	near
020A:9B34  2E: 39 16 4863			cmp	cs:data_507,dx		; (020A:4863=0B9E8h)
020A:9B39  74 19				je	loc_1662		; Jump if equal
020A:9B3B  2E: 89 16 4863			mov	cs:data_507,dx		; (020A:4863=0B9E8h)
020A:9B40  50					push	ax
020A:9B41  B4 48				mov	ah,48h			; 'H'
020A:9B43  CD 67				int	67h			; EMS Memory        ah=func 48h
										;  restore map context,dx=handle
020A:9B45  80 FC 00				cmp	ah,0
020A:9B48  75 0B				jne	loc_1663		; Jump if not equal
020A:9B4A  B4 47				mov	ah,47h			; 'G'
020A:9B4C  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020A:9B4E  80 FC 00				cmp	ah,0
020A:9B51  75 02				jne	loc_1663		; Jump if not equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 324

020A:9B53  58					pop	ax
020A:9B54			loc_1662:
020A:9B54  C3					retn
020A:9B55			loc_1663:
020A:9B55  E8 FCF1				call	sub_140			; (9849)
020A:9B58  BD 24A6				mov	bp,24A6h
020A:9B5B  32 C0				xor	al,al			; Zero register
020A:9B5D  86 C4				xchg	al,ah
020A:9B5F  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:9B5F  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:9B64  E9 9E85		;*		jmp	loc_403			;*(39EC)
				sub_151		endp
  
020A:9B64  E9 85 9E				db	0E9h, 85h, 9Eh
020A:9B67  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_152		proc	near
020A:9B68  2E			data_574	db	2Eh
020A:9B69  80 3E 4860 00			cmp	byte ptr ds:[4860h],0	; (9B68:4860=0)
020A:9B6E  75 0A				jne	loc_1664		; Jump if not equal
020A:9B70  50					push	ax
020A:9B71  B8 3F64				mov	ax,3F64h
020A:9B74  8E C0				mov	es,ax
020A:9B76  58					pop	ax
020A:9B77  EB 60				jmp	short loc_1673		; (9BD9)
020A:9B79  90					nop
020A:9B7A			loc_1664:
020A:9B7A  E8 FCE1				call	sub_145			; (985E)
020A:9B7D  26: 3B 1E 2D82			cmp	bx,word ptr es:[2D82h]	; (3F64:2D82=3C78h)
020A:9B82  75 1C				jne	loc_1666		; Jump if not equal
020A:9B84  2E: 83 3E 4873 FF			cmp	cs:data_515,0FFFFh	; (020A:4873=0CD3Bh)
020A:9B8A  74 14				je	loc_1666		; Jump if equal
020A:9B8C  52					push	dx
020A:9B8D  2E: 8B 16 4873			mov	dx,cs:data_515		; (020A:4873=0CD3Bh)
020A:9B92  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:9B97  74 03				je	loc_1665		; Jump if equal
020A:9B99  E8 FF98				call	sub_151			; (9B34)
020A:9B9C			loc_1665:
020A:9B9C  5A					pop	dx
020A:9B9D  EB 35				jmp	short loc_1672		; (9BD4)
020A:9B9F  90					nop
020A:9BA0			loc_1666:
020A:9BA0  E8 FCB2				call	sub_142			; (9855)
020A:9BA3  56					push	si
020A:9BA4  33 F6				xor	si,si			; Zero register
020A:9BA6			loc_1667:
020A:9BA6  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:9BAA  75 07				jne	loc_1668		; Jump if not equal
020A:9BAC  26: 83 7C 02 FF			cmp	word ptr es:[si+2],0FFFFh
020A:9BB1  74 0C				je	loc_1669		; Jump if equal
020A:9BB3			loc_1668:
020A:9BB3  26: 39 1C				cmp	es:[si],bx
020A:9BB6  77 07				ja	loc_1669		; Jump if above
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 325

020A:9BB8  74 10				jz	loc_1671		; Jump if zero
020A:9BBA  83 C6 15				add	si,15h
020A:9BBD  EB E7				jmp	short loc_1667		; (9BA6)
020A:9BBF			loc_1669:
020A:9BBF  83 FE 15				cmp	si,15h
020A:9BC2  73 03				jae	loc_1670		; Jump if above or =
020A:9BC4  BE 0015				mov	si,15h
020A:9BC7			loc_1670:
020A:9BC7  83 EE 15				sub	si,15h
020A:9BCA			loc_1671:
020A:9BCA  52					push	dx
020A:9BCB  26: 8B 54 11				mov	dx,es:[si+11h]
020A:9BCF  E8 FF62				call	sub_151			; (9B34)
020A:9BD2  5A					pop	dx
020A:9BD3  5E					pop	si
020A:9BD4			loc_1672:
020A:9BD4  2E: 8E 06 4861			mov	es,cs:data_506		; (020A:4861=0D233h)
020A:9BD9			loc_1673:
020A:9BD9  C3					retn
				sub_152		endp
  
020A:9BDA  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_153		proc	near
020A:9BDC  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9BE2  75 0A				jne	loc_1674		; Jump if not equal
020A:9BE4  50					push	ax
020A:9BE5  B8 4F64				mov	ax,4F64h
020A:9BE8  8E C0				mov	es,ax
020A:9BEA  58					pop	ax
020A:9BEB  EB 60				jmp	short loc_1683		; (9C4D)
020A:9BED  90					nop
020A:9BEE			loc_1674:
020A:9BEE  E8 FC6D				call	sub_145			; (985E)
020A:9BF1  26: 3B 1E 2D82			cmp	bx,word ptr es:[2D82h]	; (4F64:2D82=0FF41h)
020A:9BF6  75 1C				jne	loc_1676		; Jump if not equal
020A:9BF8  2E: 83 3E 4875 FF			cmp	cs:data_516,0FFFFh	; (020A:4875=7321h)
020A:9BFE  74 14				je	loc_1676		; Jump if equal
020A:9C00  52					push	dx
020A:9C01  2E: 8B 16 4875			mov	dx,cs:data_516		; (020A:4875=7321h)
020A:9C06  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:9C0B  74 03				je	loc_1675		; Jump if equal
020A:9C0D  E8 FF24				call	sub_151			; (9B34)
020A:9C10			loc_1675:
020A:9C10  5A					pop	dx
020A:9C11  EB 35				jmp	short loc_1682		; (9C48)
020A:9C13  90					nop
020A:9C14			loc_1676:
020A:9C14  E8 FC3E				call	sub_142			; (9855)
020A:9C17  56					push	si
020A:9C18  33 F6				xor	si,si			; Zero register
020A:9C1A			loc_1677:
020A:9C1A  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 326

020A:9C1E  75 07				jne	loc_1678		; Jump if not equal
020A:9C20  26: 83 7C 02 FF			cmp	word ptr es:[si+2],0FFFFh
020A:9C25  74 0C				je	loc_1679		; Jump if equal
020A:9C27			loc_1678:
020A:9C27  26: 39 1C				cmp	es:[si],bx
020A:9C2A  77 07				ja	loc_1679		; Jump if above
020A:9C2C  74 10				jz	loc_1681		; Jump if zero
020A:9C2E  83 C6 15				add	si,15h
020A:9C31  EB E7				jmp	short loc_1677		; (9C1A)
020A:9C33			loc_1679:
020A:9C33  83 FE 15				cmp	si,15h
020A:9C36  73 03				jae	loc_1680		; Jump if above or =
020A:9C38  BE 0015				mov	si,15h
020A:9C3B			loc_1680:
020A:9C3B  83 EE 15				sub	si,15h
020A:9C3E			loc_1681:
020A:9C3E  52					push	dx
020A:9C3F  26: 8B 54 13				mov	dx,es:[si+13h]
020A:9C43  E8 FEEE				call	sub_151			; (9B34)
020A:9C46  5A					pop	dx
020A:9C47  5E					pop	si
020A:9C48			loc_1682:
020A:9C48  2E: 8E 06 4861			mov	es,cs:data_506		; (020A:4861=0D233h)
020A:9C4D			loc_1683:
020A:9C4D  C3					retn
				sub_153		endp
  
020A:9C4E  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_154		proc	near
020A:9C50  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9C56  75 0A				jne	loc_1684		; Jump if not equal
020A:9C58  50					push	ax
020A:9C59  B8 2F64				mov	ax,2F64h
020A:9C5C  8E C0				mov	es,ax
020A:9C5E  58					pop	ax
020A:9C5F  EB 60				jmp	short loc_1693		; (9CC1)
020A:9C61  90					nop
020A:9C62			loc_1684:
020A:9C62  E8 FBF9				call	sub_145			; (985E)
020A:9C65  26: 3B 1E 2D82			cmp	bx,word ptr es:[2D82h]	; (2F64:2D82=0FFFFh)
020A:9C6A  75 1C				jne	loc_1686		; Jump if not equal
020A:9C6C  2E: 83 3E 4877 FF			cmp	cs:data_517,0FFFFh	; (020A:4877=0E8DCh)
020A:9C72  74 14				je	loc_1686		; Jump if equal
020A:9C74  52					push	dx
020A:9C75  2E: 8B 16 4877			mov	dx,cs:data_517		; (020A:4877=0E8DCh)
020A:9C7A  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:9C7F  74 03				je	loc_1685		; Jump if equal
020A:9C81  E8 FEB0				call	sub_151			; (9B34)
020A:9C84			loc_1685:
020A:9C84  5A					pop	dx
020A:9C85  EB 35				jmp	short loc_1692		; (9CBC)
020A:9C87  90					nop
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 327

020A:9C88			loc_1686:
020A:9C88  E8 FBCA				call	sub_142			; (9855)
020A:9C8B  56					push	si
020A:9C8C  33 F6				xor	si,si			; Zero register
020A:9C8E			loc_1687:
020A:9C8E  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:9C92  0775					dw	775h			; Data table (indexed access)
020A:9C94  26: 83 7C 02 FF			cmp	word ptr es:[si+2],0FFFFh
020A:9C99  74 0C				je	loc_1689		; Jump if equal
020A:9C9B			loc_1688:
020A:9C9B  26: 39 1C				cmp	es:[si],bx
020A:9C9E  77 07				ja	loc_1689		; Jump if above
020A:9CA0  74 10				jz	loc_1691		; Jump if zero
020A:9CA2  83 C6 15				add	si,15h
020A:9CA5  EB E7				jmp	short loc_1687		; (9C8E)
020A:9CA7			loc_1689:
020A:9CA7  83 FE 15				cmp	si,15h
020A:9CAA  73 03				jae	loc_1690		; Jump if above or =
020A:9CAC  BE 0015				mov	si,15h
020A:9CAF			loc_1690:
020A:9CAF  83 EE 15				sub	si,15h
020A:9CB2			loc_1691:
020A:9CB2  52					push	dx
020A:9CB3  26: 8B 54 0F				mov	dx,es:[si+0Fh]
020A:9CB7  E8 FE7A				call	sub_151			; (9B34)
020A:9CBA  5A					pop	dx
020A:9CBB  5E					pop	si
020A:9CBC			loc_1692:
020A:9CBC  2E: 8E 06 4861			mov	es,cs:data_506		; (020A:4861=0D233h)
020A:9CC1			loc_1693:
020A:9CC1  C3					retn
				sub_154		endp
  
020A:9CC2  87 DB				xchg	bx,bx
020A:9CC4  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9CCA  75 0A				jne	loc_1694		; Jump if not equal
020A:9CCC  50					push	ax
020A:9CCD  B8 3F64				mov	ax,3F64h
020A:9CD0  8E D8				mov	ds,ax
020A:9CD2  58					pop	ax
020A:9CD3  EB			data_576	db	0EBh
020A:9CD4  5B					pop	bx
020A:9CD5  90					nop
020A:9CD6			loc_1694:
020A:9CD6  E8 FB70				call	sub_140			; (9849)
020A:9CD9  3B 1E 2D82				cmp	bx,word ptr ds:[2D82h]	; (3F64:2D82=3C78h)
020A:9CDD  75 1C				jne	loc_1696		; Jump if not equal
020A:9CDF  2E: 83 3E 4873 FF			cmp	cs:data_515,0FFFFh	; (020A:4873=0CD3Bh)
020A:9CE5  74 14				je	loc_1696		; Jump if equal
020A:9CE7  52					push	dx
020A:9CE8  2E: 8B 16 4873			mov	dx,cs:data_515		; (020A:4873=0CD3Bh)
020A:9CED  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:9CF2  74 03				je	loc_1695		; Jump if equal
020A:9CF4  E8 FE3D				call	sub_151			; (9B34)
020A:9CF7			loc_1695:
020A:9CF7  5A					pop	dx
020A:9CF8  EB 31				jmp	short loc_1702		; (9D2B)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 328

020A:9CFA  90					nop
020A:9CFB			loc_1696:
020A:9CFB  E8 FB42				call	sub_138			; (9840)
020A:9CFE  56					push	si
020A:9CFF  33 F6				xor	si,si			; Zero register
020A:9D01			loc_1697:
020A:9D01  83 3C FF				cmp	word ptr [si],0FFFFh
020A:9D04  75 06				jne	loc_1698		; Jump if not equal
020A:9D06  83 7C 02 FF				cmp	word ptr [si+2],0FFFFh
020A:9D0A  74 0B				je	loc_1699		; Jump if equal
020A:9D0C			loc_1698:
020A:9D0C  39 1C				cmp	[si],bx
020A:9D0E  77 07				ja	loc_1699		; Jump if above
020A:9D10  74 10				jz	loc_1701		; Jump if zero
020A:9D12  83 C6 15				add	si,15h
020A:9D15  EB EA				jmp	short loc_1697		; (9D01)
020A:9D17			loc_1699:
020A:9D17  83 FE 15				cmp	si,15h
020A:9D1A  73 03				jae	loc_1700		; Jump if above or =
020A:9D1C  BE 0015				mov	si,15h
020A:9D1F			loc_1700:
020A:9D1F  83 EE 15				sub	si,15h
020A:9D22			loc_1701:
020A:9D22  52					push	dx
020A:9D23  8B 54 11				mov	dx,[si+11h]
020A:9D26  E8 FE0B				call	sub_151			; (9B34)
020A:9D29  5A					pop	dx
020A:9D2A  5E					pop	si
020A:9D2B			loc_1702:
020A:9D2B  2E: 8E 06 4861			mov	es,cs:data_506		; (020A:4861=0D233h)
020A:9D30  C3					retn
020A:9D31  87 DB				xchg	bx,bx
020A:9D33  90					nop
020A:9D34  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9D3A  75 0A				jne	loc_1703		; Jump if not equal
020A:9D3C  50					push	ax
020A:9D3D  B8 4F64				mov	ax,4F64h
020A:9D40  8E D8				mov	ds,ax
020A:9D42  58					pop	ax
020A:9D43  EB 5B				jmp	short loc_1712		; (9DA0)
020A:9D45  90					nop
020A:9D46			loc_1703:
020A:9D46  E8 FB00				call	sub_140			; (9849)
020A:9D49  3B 1E 2D82				cmp	bx,word ptr ds:[2D82h]	; (4F64:2D82=0FF41h)
020A:9D4D  75 1C				jne	loc_1705		; Jump if not equal
020A:9D4F  2E: 83 3E 4875 FF			cmp	cs:data_516,0FFFFh	; (020A:4875=7321h)
020A:9D55  74 14				je	loc_1705		; Jump if equal
020A:9D57  52					push	dx
020A:9D58  2E: 8B 16 4875			mov	dx,cs:data_516		; (020A:4875=7321h)
020A:9D5D  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:9D62  74 03				je	loc_1704		; Jump if equal
020A:9D64  E8 FDCD				call	sub_151			; (9B34)
020A:9D67			loc_1704:
020A:9D67  5A					pop	dx
020A:9D68  EB 31				jmp	short loc_1711		; (9D9B)
020A:9D6A  90					nop
020A:9D6B			loc_1705:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 329

020A:9D6B  E8 FAD2				call	sub_138			; (9840)
020A:9D6E  56					push	si
020A:9D6F  33 F6				xor	si,si			; Zero register
020A:9D71			loc_1706:
020A:9D71  83 3C FF				cmp	word ptr [si],0FFFFh
020A:9D74  75 06				jne	loc_1707		; Jump if not equal
020A:9D76  83 7C 02 FF				cmp	word ptr [si+2],0FFFFh
020A:9D7A  74 0B				je	loc_1708		; Jump if equal
020A:9D7C			loc_1707:
020A:9D7C  39 1C				cmp	[si],bx
020A:9D7E  77 07				ja	loc_1708		; Jump if above
020A:9D80  74 10				jz	loc_1710		; Jump if zero
020A:9D82  83 C6 15				add	si,15h
020A:9D85  EB EA				jmp	short loc_1706		; (9D71)
020A:9D87			loc_1708:
020A:9D87  83 FE 15				cmp	si,15h
020A:9D8A  73 03				jae	loc_1709		; Jump if above or =
020A:9D8C  BE 0015				mov	si,15h
020A:9D8F			loc_1709:
020A:9D8F  83 EE 15				sub	si,15h
020A:9D92			loc_1710:
020A:9D92  52					push	dx
020A:9D93  8B 54 13				mov	dx,[si+13h]
020A:9D96  E8 FD9B				call	sub_151			; (9B34)
020A:9D99  5A					pop	dx
020A:9D9A  5E					pop	si
020A:9D9B			loc_1711:
020A:9D9B  2E: 8E 06 4861			mov	es,cs:data_506		; (020A:4861=0D233h)
020A:9DA0			loc_1712:
020A:9DA0  C3					retn
020A:9DA1  87 DB				xchg	bx,bx
020A:9DA3  90					nop
020A:9DA4  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9DAA  75 0A				jne	loc_1713		; Jump if not equal
020A:9DAC  50					push	ax
020A:9DAD  B8 2F64				mov	ax,2F64h
020A:9DB0  8E D8				mov	ds,ax
020A:9DB2  58					pop	ax
020A:9DB3  EB 5B				jmp	short loc_1722		; (9E10)
020A:9DB5  90					nop
020A:9DB6			loc_1713:
020A:9DB6  E8 FA90				call	sub_140			; (9849)
020A:9DB9  3B 1E 2D82				cmp	bx,word ptr ds:[2D82h]	; (2F64:2D82=0FFFFh)
020A:9DBD  75 1C				jne	loc_1715		; Jump if not equal
020A:9DBF  2E: 83 3E 4877 FF			cmp	cs:data_517,0FFFFh	; (020A:4877=0E8DCh)
020A:9DC5  74 14				je	loc_1715		; Jump if equal
020A:9DC7  52					push	dx
020A:9DC8  2E: 8B 16 4877			mov	dx,cs:data_517		; (020A:4877=0E8DCh)
020A:9DCD  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:9DD2  74 03				je	loc_1714		; Jump if equal
020A:9DD4  E8 FD5D				call	sub_151			; (9B34)
020A:9DD7			loc_1714:
020A:9DD7  5A					pop	dx
020A:9DD8  EB 31				jmp	short loc_1721		; (9E0B)
020A:9DDA  90					nop
020A:9DDB			loc_1715:
020A:9DDB  E8 FA62				call	sub_138			; (9840)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 330

020A:9DDE  56					push	si
020A:9DDF  33 F6				xor	si,si			; Zero register
020A:9DE1			loc_1716:
020A:9DE1  83 3C FF				cmp	word ptr [si],0FFFFh
020A:9DE4  75 06				jne	loc_1717		; Jump if not equal
020A:9DE6  83 7C 02 FF				cmp	word ptr [si+2],0FFFFh
020A:9DEA  74 0B				je	loc_1718		; Jump if equal
020A:9DEC			loc_1717:
020A:9DEC  39 1C				cmp	[si],bx
020A:9DEE  77 07				ja	loc_1718		; Jump if above
020A:9DF0  74 10				jz	loc_1720		; Jump if zero
020A:9DF2  83 C6 15				add	si,15h
020A:9DF5  EB EA				jmp	short loc_1716		; (9DE1)
020A:9DF7			loc_1718:
020A:9DF7  83 FE 15				cmp	si,15h
020A:9DFA  73 03				jae	loc_1719		; Jump if above or =
020A:9DFC  BE 0015				mov	si,15h
020A:9DFF			loc_1719:
020A:9DFF  83 EE 15				sub	si,15h
020A:9E02			loc_1720:
020A:9E02  52					push	dx
020A:9E03  8B 54 0F				mov	dx,[si+0Fh]
020A:9E06  E8 FD2B				call	sub_151			; (9B34)
020A:9E09  5A					pop	dx
020A:9E0A  5E					pop	si
020A:9E0B			loc_1721:
020A:9E0B  2E: 8E 06 4861			mov	es,cs:data_506		; (020A:4861=0D233h)
020A:9E10			loc_1722:
020A:9E10  C3					retn
020A:9E11  000F[00]				db	15 dup (0)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_155		proc	near
020A:9E20  51					push	cx
020A:9E21  52					push	dx
020A:9E22  57					push	di
020A:9E23  55					push	bp
020A:9E24  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:9E29  06					push	es
020A:9E2A  80 3E 4202 01			cmp	byte ptr ds:[4202h],1	; (9B68:4202=0)
020A:9E2F  74 12				je	loc_1724		; Jump if equal
020A:9E31  F7 06 42CC 0020			test	word ptr ds:[42CCh],20h	; (9B68:42CC=0)
020A:9E37  75 07				jnz	loc_1723		; Jump if not zero
020A:9E39  80 3E 4202 02			cmp	byte ptr ds:[4202h],2	; (9B68:4202=0)
020A:9E3E  75 03				jne	loc_1724		; Jump if not equal
020A:9E40			loc_1723:
020A:9E40  E9 0551				jmp	loc_1800		; (A394)
020A:9E43			loc_1724:
020A:9E43  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (9B68:37A4=0)
020A:9E46  A3 41FE				mov	word ptr ds:[41FEh],ax	; (9B68:41FE=0)
020A:9E49  A0 152A				mov	al,byte ptr ds:[152Ah]	; (9B68:152A=20h)
020A:9E4C  A2 41FD				mov	byte ptr ds:[41FDh],al	; (9B68:41FD=0)
020A:9E4F  C6 06 152A 00			mov	byte ptr ds:[152Ah],0	; (9B68:152A=20h)
020A:9E54  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (9B68:2A75=0A0h) 'O'
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 331

020A:9E59  74 5E				je	loc_1727		; Jump if equal
020A:9E5B  53					push	bx
020A:9E5C  52					push	dx
020A:9E5D  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:9E62  06					push	es
020A:9E63  E8 F9F8				call	sub_145			; (985E)
020A:9E66  C6 06 3C7C 00			mov	byte ptr ds:[3C7Ch],0	; (9B68:3C7C=0)
020A:9E6B  A1 2D84				mov	ax,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:9E6E  8B 1E 2D82				mov	bx,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:9E72  BA 0020				mov	dx,20h
020A:9E75  E8 EDB0				call	sub_126			; (8C28)
020A:9E78  83 F9 1D				cmp	cx,1Dh
020A:9E7B  73 1B				jae	loc_1725		; Jump if above or =
020A:9E7D  41					inc	cx
020A:9E7E  80 E1 1F				and	cl,1Fh
020A:9E81  88 0E 3C7C				mov	byte ptr ds:[3C7Ch],cl	; (D233:3C7C=81h)
020A:9E85  56					push	si
020A:9E86  89 1D				mov	[di],bx
020A:9E88  89 45 02				mov	[di+2],ax
020A:9E8B  B9 0028				mov	cx,28h
020A:9E8E  83 C7 04				add	di,4
020A:9E91  BE 2ED4				mov	si,2ED4h
020A:9E94  FC					cld				; Clear direction
020A:9E95  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:9E97  5E					pop	si
020A:9E98			loc_1725:
020A:9E98  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9E9D  5A					pop	dx
020A:9E9E  8E C2				mov	es,dx
020A:9EA0  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:9EA5  5A					pop	dx
020A:9EA6  75 0A				jnz	loc_1726		; Jump if not zero
020A:9EA8  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:9EAD  74 03				je	loc_1726		; Jump if equal
020A:9EAF  E8 FC82				call	sub_151			; (9B34)
020A:9EB2			loc_1726:
020A:9EB2  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:9EB7  5A					pop	dx
020A:9EB8  5B					pop	bx
020A:9EB9			loc_1727:
020A:9EB9  C6 06 3C78 00			mov	byte ptr ds:[3C78h],0	; (D233:3C78=0)
020A:9EBE  C6 06 3C79 10			mov	byte ptr ds:[3C79h],10h	; (D233:3C79=68h)
020A:9EC3  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (D233:2A75=7) 'O'
020A:9EC8  74 05				je	loc_1728		; Jump if equal
020A:9ECA  C6 06 3C79 12			mov	byte ptr ds:[3C79h],12h	; (D233:3C79=68h)
020A:9ECF			loc_1728:
020A:9ECF  F6 C7 10				test	bh,10h
020A:9ED2  74 05				jz	loc_1729		; Jump if zero
020A:9ED4  80 0E 3C79 01			or	byte ptr ds:[3C79h],1	; (D233:3C79=68h)
020A:9ED9			loc_1729:
020A:9ED9  33 FF				xor	di,di			; Zero register
020A:9EDB  26: 8A 44 01				mov	al,es:[si+1]
020A:9EDF  24 C7				and	al,0C7h
020A:9EE1  3C 06				cmp	al,6
020A:9EE3  75 03				jne	loc_1730		; Jump if not equal
020A:9EE5  E9 0098				jmp	loc_1743		; (9F80)
020A:9EE8			loc_1730:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 332

020A:9EE8  24 07				and	al,7
020A:9EEA  A8 04				test	al,4
020A:9EEC  75 30				jnz	loc_1734		; Jump if not zero
020A:9EEE  A8 02				test	al,2
020A:9EF0  75 16				jnz	loc_1732		; Jump if not zero
020A:9EF2  F7 06 42CC 0010			test	word ptr ds:[42CCh],10h	; (D233:42CC=1C74h)
020A:9EF8  75 08				jnz	loc_1731		; Jump if not zero
020A:9EFA  81 3E 2ED8 0180			cmp	word ptr ds:[2ED8h],180h	; (D233:2ED8=68Ch)
020A:9F00  72 20				jb	loc_1735		; Jump if below
020A:9F02			loc_1731:
020A:9F02  8B 3E 2ED8				mov	di,word ptr ds:[2ED8h]	; (D233:2ED8=68Ch)
020A:9F06  EB 1A				jmp	short loc_1735		; (9F22)
020A:9F08			loc_1732:
020A:9F08  F7 06 42CC 0010			test	word ptr ds:[42CCh],10h	; (D233:42CC=1C74h)
020A:9F0E  75 08				jnz	loc_1733		; Jump if not zero
020A:9F10  81 3E 2EEC 0180			cmp	word ptr ds:[2EECh],180h	; (D233:2EEC=14E8h)
020A:9F16  72 0A				jb	loc_1735		; Jump if below
020A:9F18			loc_1733:
020A:9F18  8B 3E 2EEC				mov	di,word ptr ds:[2EECh]	; (D233:2EEC=14E8h)
020A:9F1C  EB 04				jmp	short loc_1735		; (9F22)
020A:9F1E			loc_1734:
020A:9F1E  3C 06				cmp	al,6
020A:9F20  73 30				jae	loc_1739		; Jump if above or =
020A:9F22			loc_1735:
020A:9F22  A8 01				test	al,1
020A:9F24  74 16				jz	loc_1737		; Jump if zero
020A:9F26  F7 06 42CC 0010			test	word ptr ds:[42CCh],10h	; (D233:42CC=1C74h)
020A:9F2C  75 08				jnz	loc_1736		; Jump if not zero
020A:9F2E  81 3E 2EE8 0180			cmp	word ptr ds:[2EE8h],180h	; (D233:2EE8=21CDh)
020A:9F34  72 4A				jb	loc_1743		; Jump if below
020A:9F36			loc_1736:
020A:9F36  03 3E 2EE8				add	di,word ptr ds:[2EE8h]	; (D233:2EE8=21CDh)
020A:9F3A  EB 44				jmp	short loc_1743		; (9F80)
020A:9F3C			loc_1737:
020A:9F3C  F7 06 42CC 0010			test	word ptr ds:[42CCh],10h	; (D233:42CC=1C74h)
020A:9F42  75 08				jnz	loc_1738		; Jump if not zero
020A:9F44  81 3E 2EE4 0180			cmp	word ptr ds:[2EE4h],180h	; (D233:2EE4=0B809h)
020A:9F4A  72 34				jb	loc_1743		; Jump if below
020A:9F4C			loc_1738:
020A:9F4C  03 3E 2EE4				add	di,word ptr ds:[2EE4h]	; (D233:2EE4=0B809h)
020A:9F50  EB 2E				jmp	short loc_1743		; (9F80)
020A:9F52			loc_1739:
020A:9F52  A8 01				test	al,1
020A:9F54  74 16				jz	loc_1741		; Jump if zero
020A:9F56  F7 06 42CC 0010			test	word ptr ds:[42CCh],10h	; (D233:42CC=1C74h)
020A:9F5C  75 08				jnz	loc_1740		; Jump if not zero
020A:9F5E  81 3E 2ED8 0180			cmp	word ptr ds:[2ED8h],180h	; (D233:2ED8=68Ch)
020A:9F64  72 1A				jb	loc_1743		; Jump if below
020A:9F66			loc_1740:
020A:9F66  03 3E 2ED8				add	di,word ptr ds:[2ED8h]	; (D233:2ED8=68Ch)
020A:9F6A  EB 14				jmp	short loc_1743		; (9F80)
020A:9F6C			loc_1741:
020A:9F6C  F7 06 42CC 0010			test	word ptr ds:[42CCh],10h	; (D233:42CC=1C74h)
020A:9F72  75 08				jnz	loc_1742		; Jump if not zero
020A:9F74  81 3E 2EEC 0180			cmp	word ptr ds:[2EECh],180h	; (D233:2EEC=14E8h)
020A:9F7A  72 04				jb	loc_1743		; Jump if below
020A:9F7C			loc_1742:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 333

020A:9F7C  03 3E 2EEC				add	di,word ptr ds:[2EECh]	; (D233:2EEC=14E8h)
020A:9F80			loc_1743:
020A:9F80  80 FA 3D				cmp	dl,3Dh			; '='
020A:9F83  74 02				je	loc_1744		; Jump if equal
020A:9F85  EB 4C				jmp	short loc_1751		; (9FD3)
020A:9F87			loc_1744:
020A:9F87  F6 C7 10				test	bh,10h
020A:9F8A  74 02				jz	loc_1745		; Jump if zero
020A:9F8C  EB 59				jmp	short loc_1753		; (9FE7)
020A:9F8E			loc_1745:
020A:9F8E  83 FF 40				cmp	di,40h
020A:9F91  73 02				jae	loc_1746		; Jump if above or =
020A:9F93  EB 57				jmp	short loc_1754		; (9FEC)
020A:9F95			loc_1746:
020A:9F95  83 FF FC				cmp	di,0FFFCh
020A:9F98  76 02				jbe	loc_1747		; Jump if below or =
020A:9F9A  EB 50				jmp	short loc_1754		; (9FEC)
020A:9F9C			loc_1747:
020A:9F9C  06					push	es
020A:9F9D  53					push	bx
020A:9F9E  51					push	cx
020A:9F9F  8E 06 3796				mov	es,word ptr ds:[3796h]	; (D233:3796=9E02h)
020A:9FA3  B9 0019				mov	cx,19h
020A:9FA6  26: 8B 05				mov	ax,es:[di]
  
020A:9FA9			locloop_1748:
020A:9FA9  8B D8				mov	bx,ax
020A:9FAB  26: 2B 5D FE				sub	bx,es:[di-2]
020A:9FAF  73 02				jnc	loc_1749		; Jump if carry=0
020A:9FB1  F7 D3				not	bx
020A:9FB3			loc_1749:
020A:9FB3  81 FB 0200				cmp	bx,200h
020A:9FB7  73 15				jae	loc_1750		; Jump if above or =
020A:9FB9  8B DF				mov	bx,di
020A:9FBB  4B					dec	bx
020A:9FBC  3B 1E 2D84				cmp	bx,word ptr ds:[2D84h]	; (D233:2D84=8E4h)
020A:9FC0  74 0C				je	loc_1750		; Jump if equal
020A:9FC2  4B					dec	bx
020A:9FC3  3B 1E 2D84				cmp	bx,word ptr ds:[2D84h]	; (D233:2D84=8E4h)
020A:9FC7  74 05				je	loc_1750		; Jump if equal
020A:9FC9  83 EF 02				sub	di,2
020A:9FCC  E2 DB				loop	locloop_1748		; Loop if cx > 0
  
020A:9FCE			loc_1750:
020A:9FCE  07					pop	es
020A:9FCF  5B					pop	bx
020A:9FD0  07					pop	es
020A:9FD1  EB 14				jmp	short loc_1753		; (9FE7)
020A:9FD3			loc_1751:
020A:9FD3  81 FF FE00				cmp	di,0FE00h
020A:9FD7  72 0A				jb	loc_1752		; Jump if below
020A:9FD9  81 3E 41FE 0080			cmp	word ptr ds:[41FEh],80h	; (D233:41FE=80C4h)
020A:9FDF  72 02				jb	loc_1752		; Jump if below
020A:9FE1  33 FF				xor	di,di			; Zero register
020A:9FE3			loc_1752:
020A:9FE3  03 3E 41FE				add	di,word ptr ds:[41FEh]	; (D233:41FE=80C4h)
020A:9FE7			loc_1753:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 334

020A:9FE7  83 FF FC				cmp	di,0FFFCh
020A:9FEA  76 03				jbe	loc_1755		; Jump if below or =
020A:9FEC			loc_1754:
020A:9FEC  E9 0322				jmp	loc_1792		; (A311)
020A:9FEF			loc_1755:
020A:9FEF  A1 3796				mov	ax,word ptr ds:[3796h]	; (D233:3796=9E02h)
020A:9FF2  3D 0050				cmp	ax,50h
020A:9FF5  77 03				ja	loc_1756		; Jump if above
020A:9FF7  E9 0317				jmp	loc_1792		; (A311)
020A:9FFA			loc_1756:
020A:9FFA  A3 3C71				mov	word ptr ds:[3C71h],ax	; (D233:3C71=0BEFFh)
020A:9FFD  A0 2F04				mov	al,byte ptr ds:[2F04h]	; (D233:2F04=68h)
020A:A000  A2 3C73				mov	byte ptr ds:[3C73h],al	; (D233:3C73=56h)
020A:A003  C6 06 2F04 90			mov	byte ptr ds:[2F04h],90h	; (D233:2F04=68h)
020A:A008  A1 2EF4				mov	ax,word ptr ds:[2EF4h]	; (D233:2EF4=0E7E9h)
020A:A00B  A3 3C74				mov	word ptr ds:[3C74h],ax	; (D233:3C74=0FF2Eh)
020A:A00E  A1 2EF2				mov	ax,word ptr ds:[2EF2h]	; (D233:2EF2=108Ch)
020A:A011  A3 3C76				mov	word ptr ds:[3C76h],ax	; (D233:3C76=236h)
020A:A014  80 3E 4202 01			cmp	byte ptr ds:[4202h],1	; (D233:4202=97h)
020A:A019  74 20				je	loc_1758		; Jump if equal
020A:A01B  F6 C7 10				test	bh,10h
020A:A01E  75 1B				jnz	loc_1758		; Jump if not zero
020A:A020  A1 2D82				mov	ax,word ptr ds:[2D82h]	; (D233:2D82=0E865h)
020A:A023  3B 06 3C71				cmp	ax,word ptr ds:[3C71h]	; (D233:3C71=0BEFFh)
020A:A027  75 12				jne	loc_1758		; Jump if not equal
020A:A029  8B C7				mov	ax,di
020A:A02B  2B 06 2D84				sub	ax,word ptr ds:[2D84h]	; (D233:2D84=8E4h)
020A:A02F  73 02				jnc	loc_1757		; Jump if carry=0
020A:A031  F7 D0				not	ax
020A:A033			loc_1757:
020A:A033  3D 1500				cmp	ax,1500h
020A:A036  72 03				jb	loc_1758		; Jump if below
020A:A038  E9 02D6				jmp	loc_1792		; (A311)
020A:A03B			loc_1758:
020A:A03B  53					push	bx
020A:A03C  8B			data_579	db	8Bh
020A:A03D  1E					push	ds
020A:A03E  71 3C				jno	loc_1761		; Jump if not overflw
020A:A040  E8 FB99				call	sub_153			; (9BDC)
020A:A043  8B C3				mov	ax,bx
020A:A045  5B					pop	bx
020A:A046  E8 0377				call	sub_156			; (A3C0)
020A:A049  8B D0				mov	dx,ax
020A:A04B  53					push	bx
020A:A04C  8B 1E 3C71				mov	bx,word ptr ds:[3C71h]	; (D233:3C71=0BEFFh)
020A:A050  E8 FB15				call	sub_152			; (9B68)
020A:A053  8B C3				mov	ax,bx
020A:A055  5B					pop	bx
020A:A056  E8 0367				call	sub_156			; (A3C0)
020A:A059  3B C2				cmp	ax,dx
020A:A05B  73 02				jae	loc_1759		; Jump if above or =
020A:A05D  8B D0				mov	dx,ax
020A:A05F			loc_1759:
020A:A05F  53					push	bx
020A:A060  8B 1E 3C71				mov	bx,word ptr ds:[3C71h]	; (D233:3C71=0BEFFh)
020A:A064  E8 FBE9				call	sub_154			; (9C50)
020A:A067  8B C3				mov	ax,bx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 335

020A:A069  5B					pop	bx
020A:A06A  E8 0353				call	sub_156			; (A3C0)
020A:A06D  3B C2				cmp	ax,dx
020A:A06F  73 02				jae	loc_1760		; Jump if above or =
020A:A071  8B D0				mov	dx,ax
020A:A073			loc_1760:
020A:A073  2B D7				sub	dx,di
020A:A075  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:A077  83 FA 00				cmp	dx,0
020A:A07A  75 03				jne	loc_1762		; Jump if not equal
020A:A07C			loc_1761:
020A:A07C  E9 0292				jmp	loc_1792		; (A311)
020A:A07F			loc_1762:
020A:A07F  F6 C7 10				test	bh,10h
020A:A082  74 07				jz	loc_1763		; Jump if zero
020A:A084  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:A086  83 FA 00				cmp	dx,0
020A:A089  74 F1				je	loc_1761		; Jump if equal
020A:A08B			loc_1763:
020A:A08B  80 3E 4203 00			cmp	byte ptr ds:[4203h],0	; (D233:4203=2Eh)
020A:A090  75 08				jne	loc_1764		; Jump if not equal
020A:A092  83 FA 32				cmp	dx,32h
020A:A095  76 03				jbe	loc_1764		; Jump if below or =
020A:A097  BA 0032				mov	dx,32h
020A:A09A			loc_1764:
020A:A09A  88 16 3C7A				mov	byte ptr ds:[3C7Ah],dl	; (D233:3C7A=0B7h)
020A:A09E			loc_1765:
020A:A09E  80 3E 4203 00			cmp	byte ptr ds:[4203h],0	; (D233:4203=2Eh)
020A:A0A3  74 03				je	loc_1766		; Jump if equal
020A:A0A5  E9 00AE				jmp	loc_1775		; (A156)
020A:A0A8			loc_1766:
020A:A0A8  F6 C7 10				test	bh,10h
020A:A0AB  74 03				jz	loc_1767		; Jump if zero
020A:A0AD  E9 0096				jmp	loc_1774		; (A146)
020A:A0B0			loc_1767:
020A:A0B0  A1 2D82				mov	ax,word ptr ds:[2D82h]	; (D233:2D82=0E865h)
020A:A0B3  3B 06 3C71				cmp	ax,word ptr ds:[3C71h]	; (D233:3C71=0BEFFh)
020A:A0B7  74 30				je	loc_1769		; Jump if equal
020A:A0B9  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:A0BE  06					push	es
020A:A0BF  8E C0				mov	es,ax
020A:A0C1  26: 83 7D 02 00			cmp	word ptr es:[di+2],0
020A:A0C6  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A0CB  5A					pop	dx
020A:A0CC  8E C2				mov	es,dx
020A:A0CE  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:A0D3  5A					pop	dx
020A:A0D4  75 0A				jnz	loc_1768		; Jump if not zero
020A:A0D6  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:A0DB  74 03				je	loc_1768		; Jump if equal
020A:A0DD  E8 FA54				call	sub_151			; (9B34)
020A:A0E0			loc_1768:
020A:A0E0  8B2E			data_581	dw	8B2Eh
020A:A0E2  16					push	ss
020A:A0E3  92					xchg	ax,dx
020A:A0E4  00 74 5C				add	[si+5Ch],dh
020A:A0E7  EB 6D				jmp	short loc_1775		; (A156)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 336

020A:A0E9			loc_1769:
020A:A0E9  3B 3E 2A42				cmp	di,word ptr ds:[2A42h]	; (D233:2A42=8EC0h)
020A:A0ED  72 54				jb	loc_1773		; Jump if below
020A:A0EF  3B 3E 2A44				cmp	di,word ptr ds:[2A44h]	; (D233:2A44=26C0h)
020A:A0F3  72 15				jb	loc_1770		; Jump if below
020A:A0F5  80 FA 39				cmp	dl,39h			; '9'
020A:A0F8  74 49				je	loc_1773		; Jump if equal
020A:A0FA  8B 3E 41FE				mov	di,word ptr ds:[41FEh]	; (D233:41FE=80C4h)
020A:A0FE  3B 3E 2A42				cmp	di,word ptr ds:[2A42h]	; (D233:2A42=8EC0h)
020A:A102  72 3F				jb	loc_1773		; Jump if below
020A:A104  3B 3E 2A44				cmp	di,word ptr ds:[2A44h]	; (D233:2A44=26C0h)
020A:A108  77 39				ja	loc_1773		; Jump if above
020A:A10A			loc_1770:
020A:A10A  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:A10F  06					push	es
020A:A110  8E C0				mov	es,ax
020A:A112  26: 8B 05				mov	ax,es:[di]
020A:A115  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A11A  5A					pop	dx
020A:A11B  8E C2				mov	es,dx
020A:A11D  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:A122  5A					pop	dx
020A:A123  75 0A				jnz	loc_1771		; Jump if not zero
020A:A125  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:A12A  74 03				je	loc_1771		; Jump if equal
020A:A12C  E8 FA05				call	sub_151			; (9B34)
020A:A12F			loc_1771:
020A:A12F  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A134  0B C0				or	ax,ax			; Zero ?
020A:A136  74 0B				jz	loc_1773		; Jump if zero
020A:A138  2B C7				sub	ax,di
020A:A13A  73 02				jnc	loc_1772		; Jump if carry=0
020A:A13C  F7 D0				not	ax
020A:A13E			loc_1772:
020A:A13E  3D 4000				cmp	ax,4000h
020A:A141  72 13				jb	loc_1775		; Jump if below
020A:A143			loc_1773:
020A:A143  E9 01BF				jmp	loc_1791		; (A305)
020A:A146			loc_1774:
020A:A146  A1 3C71				mov	ax,word ptr ds:[3C71h]	; (D233:3C71=0BEFFh)
020A:A149  3D FFFF				cmp	ax,0FFFFh
020A:A14C  74 F5				je	loc_1773		; Jump if equal
020A:A14E  25 FFF0				and	ax,0FFF0h
020A:A151  3D FBA0				cmp	ax,0FBA0h
020A:A154  74 ED				je	loc_1773		; Jump if equal
020A:A156			loc_1775:
020A:A156  8B C7				mov	ax,di
020A:A158  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:A15A  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:A15C  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:A15E  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:A160  03 06 3C71				add	ax,word ptr ds:[3C71h]	; (D233:3C71=0BEFFh)
020A:A164  72 DD				jc	loc_1773		; Jump if carry Set
020A:A166  8B C7				mov	ax,di
020A:A168  32 DB				xor	bl,bl			; Zero register
020A:A16A  80 3E 4202 01			cmp	byte ptr ds:[4202h],1	; (D233:4202=97h)
020A:A16F  74 04				je	loc_1776		; Jump if equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 337

020A:A171  26: 8A 5C 01				mov	bl,es:[si+1]
020A:A175			loc_1776:
020A:A175  BD 3BEB				mov	bp,3BEBh
020A:A178  FF 36 42CC				push	word ptr ds:[42CCh]	; (D233:42CC=1C74h)
020A:A17C  81 0E 42CC 0080			or	word ptr ds:[42CCh],80h	; (D233:42CC=1C74h)
020A:A182  E8 0B2B				call	sub_160			; (ACB0)
020A:A185  8F 06 42CC				pop	word ptr ds:[42CCh]	; (D233:42CC=1C74h)
020A:A189  57					push	di
020A:A18A  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:A18F  06					push	es
020A:A190  53					push	bx
020A:A191  8B 1E 3796				mov	bx,word ptr ds:[3796h]	; (D233:3796=9E02h)
020A:A195  E8 F9D0				call	sub_152			; (9B68)
020A:A198  5B					pop	bx
020A:A199  8B 3E 2A8F				mov	di,word ptr ds:[2A8Fh]	; (D233:2A8F=0B4F0h)
020A:A19D  26: 80 25 C0				and	byte ptr es:[di],0C0h
020A:A1A1  A0 3C79				mov	al,byte ptr ds:[3C79h]	; (D233:3C79=68h)
020A:A1A4  26: 08 05				or	es:[di],al
020A:A1A7  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A1AC  5A					pop	dx
020A:A1AD  8E C2				mov	es,dx
020A:A1AF  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:A1B4  5A					pop	dx
020A:A1B5  75 0A				jnz	loc_1777		; Jump if not zero
020A:A1B7  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:A1BC  74 03				je	loc_1777		; Jump if equal
020A:A1BE  E8 F973				call	sub_151			; (9B34)
020A:A1C1			loc_1777:
020A:A1C1  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A1C6  5F					pop	di
020A:A1C7  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:A1CC  06					push	es
020A:A1CD  53					push	bx
020A:A1CE  A1 3C71				mov	ax,word ptr ds:[3C71h]	; (D233:3C71=0BEFFh)
020A:A1D1  8E C0				mov	es,ax
020A:A1D3  A1 2D82				mov	ax,word ptr ds:[2D82h]	; (D233:2D82=0E865h)
020A:A1D6  32 C9				xor	cl,cl			; Zero register
020A:A1D8  F6 C7 10				test	bh,10h
020A:A1DB  74 06				jz	loc_1778		; Jump if zero
020A:A1DD  26: 8B 45 02				mov	ax,es:[di+2]
020A:A1E1  B1 01				mov	cl,1
020A:A1E3			loc_1778:
020A:A1E3  8B D8				mov	bx,ax
020A:A1E5  83 FB FF				cmp	bx,0FFFFh
020A:A1E8  74 17				je	loc_1779		; Jump if equal
020A:A1EA  26: 8B 05				mov	ax,es:[di]
020A:A1ED  3D FFFC				cmp	ax,0FFFCh
020A:A1F0  73 0F				jae	loc_1779		; Jump if above or =
020A:A1F2  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:A1F4  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:A1F6  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:A1F8  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:A1FA  03 C3				add	ax,bx
020A:A1FC  26: 8B 05				mov	ax,es:[di]
020A:A1FF  73 04				jnc	loc_1780		; Jump if carry=0
020A:A201			loc_1779:
020A:A201  5B					pop	bx
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 338

020A:A202  E9 00E1				jmp	loc_1789		; (A2E6)
020A:A205			loc_1780:
020A:A205  BD 3BEB				mov	bp,3BEBh
020A:A208  E8 1029				call	sub_161			; (B234)
020A:A20B  80 3E 42B9 01			cmp	byte ptr ds:[42B9h],1	; (D233:42B9=8Ah)
020A:A210  75 02				jne	loc_1781		; Jump if not equal
020A:A212  EB ED				jmp	short loc_1779		; (A201)
020A:A214			loc_1781:
020A:A214  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (D233:2A75=7) 'O'
020A:A219  74 3A				je	loc_1783		; Jump if equal
020A:A21B  57					push	di
020A:A21C  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:A221  06					push	es
020A:A222  E8 F9B7				call	sub_153			; (9BDC)
020A:A225  8B 3E 42BA				mov	di,word ptr ds:[42BAh]	; (D233:42BA=32DCh)
020A:A229  26: 80 65 04 E0			and	byte ptr es:[di+4],0E0h
020A:A22E  A0 3C7C				mov	al,byte ptr ds:[3C7Ch]	; (D233:3C7C=81h)
020A:A231  26: 08 45 04				or	es:[di+4],al
020A:A235  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A23A  5A					pop	dx
020A:A23B  8E C2				mov	es,dx
020A:A23D  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:A242  5A					pop	dx
020A:A243  75 0A				jnz	loc_1782		; Jump if not zero
020A:A245  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:A24A  74 03				je	loc_1782		; Jump if equal
020A:A24C  E8 F8E5				call	sub_151			; (9B34)
020A:A24F			loc_1782:
020A:A24F  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A254  5F					pop	di
020A:A255			loc_1783:
020A:A255  5B					pop	bx
020A:A256  FE 06 3C78				inc	byte ptr ds:[3C78h]	; (D233:3C78=0)
020A:A25A  83 FF F8				cmp	di,0FFF8h
020A:A25D  77 1A				ja	loc_1784		; Jump if above
020A:A25F  80 3E 4203 00			cmp	byte ptr ds:[4203h],0	; (D233:4203=2Eh)
020A:A264  74			data_586	db	74h
020A:A265  15 0EFE				adc	ax,0EFEh
020A:A268  03 42 74				add	ax,[bp+si+74h]
020A:A26B  0D C783				or	ax,0C783h
020A:A26E  02 F6				add	dh,dh
020A:A270  C7					db	0C7h
020A:A271  10 74 03				adc	[si+3],dh
020A:A274  83 C7 02				add	di,2
020A:A277  EB 39				jmp	short loc_1787		; (A2B2)
020A:A279			loc_1784:
020A:A279  EB 6B				jmp	short loc_1789		; (A2E6)
020A:A27B  A0 3C7A				mov	al,byte ptr ds:[3C7Ah]	; (D233:3C7A=0B7h)
020A:A27E  38 06 3C78				cmp	byte ptr ds:[3C78h],al	; (D233:3C78=0)
020A:A282  72 02				jb	loc_1785		; Jump if below
020A:A284  EB 60				jmp	short loc_1789		; (A2E6)
020A:A286			loc_1785:
020A:A286  F6 C7 10				test	bh,10h
020A:A289  74 0A				jz	loc_1786		; Jump if zero
020A:A28B  26: 83 7D 04 00			cmp	word ptr es:[di+4],0
020A:A290  74 54				je	loc_1789		; Jump if equal
020A:A292  83 C7 02				add	di,2
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 339

020A:A295			loc_1786:
020A:A295  83 C7 02				add	di,2
020A:A298  26: 83 3D 00				cmp	word ptr es:[di],0
020A:A29C  74 48				je	loc_1789		; Jump if equal
020A:A29E  F6 C7 10				test	bh,10h
020A:A2A1  75 0F				jnz	loc_1787		; Jump if not zero
020A:A2A3  26: 8B 05				mov	ax,es:[di]
020A:A2A6  3B 06 2A42				cmp	ax,word ptr ds:[2A42h]	; (D233:2A42=8EC0h)
020A:A2AA  72 3A				jb	loc_1789		; Jump if below
020A:A2AC  3B 06 2A44				cmp	ax,word ptr ds:[2A44h]	; (D233:2A44=26C0h)
020A:A2B0  77 34				ja	loc_1789		; Jump if above
020A:A2B2			loc_1787:
020A:A2B2  A1 3C74				mov	ax,word ptr ds:[3C74h]	; (D233:3C74=0FF2Eh)
020A:A2B5  A3 2EF4				mov	word ptr ds:[2EF4h],ax	; (D233:2EF4=0E7E9h)
020A:A2B8  A1 3C76				mov	ax,word ptr ds:[3C76h]	; (D233:3C76=236h)
020A:A2BB  A3 2EF2				mov	word ptr ds:[2EF2h],ax	; (D233:2EF2=108Ch)
020A:A2BE  A1 3C71				mov	ax,word ptr ds:[3C71h]	; (D233:3C71=0BEFFh)
020A:A2C1  A3 3796				mov	word ptr ds:[3796h],ax	; (D233:3796=9E02h)
020A:A2C4  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A2C9  5A					pop	dx
020A:A2CA  8E C2				mov	es,dx
020A:A2CC  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:A2D1  5A					pop	dx
020A:A2D2  75 0A				jnz	loc_1788		; Jump if not zero
020A:A2D4  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:A2D9  74 03				je	loc_1788		; Jump if equal
020A:A2DB  E8 F856				call	sub_151			; (9B34)
020A:A2DE			loc_1788:
020A:A2DE  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A2E3  E9 FDB8				jmp	loc_1765		; (A09E)
020A:A2E6			loc_1789:
020A:A2E6  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A2EB  5A					pop	dx
020A:A2EC  8E C2				mov	es,dx
020A:A2EE  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:A2F3  5A					pop	dx
020A:A2F4  75 0A				jnz	loc_1790		; Jump if not zero
020A:A2F6  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:A2FB  74 03				je	loc_1790		; Jump if equal
020A:A2FD  E8 F834				call	sub_151			; (9B34)
020A:A300			loc_1790:
020A:A300  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A305			loc_1791:
020A:A305  A1 3C71				mov	ax,word ptr ds:[3C71h]	; (D233:3C71=0BEFFh)
020A:A308  A3 3796				mov	word ptr ds:[3796h],ax	; (D233:3796=9E02h)
020A:A30B  A0 3C73				mov	al,byte ptr ds:[3C73h]	; (D233:3C73=56h)
020A:A30E  A2 2F04				mov	byte ptr ds:[2F04h],al	; (D233:2F04=68h)
020A:A311			loc_1792:
020A:A311  80 3E 3C78 00			cmp	byte ptr ds:[3C78h],0	; (D233:3C78=0)
020A:A316  74 76				je	loc_1799		; Jump if equal
020A:A318  BD 282A				mov	bp,282Ah
020A:A31B  80 3E 4202 01			cmp	byte ptr ds:[4202h],1	; (D233:4202=97h)
020A:A320  74 07				je	loc_1793		; Jump if equal
020A:A322  3E: 80 7E 00 3B			cmp	byte ptr ds:[bp],3Bh	; ';'
020A:A327  74 09				je	loc_1794		; Jump if equal
020A:A329			loc_1793:
020A:A329  3E: C6 46 00 3B			mov	byte ptr ds:[bp],3Bh	; ';'
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 340

020A:A32E  45					inc	bp
020A:A32F  45					inc	bp
020A:A330  EB 08				jmp	short loc_1795		; (A33A)
020A:A332			loc_1794:
020A:A332  3E: C6 46 00 3B			mov	byte ptr ds:[bp],3Bh	; ';'
020A:A337  BD 283F				mov	bp,283Fh
020A:A33A			loc_1795:
020A:A33A  A0 3C78				mov	al,byte ptr ds:[3C78h]	; (D233:3C78=0)
020A:A33D  32 E4				xor	ah,ah			; Zero register
020A:A33F  B3 00				mov	bl,0
020A:A341  9A 16BF:00D4		;*		call	far ptr sub_175		;*(16BF:00D4)
020A:A341  9A D4 00 BF 16			db	 9Ah,0D4h, 00h,0BFh, 16h
020A:A346  45					inc	bp
020A:A347  3E: C7 46 00 6E65			mov	word ptr ds:[bp],6E65h
020A:A34D  45					inc	bp
020A:A34E  45					inc	bp
020A:A34F  3E: C7 46 00 7274			mov	word ptr ds:[bp],7274h
020A:A355  45					inc	bp
020A:A356  45					inc	bp
020A:A357  80 3E 3C78 01			cmp	byte ptr ds:[3C78h],1	; (D233:3C78=0)
020A:A35C  74 0F				je	loc_1796		; Jump if equal
020A:A35E  3E: C7 46 00 6569			mov	word ptr ds:[bp],6569h
020A:A364  45					inc	bp
020A:A365  45					inc	bp
020A:A366  3E: C6 46 00 73			mov	byte ptr ds:[bp],73h	; 's'
020A:A36B  EB 05				jmp	short loc_1797		; (A372)
020A:A36D			loc_1796:
020A:A36D  3E: C6 46 00 79			mov	byte ptr ds:[bp],79h	; 'y'
020A:A372			loc_1797:
020A:A372  80 3E 4202 01			cmp	byte ptr ds:[4202h],1	; (D233:4202=97h)
020A:A377  75 15				jne	loc_1799		; Jump if not equal
020A:A379  45					inc	bp
020A:A37A  B9 377F				mov	cx,377Fh
020A:A37D  81 E9 3778				sub	cx,3778h
020A:A381  BF 3778				mov	di,3778h
  
020A:A384			locloop_1798:
020A:A384  8A 05				mov	al,[di]
020A:A386  3E: 88 46 00				mov	ds:[bp],al
020A:A38A  47					inc	di
020A:A38B  45					inc	bp
020A:A38C  E2 F6				loop	locloop_1798		; Loop if cx > 0
  
020A:A38E			loc_1799:
020A:A38E  A0 41FD				mov	al,byte ptr ds:[41FDh]	; (D233:41FD=0F6h)
020A:A391  A2 152A				mov	byte ptr ds:[152Ah],al	; (D233:152A=5Dh)
020A:A394			loc_1800:
020A:A394  C6 06 2EB7 01			mov	byte ptr ds:[2EB7h],1	; (D233:2EB7=0)
020A:A399  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A39E  5A					pop	dx
020A:A39F  8E C2				mov	es,dx
020A:A3A1  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:A3A6  5A					pop	dx
020A:A3A7  75 0A				jnz	loc_1801		; Jump if not zero
020A:A3A9  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:A3AE  74			data_590	db	74h
020A:A3AF  03 E8				add	bp,ax
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 341

020A:A3B1  81 F7 8B2E				xor	di,8B2Eh
020A:A3B5  16					push	ss
020A:A3B6  92					xchg	ax,dx
020A:A3B7  00 5D 5F				add	[di+5Fh],bl
020A:A3BA  5A					pop	dx
020A:A3BB  59					pop	cx
020A:A3BC  C3					retn
				sub_155		endp
  
020A:A3BD  87 DB				xchg	bx,bx
020A:A3BF  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_156		proc	near
020A:A3C0  53					push	bx
020A:A3C1  52					push	dx
020A:A3C2  57					push	di
020A:A3C3  8B CF				mov	cx,di
020A:A3C5  BF 0008				mov	di,8
020A:A3C8			loc_1802:
020A:A3C8  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:A3CC  75 07				jne	loc_1803		; Jump if not equal
020A:A3CE  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:A3D3  74 27				je	loc_1805		; Jump if equal
020A:A3D5			loc_1803:
020A:A3D5  26: 8A 55 05				mov	dl,es:[di+5]
020A:A3D9  80 E2 0C				and	dl,0Ch
020A:A3DC  80 FA 04				cmp	dl,4
020A:A3DF  75 14				jne	loc_1804		; Jump if not equal
020A:A3E1  26: F6 45 04 10			test	byte ptr es:[di+4],10h
020A:A3E6  75 3D				jnz	loc_1808		; Jump if not zero
020A:A3E8  26: F6 45 04 02			test	byte ptr es:[di+4],2
020A:A3ED  74 06				jz	loc_1804		; Jump if zero
020A:A3EF  26: 39 4D 02				cmp	es:[di+2],cx
020A:A3F3  74 30				je	loc_1808		; Jump if equal
020A:A3F5			loc_1804:
020A:A3F5  26: 39 05				cmp	es:[di],ax
020A:A3F8  72 2B				jb	loc_1808		; Jump if below
020A:A3FA  74 05				jz	loc_1806		; Jump if zero
020A:A3FC			loc_1805:
020A:A3FC  B8 FFFF				mov	ax,0FFFFh
020A:A3FF  EB 3F				jmp	short loc_1810		; (A440)
020A:A401			loc_1806:
020A:A401  26: 39 4D 02				cmp	es:[di+2],cx
020A:A405  72 1E				jb	loc_1808		; Jump if below
020A:A407  80 FA 00				cmp	dl,0
020A:A40A  75 13				jne	loc_1807		; Jump if not equal
020A:A40C  26: 8A 5D 04				mov	bl,es:[di+4]
020A:A410  80 E3 5F				and	bl,5Fh			; '_'
020A:A413  80 FB 5F				cmp	bl,5Fh			; '_'
020A:A416  75 07				jne	loc_1807		; Jump if not equal
020A:A418  26: F6 45 05 03			test	byte ptr es:[di+5],3
020A:A41D  74 06				jz	loc_1808		; Jump if zero
020A:A41F			loc_1807:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 342

020A:A41F  26: 8B		data_592	db	8Bh
020A:A421  45					inc	bp
020A:A422  02 EB				add	ch,bl
020A:A424  1B 50 26				sbb	dx,[bx+si+26h]
020A:A427  8A 45 05				mov	al,[di+5]
020A:A42A  25 000F				and	ax,0Fh
020A:A42D  53					push	bx
020A:A42E  BB 377F				mov	bx,377Fh
020A:A431  D7					xlat				; al=[al+[bx]] table
020A:A432  5B					pop	bx
020A:A433  0A C0				or	al,al			; Zero ?
020A:A435  75 04				jnz	loc_1809		; Jump if not zero
020A:A437  26: 8A 45 06				mov	al,es:[di+6]
020A:A43B			loc_1809:
020A:A43B  03 F8				add	di,ax
020A:A43D  58					pop	ax
020A:A43E  EB 88				jmp	short loc_1802		; (A3C8)
020A:A440			loc_1810:
020A:A440  5F					pop	di
020A:A441  5A					pop	dx
020A:A442  5B					pop	bx
020A:A443  C3					retn
				sub_156		endp
  
020A:A444  56					push	si
020A:A445  57					push	di
020A:A446  51					push	cx
020A:A447  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:A44C  06					push	es
020A:A44D  26: 8A 45 04				mov	al,es:[di+4]
020A:A451  24 1F				and	al,1Fh
020A:A453  3C 1F				cmp	al,1Fh
020A:A455  74 17				je	loc_1811		; Jump if equal
020A:A457  FE C8				dec	al
020A:A459  B4 2C				mov	ah,2Ch			; ','
020A:A45B  F6 E4				mul	ah			; ax = reg * al
020A:A45D  BE 3C81				mov	si,3C81h
020A:A460  03 F0				add	si,ax
020A:A462  BF 2ED4				mov	di,2ED4h
020A:A465  B9 0028				mov	cx,28h
020A:A468  E8 F3F3				call	sub_145			; (985E)
020A:A46B  FC					cld				; Clear direction
020A:A46C  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A46E			loc_1811:
020A:A46E  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A473  5A					pop	dx
020A:A474  8E C2				mov	es,dx
020A:A476  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:A47B  5A					pop	dx
020A:A47C  75 0A				jnz	loc_1812		; Jump if not zero
020A:A47E  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:A483  74 03				je	loc_1812		; Jump if equal
020A:A485  E8 F6AC				call	sub_151			; (9B34)
020A:A488			loc_1812:
020A:A488  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A48D  59			data_593	db	59h
020A:A48E  5F					pop	di
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 343

020A:A48F  5E					pop	si
020A:A490  C3					retn
020A:A491  DB87 F790		data_594	dd	0F790DB87h
020A:A495  06					push	es
020A:A496  CC					int	3			; Debug breakpoint
020A:A497  42					inc	dx
020A:A498  40					inc	ax
020A:A499  00 75 0F				add	[di+0Fh],dh
020A:A49C  26: 80 7C 01 21			cmp	byte ptr es:[si+1],21h	; '!'
020A:A4A1  75 08				jne	loc_1813		; Jump if not equal
020A:A4A3  A1 2ED4				mov	ax,data_408		; (020A:2ED4=444Eh)
020A:A4A6  80 FC 25				cmp	ah,25h			; '%'
020A:A4A9  74 03				je	loc_1814		; Jump if equal
020A:A4AB			loc_1813:
020A:A4AB  E9 0132				jmp	loc_1826		; (A5E0)
020A:A4AE			loc_1814:
020A:A4AE  5153			data_597	dw	5153h			; Data table (indexed access)
020A:A4B0  52					push	dx
020A:A4B1  57					push	di
020A:A4B2  56					push	si
020A:A4B3  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:A4B8  06					push	es
020A:A4B9  A1 2EE0				mov	ax,word ptr ds:[2EE0h]	; (020A:2EE0=504Dh)
020A:A4BC  8B 1E 2EF4				mov	bx,data_414		; (020A:2EF4=4553h)
020A:A4C0  3D 0000				cmp	ax,0
020A:A4C3  75 08				jne	loc_1815		; Jump if not equal
020A:A4C5  83 FB 00				cmp	bx,0
020A:A4C8  75 03				jne	loc_1815		; Jump if not equal
020A:A4CA  E9 00EF				jmp	loc_1824		; (A5BC)
020A:A4CD			loc_1815:
020A:A4CD  89 1E 37A6				mov	data_430,bx		; (020A:37A6=0C600h)
020A:A4D1  A3 37A8				mov	data_431,ax		; (020A:37A8=0EE06h)
020A:A4D4  BF 37A6				mov	di,37A6h
020A:A4D7  E8 F384				call	sub_145			; (985E)
020A:A4DA  E8 245B				call	$+245Eh
020A:A4DD  72 03				jc	loc_1816		; Jump if carry Set
020A:A4DF  E9 00DA				jmp	loc_1824		; (A5BC)
020A:A4E2			loc_1816:
020A:A4E2  A1 2EE0				mov	ax,word ptr ds:[2EE0h]	; (9B68:2EE0=0AFE1h)
020A:A4E5  BA 0001				mov	dx,1
020A:A4E8  E8 E73D				call	sub_126			; (8C28)
020A:A4EB  72 05				jc	loc_1818		; Jump if carry Set
020A:A4ED  EB 44				jmp	short loc_1819		; (A533)
020A:A4EF			loc_1817:
020A:A4EF  E9 00CA				jmp	loc_1824		; (A5BC)
020A:A4F2			loc_1818:
020A:A4F2  26: 80 4D 05 30			or	byte ptr es:[di+5],30h	; '0'
020A:A4F7  80 3E 2638 04			cmp	byte ptr ds:[2638h],4	; (D233:2638=0A3h)
020A:A4FC  72 F1				jb	loc_1817		; Jump if below
020A:A4FE  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:A503  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:A508  75 E5				jnz	loc_1817		; Jump if not zero
020A:A50A  57					push	di
020A:A50B  8B F7				mov	si,di
020A:A50D  BF 472B				mov	di,472Bh
020A:A510  B9 007F				mov	cx,7Fh
020A:A513  8C C0				mov	ax,es
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 344

020A:A515  1E					push	ds
020A:A516  07					pop	es
020A:A517  8E D8				mov	ds,ax
020A:A519  FC					cld				; Clear direction
020A:A51A  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A51C  8C C0				mov	ax,es
020A:A51E  1E					push	ds
020A:A51F  07					pop	es
020A:A520  8E D8				mov	ds,ax
020A:A522  5E					pop	si
020A:A523  E8 0546				call	sub_158			; (AA6C)
020A:A526  BF 472B				mov	di,472Bh
020A:A529  80 65 05 FC				and	byte ptr [di+5],0FCh
020A:A52D  80 4D 05 02				or	byte ptr [di+5],2
020A:A531  EB 25				jmp	short loc_1821		; (A558)
020A:A533			loc_1819:
020A:A533  BF 472B				mov	di,472Bh
020A:A536  89 1D				mov	[di],bx
020A:A538  89 45 02				mov	[di+2],ax
020A:A53B  B0 40				mov	al,40h			; '@'
020A:A53D  80 3E 263D 06			cmp	byte ptr ds:[263Dh],6	; (D233:263D=0E0h)
020A:A542  72 09				jb	loc_1820		; Jump if below
020A:A544  80 3E 2638 04			cmp	byte ptr ds:[2638h],4	; (D233:2638=0A3h)
020A:A549  73 02				jae	loc_1820		; Jump if above or =
020A:A54B  B0 00				mov	al,0
020A:A54D			loc_1820:
020A:A54D  88 45 04				mov	[di+4],al
020A:A550  C6 45 05 32				mov	byte ptr [di+5],32h	; '2'
020A:A554  C6 45 06 00				mov	byte ptr [di+6],0
020A:A558			loc_1821:
020A:A558  A1 2ED4				mov	ax,word ptr ds:[2ED4h]	; (D233:2ED4=61Eh)
020A:A55B  BD 33BE				mov	bp,33BEh
020A:A55E  9A 16BF:0024		;*		call	far ptr sub_170		;*(16BF:0024)
020A:A55E  9A 24 00 BF 16			db	 9Ah, 24h, 00h,0BFh, 16h
020A:A563  BD 33BA				mov	bp,33BAh
020A:A566  83 C7 07				add	di,7
020A:A569  B9 33C9				mov	cx,33C9h
020A:A56C  81 E9 33BA				sub	cx,33BAh
020A:A570  9A 16BF:1238		;*		call	far ptr sub_205		;*(16BF:1238)
020A:A570  9A 38 12 BF 16			db	 9Ah, 38h, 12h,0BFh, 16h
020A:A575  3C 00				cmp	al,0
020A:A577  74 1B				je	locloop_1822		; Jump if equal
020A:A579  55					push	bp
020A:A57A  53					push	bx
020A:A57B  BD 33C5				mov	bp,33C5h
020A:A57E  3E: C6 46 00 5F			mov	byte ptr ds:[bp],5Fh	; '_'
020A:A583  45					inc	bp
020A:A584  32 E4				xor	ah,ah			; Zero register
020A:A586  33 DB				xor	bx,bx			; Zero register
020A:A588  9A 16BF:00D4		;*		call	far ptr sub_175		;*(16BF:00D4)
020A:A588  9A D4 00 BF 16			db	 9Ah,0D4h, 00h,0BFh, 16h
020A:A58D  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:A592  5B					pop	bx
020A:A593  5D					pop	bp
  
020A:A594			locloop_1822:
020A:A594  3E: 8A 46 00				mov	al,ds:[bp]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 345

020A:A598  88 05				mov	[di],al
020A:A59A  45					inc	bp
020A:A59B  47					inc	di
020A:A59C  E2 F6				loop	locloop_1822		; Loop if cx > 0
  
020A:A59E  E8 030F				call	sub_157			; (A8B0)
020A:A5A1  BD 33C5				mov	bp,33C5h
020A:A5A4  3E: C6 46 00 72			mov	byte ptr ds:[bp],72h	; 'r'
020A:A5A9  45					inc	bp
020A:A5AA  3E: C6		data_599	db	0C6h
020A:A5AC  46			data_600	db	46h
020A:A5AD  00 79 45				add	[bx+di+45h],bh
020A:A5B0			loc_1823:
020A:A5B0  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:A5B5  45					inc	bp
020A:A5B6  81 FD 33C9				cmp	bp,33C9h
020A:A5BA  72 F4				jb	loc_1823		; Jump if below
020A:A5BC			loc_1824:
020A:A5BC  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A5C1  5A					pop	dx
020A:A5C2  8E C2				mov	es,dx
020A:A5C4  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:A5C9  5A					pop	dx
020A:A5CA  75 0A				jnz	loc_1825		; Jump if not zero
020A:A5CC  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:A5D1  74 03				je	loc_1825		; Jump if equal
020A:A5D3  E8 F55E				call	sub_151			; (9B34)
020A:A5D6			loc_1825:
020A:A5D6  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A5DB  5E					pop	si
020A:A5DC  5F					pop	di
020A:A5DD  5A					pop	dx
020A:A5DE  59					pop	cx
020A:A5DF  5B					pop	bx
020A:A5E0			loc_1826:
020A:A5E0  C3					retn
020A:A5E1  87 DB				xchg	bx,bx
020A:A5E3  8B90			data_601	dw	8B90h
020A:A5E5  F7 E8				imul	ax			; dx:ax = reg * ax
020A:A5E7  83 04 8B				add	word ptr [si],0FF8Bh
020A:A5EA  1E					push	ds
020A:A5EB  82 2D BA				sub	byte ptr [di],0BAh
020A:A5EE  01 00				add	[bx+si],ax
020A:A5F0  A8 02				test	al,2
020A:A5F2  75 03				jnz	loc_1827		; Jump if not zero
020A:A5F4  BA 0004				mov	dx,4
020A:A5F7			loc_1827:
020A:A5F7  06					push	es
020A:A5F8  8E 06 2D82				mov	es,data_383		; (020A:2D82=3233h)
020A:A5FC  8B 3E 2D84				mov	di,data_384		; (020A:2D84=433Bh)
020A:A600  A8 01				test	al,1
020A:A602  74 04				jz	loc_1828		; Jump if zero
020A:A604  26: 8B 5D 02				mov	bx,es:[di+2]
020A:A608			loc_1828:
020A:A608  26: 8B 05				mov	ax,es:[di]
020A:A60B  07					pop	es
020A:A60C  E8 E619				call	sub_126			; (8C28)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 346

020A:A60F  73 0F				jnc	loc_1829		; Jump if carry=0
020A:A611  8B F7				mov	si,di
020A:A613  E8 0456				call	sub_158			; (AA6C)
020A:A616  A1 2D84				mov	ax,word ptr ds:[2D84h]	; (D233:2D84=8E4h)
020A:A619  40					inc	ax
020A:A61A  A3 4315				mov	word ptr ds:[4315h],ax	; (D233:4315=3D06h)
020A:A61D  A3 4317				mov	word ptr ds:[4317h],ax	; (D233:4317=0FFFFh)
020A:A620			loc_1829:
020A:A620  C3					retn
020A:A621  87 DB				xchg	bx,bx
020A:A623  90					nop
020A:A624  50					push	ax
020A:A625  53					push	bx
020A:A626  57					push	di
020A:A627  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:A62C  06					push	es
020A:A62D  26: 8A 45 05				mov	al,es:[di+5]
020A:A631  24 0F				and	al,0Fh
020A:A633  75 03				jnz	loc_1830		; Jump if not zero
020A:A635  E9 024A				jmp	loc_1858		; (A882)
020A:A638			loc_1830:
020A:A638  26: 8A 45 09				mov	al,es:[di+9]
020A:A63C  3C 00				cmp	al,0
020A:A63E  75 0D				jne	loc_1831		; Jump if not equal
020A:A640  C6 06 2D8D 00			mov	data_388,0		; (020A:2D8D=57h)
020A:A645  C6 06 2D8F 01			mov	data_389,1		; (020A:2D8F=3Bh)
020A:A64A  E9 0230				jmp	loc_1857		; (A87D)
020A:A64D			loc_1831:
020A:A64D  3C 01				cmp	al,1
020A:A64F  75 08				jne	loc_1832		; Jump if not equal
020A:A651  C6 06 2D8D 05			mov	data_388,5		; (020A:2D8D=57h)
020A:A656  E9 0224				jmp	loc_1857		; (A87D)
020A:A659			loc_1832:
020A:A659  3C 02				cmp	al,2
020A:A65B  75 12				jne	loc_1834		; Jump if not equal
020A:A65D  F6 06 2E7E 05			test	data_394,5		; (020A:2E7E=4Fh)
020A:A662  74 08				jz	loc_1833		; Jump if zero
020A:A664  C6 06 4205 01			mov	data_466,1		; (020A:4205=2Eh)
020A:A669  E9 0211				jmp	loc_1857		; (A87D)
020A:A66C			loc_1833:
020A:A66C  E9 0213				jmp	loc_1858		; (A882)
020A:A66F			loc_1834:
020A:A66F  3C 03				cmp	al,3
020A:A671  75 0B				jne	loc_1835		; Jump if not equal
020A:A673  E8 1B01				call	$+1B04h
020A:A676  B0 03				mov	al,3
020A:A678  E8 D495				call	sub_98			; (7B10)
020A:A67B  E9 0204				jmp	loc_1858		; (A882)
020A:A67E			loc_1835:
020A:A67E  3C 04				cmp	al,4
020A:A680  75 28				jne	loc_1837		; Jump if not equal
020A:A682  C6 06 2D8D 00			mov	byte ptr ds:[2D8Dh],0	; (9B68:2D8D=0A0h)
020A:A687  C6 06 2D8F 01			mov	byte ptr ds:[2D8Fh],1	; (9B68:2D8F=20h)
020A:A68C  F6 06 2ECA 04			test	byte ptr ds:[2ECAh],4	; (9B68:2ECA=20h)
020A:A691  74 14				jz	loc_1836		; Jump if zero
020A:A693  80 26 2ECA CF			and	byte ptr ds:[2ECAh],0CFh	; (9B68:2ECA=20h)
020A:A698  80 26 2ECA FC			and	byte ptr ds:[2ECAh],0FCh	; (9B68:2ECA=20h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 347

020A:A69D  80 26 2ECA FB			and	byte ptr ds:[2ECAh],0FBh	; (9B68:2ECA=20h)
020A:A6A2  B0 42				mov	al,42h			; 'B'
020A:A6A4  E8 D469				call	sub_98			; (7B10)
020A:A6A7			loc_1836:
020A:A6A7  E9 01D3				jmp	loc_1857		; (A87D)
020A:A6AA			loc_1837:
020A:A6AA  3C 05				cmp	al,5
020A:A6AC  75 23				jne	loc_1839		; Jump if not equal
020A:A6AE  C6 06 2D8D 00			mov	byte ptr ds:[2D8Dh],0	; (9B68:2D8D=0A0h)
020A:A6B3  C6 06 2D8F 01			mov	byte ptr ds:[2D8Fh],1	; (9B68:2D8F=20h)
020A:A6B8  F6 06 2ECA 04			test	byte ptr ds:[2ECAh],4	; (9B68:2ECA=20h)
020A:A6BD  75 0F				jnz	loc_1838		; Jump if not zero
020A:A6BF  80 0E 2ECA 04			or	byte ptr ds:[2ECAh],4	; (9B68:2ECA=20h)
020A:A6C4  80 0E 2ECA 03			or	byte ptr ds:[2ECAh],3	; (9B68:2ECA=20h)
020A:A6C9  B0 41				mov	al,41h			; 'A'
020A:A6CB  E8 D442				call	sub_98			; (7B10)
020A:A6CE			loc_1838:
020A:A6CE  E9 01AC				jmp	loc_1857		; (A87D)
020A:A6D1			loc_1839:
020A:A6D1  3C 06				cmp	al,6
020A:A6D3  75 38				jne	loc_1841		; Jump if not equal
020A:A6D5  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:A6D9  09 06 42CC				or	word ptr ds:[42CCh],ax	; (9B68:42CC=0)
020A:A6DD  26: 8A 45 0C				mov	al,es:[di+0Ch]
020A:A6E1  32 E4				xor	ah,ah			; Zero register
020A:A6E3  09 06 42CE				or	word ptr ds:[42CEh],ax	; (9B68:42CE=0)
020A:A6E7  26: 8B 45 0D				mov	ax,es:[di+0Dh]
020A:A6EB  21 06 42CC				and	word ptr ds:[42CCh],ax	; (9B68:42CC=0)
020A:A6EF  26: 8A 45 0F				mov	al,es:[di+0Fh]
020A:A6F3  B4 FF				mov	ah,0FFh
020A:A6F5  21 06 42CE				and	word ptr ds:[42CEh],ax	; (9B68:42CE=0)
020A:A6F9  B0 00				mov	al,0
020A:A6FB  F7 06 42CC 0002			test	word ptr ds:[42CCh],2	; (9B68:42CC=0)
020A:A701  74 02				jz	loc_1840		; Jump if zero
020A:A703  B0 01				mov	al,1
020A:A705			loc_1840:
020A:A705  9A 16BF:12D0		;*		call	far ptr sub_207		;*(16BF:12D0)
020A:A705  9A D0 12 BF 16			db	 9Ah,0D0h, 12h,0BFh, 16h
020A:A70A  E9 0170				jmp	loc_1857		; (A87D)
020A:A70D			loc_1841:
020A:A70D  3C 07				cmp	al,7
020A:A70F  75 2D				jne	loc_1842		; Jump if not equal
020A:A711  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:A715  A3 2EF4				mov	word ptr ds:[2EF4h],ax	; (9B68:2EF4=2020h)
020A:A718  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:A71C  A3 2EF2				mov	word ptr ds:[2EF2h],ax	; (9B68:2EF2=2020h)
020A:A71F  26: 8B		data_602	db	8Bh
020A:A721  45					inc	bp
020A:A722  0E					push	cs
020A:A723  A3 2ED4				mov	word ptr ds:[2ED4h],ax	; (9B68:2ED4=0AEABh)
020A:A726  26: 8B 45 10				mov	ax,es:[di+10h]
020A:A72A  A3 2ED8				mov	word ptr ds:[2ED8h],ax	; (9B68:2ED8=8C20h)
020A:A72D  26: 8B 45 12				mov	ax,es:[di+12h]
020A:A731  A3 2EE4				mov	word ptr ds:[2EE4h],ax	; (9B68:2EE4=0A7ECh)
020A:A734  26: 8B 45 14				mov	ax,es:[di+14h]
020A:A738  A3 2EE8				mov	word ptr ds:[2EE8h],ax	; (9B68:2EE8=0E2A0h)
020A:A73B  E9 0144				jmp	loc_1858		; (A882)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 348

020A:A73E			loc_1842:
020A:A73E  3C 17				cmp	al,17h
020A:A740  75 02				jne	loc_1843		; Jump if not equal
020A:A742  EB 62				jmp	short loc_1850		; (A7A6)
020A:A744			loc_1843:
020A:A744  3C 90				cmp	al,90h
020A:A746  72 06				jb	loc_1844		; Jump if below
020A:A748  3C 96				cmp	al,96h
020A:A74A  77 02				ja	loc_1844		; Jump if above
020A:A74C  EB 6E				jmp	short loc_1851		; (A7BC)
020A:A74E			loc_1844:
020A:A74E  3C 0A				cmp	al,0Ah
020A:A750  77 15				ja	loc_1846		; Jump if above
020A:A752  3C 08				cmp	al,8
020A:A754  72 0E				jb	loc_1845		; Jump if below
020A:A756  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:A75A  89 1E 42B1				mov	word ptr ds:[42B1h],bx	; (9B68:42B1=0)
020A:A75E  A2 42B3				mov	byte ptr ds:[42B3h],al	; (9B68:42B3=0)
020A:A761  E9 0119				jmp	loc_1857		; (A87D)
020A:A764			loc_1845:
020A:A764  E9 011B				jmp	loc_1858		; (A882)
020A:A767			loc_1846:
020A:A767  A8 10				test	al,10h
020A:A769  75 6E				jnz	loc_1852		; Jump if not zero
020A:A76B  A8 40				test	al,40h			; '@'
020A:A76D  74 0E				jz	loc_1847		; Jump if zero
020A:A76F  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:A773  89 1E 2D91				mov	word ptr ds:[2D91h],bx	; (9B68:2D91=0E193h)
020A:A777  A2 2D90				mov	byte ptr ds:[2D90h],al	; (9B68:2D90=20h)
020A:A77A  E9 0100				jmp	loc_1857		; (A87D)
020A:A77D			loc_1847:
020A:A77D  3C 80				cmp	al,80h
020A:A77F  72 E3				jb	loc_1845		; Jump if below
020A:A781  3C 8C				cmp	al,8Ch
020A:A783  77 DF				ja	loc_1845		; Jump if above
020A:A785  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:A789  BE 2ED4				mov	si,2ED4h
020A:A78C  24 0F				and	al,0Fh
020A:A78E  3C 07				cmp	al,7
020A:A790  72 07				jb	loc_1848		; Jump if below
020A:A792  BE 2EF0				mov	si,2EF0h
020A:A795  2C 07				sub	al,7
020A:A797  EB 02				jmp	short loc_1849		; (A79B)
020A:A799			loc_1848:
020A:A799  D0 E0				shl	al,1			; Shift w/zeros fill
020A:A79B			loc_1849:
020A:A79B  D0 E0				shl	al,1			; Shift w/zeros fill
020A:A79D  32 E4				xor	ah,ah			; Zero register
020A:A79F  03 F0				add	si,ax
020A:A7A1  89 1C				mov	[si],bx
020A:A7A3  E9 00D7				jmp	loc_1857		; (A87D)
020A:A7A6			loc_1850:
020A:A7A6  C6 06 38BA 13			mov	byte ptr ds:[38BAh],13h	; (9B68:38BA=0)
020A:A7AB  26: 8A 45 06				mov	al,es:[di+6]
020A:A7AF  2C 16				sub	al,16h
020A:A7B1  BE 0016				mov	si,16h
020A:A7B4  9A 16BF:1154		;*		call	far ptr sub_202		;*(16BF:1154)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 349

020A:A7B4  9A 54 11 BF 16			db	 9Ah, 54h, 11h,0BFh, 16h
020A:A7B9  E9 00C6				jmp	loc_1858		; (A882)
020A:A7BC			loc_1851:
020A:A7BC  2C 90				sub	al,90h
020A:A7BE  32 E4				xor	ah,ah			; Zero register
020A:A7C0  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:A7C2  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:A7C4  BE 2ED4				mov	si,2ED4h
020A:A7C7  03 F0				add	si,ax
020A:A7C9  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:A7CD  89 1C				mov	[si],bx
020A:A7CF  26: 8B 5D 0C				mov	bx,es:[di+0Ch]
020A:A7D3  89 5C 02				mov	[si+2],bx
020A:A7D6  E9 00A4				jmp	loc_1857		; (A87D)
020A:A7D9			loc_1852:
020A:A7D9  FF 36 37A4				push	word ptr ds:[37A4h]	; (9B68:37A4=0)
020A:A7DD  FF 36 3796				push	word ptr ds:[3796h]	; (9B68:3796=92h)
020A:A7E1  FF 36 2A8F				push	word ptr ds:[2A8Fh]	; (9B68:2A8F=0A58Ch)
020A:A7E5  C6 06 4202 01			mov	byte ptr ds:[4202h],1	; (9B68:4202=0)
020A:A7EA  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:A7EE  A3 37A4				mov	word ptr ds:[37A4h],ax	; (9B68:37A4=0)
020A:A7F1  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:A7F5  A3 3796				mov	word ptr ds:[3796h],ax	; (9B68:3796=92h)
020A:A7F8  26: 8A 45 0E				mov	al,es:[di+0Eh]
020A:A7FC  A2 4203				mov	byte ptr ds:[4203h],al	; (9B68:4203=0)
020A:A7FF  26: 8A 45 09				mov	al,es:[di+9]
020A:A803  B7 20				mov	bh,20h			; ' '
020A:A805  A8 01				test	al,1
020A:A807  74 03				jz	loc_1853		; Jump if zero
020A:A809  80 CF 10				or	bh,10h
020A:A80C			loc_1853:
020A:A80C  C6 06 2A75 00			mov	byte ptr ds:[2A75h],0	; (9B68:2A75=0A0h)
020A:A811  3C 11				cmp	al,11h
020A:A813  77 05				ja	loc_1854		; Jump if above
020A:A815  C6 06 2A75 4F			mov	byte ptr ds:[2A75h],4Fh	; (9B68:2A75=0A0h) 'O'
020A:A81A			loc_1854:
020A:A81A  B2 00				mov	dl,0
020A:A81C  E8 F03F				call	sub_145			; (985E)
020A:A81F  BE 41FF				mov	si,41FFh
020A:A822  E8 F5FB				call	sub_155			; (9E20)
020A:A825  C6 06 4202 02			mov	byte ptr ds:[4202h],2	; (D233:4202=97h)
020A:A82A  C6 06 4203 00			mov	byte ptr ds:[4203h],0	; (D233:4203=2Eh)
020A:A82F  C6 06 2A75 00			mov	byte ptr ds:[2A75h],0	; (D233:2A75=7)
020A:A834  8F 06 2A8F				pop	word ptr ds:[2A8Fh]	; (D233:2A8F=0B4F0h)
020A:A838  8F 06 3796				pop	word ptr ds:[3796h]	; (D233:3796=9E02h)
020A:A83C  8F 06 37A4				pop	word ptr ds:[37A4h]	; (D233:37A4=0B9E8h)
020A:A840  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A845  5A					pop	dx
020A:A846  8E C2				mov	es,dx
020A:A848  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:A84D  5A					pop	dx
020A:A84E  75 0A				jnz	loc_1855		; Jump if not zero
020A:A850  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:A855  74 03				je	loc_1855		; Jump if equal
020A:A857  E8 F2DA				call	sub_151			; (9B34)
020A:A85A			loc_1855:
020A:A85A  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 350

020A:A85F  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:A864  06					push	es
020A:A865  BA 0001				mov	dx,1
020A:A868  26: 8A 45 09				mov	al,es:[di+9]
020A:A86C  3C 11				cmp	al,11h
020A:A86E  77 03				ja	loc_1856		; Jump if above
020A:A870  BA 0004				mov	dx,4
020A:A873			loc_1856:
020A:A873  A1 2D84				mov	ax,word ptr ds:[2D84h]	; (D233:2D84=8E4h)
020A:A876  8B 1E 2D82				mov	bx,word ptr ds:[2D82h]	; (D233:2D82=0E865h)
020A:A87A  E8 E3AB				call	sub_126			; (8C28)
020A:A87D			loc_1857:
020A:A87D  C6 06 27D4 2E			mov	byte ptr ds:[27D4h],2Eh	; (D233:27D4=0ADh) '.'
020A:A882			loc_1858:
020A:A882  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A887  5A					pop	dx
020A:A888  8E C2				mov	es,dx
020A:A88A  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:A88F  5A					pop	dx
020A:A890  75 0A				jnz	loc_1859		; Jump if not zero
020A:A892  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:A897  74 03				je	loc_1859		; Jump if equal
020A:A899  E8 F298				call	sub_151			; (9B34)
020A:A89C			loc_1859:
020A:A89C  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A8A1  5F					pop	di
020A:A8A2  5B			data_605	db	5Bh
020A:A8A3  58			data_606	db	58h
020A:A8A4  F8					clc				; Clear carry flag
020A:A8A5  C3					retn
020A:A8A6  00 00 00 00				db	0, 0, 0, 0
020A:A8AA  00			data_608	db	0
020A:A8AB  00 00				add	[bx+si],al
020A:A8AD  00			data_609	db	0
020A:A8AE  00 00				add	[bx+si],al
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_157		proc	near
020A:A8B0  50					push	ax
020A:A8B1  53					push	bx
020A:A8B2  51					push	cx
020A:A8B3  52					push	dx
020A:A8B4  56					push	si
020A:A8B5  57					push	di
020A:A8B6  55					push	bp
020A:A8B7  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:A8BC  1E					push	ds
020A:A8BD  E8 EF89				call	sub_140			; (9849)
020A:A8C0  BD 377F				mov	bp,377Fh
020A:A8C3  BE 472B				mov	si,472Bh
020A:A8C6  8B 1C				mov	bx,[si]
020A:A8C8  8A 44 05				mov	al,[si+5]
020A:A8CB  24 0C				and	al,0Ch
020A:A8CD  3C 08				cmp	al,8
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 351

020A:A8CF  74 47				je	loc_1863		; Jump if equal
020A:A8D1  3C 04				cmp	al,4
020A:A8D3  74 0A				je	loc_1860		; Jump if equal
020A:A8D5  3C 00				cmp	al,0
020A:A8D7  74 15				je	loc_1861		; Jump if equal
020A:A8D9  BB 0001				mov	bx,1
020A:A8DC  E9 9010		;*		jmp	loc_392			;*(38EF)
020A:A8DC  E9 10 90				db	0E9h, 10h, 90h
020A:A8DF			loc_1860:
020A:A8DF  E8 F286				call	sub_152			; (9B68)
020A:A8E2  83 06 2A63 01			add	word ptr ds:[2A63h],1	; (9B68:2A63=0A5E3h)
020A:A8E7  83 16 2A65 00			adc	word ptr ds:[2A65h],0	; (9B68:2A65=0A0ACh)
020A:A8EC  EB 39				jmp	short loc_1864		; (A927)
020A:A8EE			loc_1861:
020A:A8EE  80 7C 04 5F				cmp	byte ptr [si+4],5Fh	; '_'
020A:A8F2  75 15				jne	loc_1862		; Jump if not equal
020A:A8F4  80 7C 05 00				cmp	byte ptr [si+5],0
020A:A8F8  75 0F				jne	loc_1862		; Jump if not equal
020A:A8FA  E8 EF6A				call	sub_147			; (9867)
020A:A8FD  83 06 2A6F 01			add	word ptr ds:[2A6Fh],1	; (9B68:2A6F=0ADE2h)
020A:A902  83 16 2A71 00			adc	word ptr ds:[2A71h],0	; (9B68:2A71=0ACAEh)
020A:A907  EB 1E				jmp	short loc_1864		; (A927)
020A:A909			loc_1862:
020A:A909  E8 F2D0				call	sub_153			; (9BDC)
020A:A90C  83 06 2A67 01			add	word ptr ds:[2A67h],1	; (9B68:2A67=20EFh)
020A:A911  83 16 2A69 00			adc	word ptr ds:[2A69h],0	; (9B68:2A69=20A2h)
020A:A916  EB 0F				jmp	short loc_1864		; (A927)
020A:A918			loc_1863:
020A:A918  E8 F335				call	sub_154			; (9C50)
020A:A91B  83 06 2A6B 01			add	word ptr ds:[2A6Bh],1	; (9B68:2A6B=0A0AFh)
020A:A920  83 16 2A6D 00			adc	word ptr ds:[2A6Dh],0	; (9B68:2A6D=0A5AAh)
020A:A925  EB 00				jmp	short loc_1864		; (A927)
020A:A927			loc_1864:
020A:A927  E8 C106				call	sub_93			; (6A30)
020A:A92A  BF 0008				mov	di,8
020A:A92D  8B 1C				mov	bx,[si]
020A:A92F  8B 44 02				mov	ax,[si+2]
020A:A932  26: 8B 0E 0002			mov	cx,word ptr es:[2]	; (D233:0002=0)
020A:A937  3B CB				cmp	cx,bx
020A:A939  77 10				ja	loc_1866		; Jump if above
020A:A93B  72 09				jc	loc_1865		; Jump if carry Set
020A:A93D  26: 8B 0E 0004			mov	cx,word ptr es:[4]	; (D233:0004=0)
020A:A942  3B C8				cmp	cx,ax
020A:A944  77 05				ja	loc_1866		; Jump if above
020A:A946			loc_1865:
020A:A946  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (D233:0006=0)
020A:A94B			loc_1866:
020A:A94B  8B 1C				mov	bx,[si]
020A:A94D  8B 44 02				mov	ax,[si+2]
020A:A950  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (D233:0000=0)
020A:A955  72 02				jb	loc_1867		; Jump if below
020A:A957  EB 43				jmp	short loc_1873		; (A99C)
020A:A959			loc_1867:
020A:A959  26: 39 1D				cmp	es:[di],bx
020A:A95C  73 19				jae	loc_1869		; Jump if above or =
020A:A95E  BB 377F				mov	bx,377Fh
020A:A961  26: 8A 45 05				mov	al,es:[di+5]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 352

020A:A965  25 000F				and	ax,0Fh
020A:A968  D7					xlat				; al=[al+[bx]] table
020A:A969  0A C0				or	al,al			; Zero ?
020A:A96B  75 04				jnz	loc_1868		; Jump if not zero
020A:A96D  26: 8A 45 06				mov	al,es:[di+6]
020A:A971			loc_1868:
020A:A971  8B C8				mov	cx,ax
020A:A973  03 F9				add	di,cx
020A:A975  EB D4				jmp	short loc_1866		; (A94B)
020A:A977			loc_1869:
020A:A977  74 02				jz	loc_1870		; Jump if zero
020A:A979  EB 21				jmp	short loc_1873		; (A99C)
020A:A97B			loc_1870:
020A:A97B  26: 39 45 02				cmp	es:[di+2],ax
020A:A97F  72 02				jb	loc_1871		; Jump if below
020A:A981  EB 19				jmp	short loc_1873		; (A99C)
020A:A983			loc_1871:
020A:A983  BB 377F				mov	bx,377Fh
020A:A986  26: 8A 45 05				mov	al,es:[di+5]
020A:A98A  25 000F				and	ax,0Fh
020A:A98D  D7					xlat				; al=[al+[bx]] table
020A:A98E  0A C0				or	al,al			; Zero ?
020A:A990  75 04				jnz	loc_1872		; Jump if not zero
020A:A992  26: 8A 45 06				mov	al,es:[di+6]
020A:A996			loc_1872:
020A:A996  8B C8				mov	cx,ax
020A:A998  03 F9				add	di,cx
020A:A99A  EB AF				jmp	short loc_1866		; (A94B)
020A:A99C			loc_1873:
020A:A99C  BB 377F				mov	bx,377Fh
020A:A99F  8A 44 05				mov	al,[si+5]
020A:A9A2  25 000F				and	ax,0Fh
020A:A9A5  D7					xlat				; al=[al+[bx]] table
020A:A9A6  0A C0				or	al,al			; Zero ?
020A:A9A8  75 03				jnz	loc_1874		; Jump if not zero
020A:A9AA  8A 44 06				mov	al,[si+6]
020A:A9AD			loc_1874:
020A:A9AD  8B C8				mov	cx,ax
020A:A9AF  26: A1 0000				mov	ax,word ptr es:[0]	; (D233:0000=0)
020A:A9B3  03 C1				add	ax,cx
020A:A9B5  73 03				jnc	loc_1875		; Jump if carry=0
020A:A9B7  E9 8E9F				jmp	loc_377			; (3859)
020A:A9BA			loc_1875:
020A:A9BA  BE 472B				mov	si,472Bh
020A:A9BD  8B 04				mov	ax,[si]
020A:A9BF  3B 06 2D82				cmp	ax,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:A9C3  75 41				jne	loc_1879		; Jump if not equal
020A:A9C5  8B 44 02				mov	ax,[si+2]
020A:A9C8  3B 06 2D84				cmp	ax,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:A9CC  76 38				jbe	loc_1879		; Jump if below or =
020A:A9CE  8A 5C 05				mov	bl,[si+5]
020A:A9D1  80 E3 0C				and	bl,0Ch
020A:A9D4  80 FB 08				cmp	bl,8
020A:A9D7  74 0C				je	loc_1876		; Jump if equal
020A:A9D9  80 FB 04				cmp	bl,4
020A:A9DC  74 12				je	loc_1877		; Jump if equal
020A:A9DE  80 FB 00				cmp	bl,0
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 353

020A:A9E1  74 18				je	loc_1878		; Jump if equal
020A:A9E3  EB 21				jmp	short loc_1879		; (AA06)
020A:A9E5			loc_1876:
020A:A9E5  3B 06 4317				cmp	ax,word ptr ds:[4317h]	; (9B68:4317=0)
020A:A9E9  73 1B				jae	loc_1879		; Jump if above or =
020A:A9EB  A3 4317				mov	word ptr ds:[4317h],ax	; (9B68:4317=0)
020A:A9EE  EB 16				jmp	short loc_1879		; (AA06)
020A:A9F0			loc_1877:
020A:A9F0  3B 06 4313				cmp	ax,word ptr ds:[4313h]	; (9B68:4313=0)
020A:A9F4  73 10				jae	loc_1879		; Jump if above or =
020A:A9F6  A3 4313				mov	word ptr ds:[4313h],ax	; (9B68:4313=0)
020A:A9F9  EB 0B				jmp	short loc_1879		; (AA06)
020A:A9FB			loc_1878:
020A:A9FB  3B 06 4315				cmp	ax,word ptr ds:[4315h]	; (9B68:4315=0)
020A:A9FF  73 05				jae	loc_1879		; Jump if above or =
020A:AA01  A3 4315				mov	word ptr ds:[4315h],ax	; (9B68:4315=0)
020A:AA04  EB 00				jmp	short loc_1879		; (AA06)
020A:AA06			loc_1879:
020A:AA06  57					push	di
020A:AA07  51					push	cx
020A:AA08  1E					push	ds
020A:AA09  06					push	es
020A:AA0A  1F					pop	ds
020A:AA0B  26: 8B 36 0000			mov	si,word ptr es:[0]	; (D233:0000=0)
020A:AA10  4E					dec	si
020A:AA11  8B C6				mov	ax,si
020A:AA13  2B C7				sub	ax,di
020A:AA15  40					inc	ax
020A:AA16  26: 01 0E 0000			add	word ptr es:[0],cx	; (D233:0000=0)
020A:AA1B  73 03				jnc	loc_1880		; Jump if carry=0
020A:AA1D  E9 8E39				jmp	loc_377			; (3859)
020A:AA20			loc_1880:
020A:AA20  8B FE				mov	di,si
020A:AA22  03 F9				add	di,cx
020A:AA24  8B C8				mov	cx,ax
020A:AA26  FD					std				; Set direction flag
020A:AA27  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:AA29  1F					pop	ds
020A:AA2A  59					pop	cx
020A:AA2B  5F					pop	di
020A:AA2C  BE 472B				mov	si,472Bh
020A:AA2F  8B 04				mov	ax,[si]
020A:AA31  26: A3 0002				mov	word ptr es:[2],ax	; (D233:0002=0)
020A:AA35  8B 44 02				mov	ax,[si+2]
020A:AA38  26: A3 0004				mov	word ptr es:[4],ax	; (D233:0004=0)
020A:AA3C  26: 89 3E 0006			mov	word ptr es:[6],di	; (D233:0006=0)
020A:AA41  FC					cld				; Clear direction
020A:AA42  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:AA44  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:AA49  5A					pop	dx
020A:AA4A  8E DA				mov	ds,dx
020A:AA4C  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:AA51  5A					pop	dx
020A:AA52  75 0A				jnz	loc_1881		; Jump if not zero
020A:AA54  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:AA59  74 03				je	loc_1881		; Jump if equal
020A:AA5B  E8 F0D6				call	sub_151			; (9B34)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 354

020A:AA5E			loc_1881:
020A:AA5E  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:AA63  5D					pop	bp
020A:AA64  5F					pop	di
020A:AA65  5E					pop	si
020A:AA66  5A					pop	dx
020A:AA67  59					pop	cx
020A:AA68  5B					pop	bx
020A:AA69  58					pop	ax
020A:AA6A  C3					retn
				sub_157		endp
  
020A:AA6B  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_158		proc	near
020A:AA6C  E8 BFC1				call	sub_93			; (6A30)
020A:AA6F  50					push	ax
020A:AA70  53					push	bx
020A:AA71  51					push	cx
020A:AA72  52					push	dx
020A:AA73  56					push	si
020A:AA74  57					push	di
020A:AA75  55					push	bp
020A:AA76  26: 8A 44 05				mov	al,es:[si+5]
020A:AA7A  24 0C				and	al,0Ch
020A:AA7C  3C 08				cmp	al,8
020A:AA7E  74 26				je	loc_1884		; Jump if equal
020A:AA80  3C 04				cmp	al,4
020A:AA82  74 0A				je	loc_1882		; Jump if equal
020A:AA84  3C 00				cmp	al,0
020A:AA86  74 12				je	loc_1883		; Jump if equal
020A:AA88  BB 0002				mov	bx,2
020A:AA8B  E9 8E61		;*		jmp	loc_392			;*(38EF)
020A:AA8B  E9 61 8E				db	0E9h, 61h, 8Eh
020A:AA8E			loc_1882:
020A:AA8E  83 2E 2A63 01			sub	data_354,1		; (020A:2A63=0AEA1h)
020A:AA93  83 1E 2A65 00			sbb	data_355,0		; (020A:2A65=20A9h)
020A:AA98  EB 18				jmp	short loc_1885		; (AAB2)
020A:AA9A			loc_1883:
020A:AA9A  83 2E 2A67 01			sub	data_356,1		; (020A:2A67=0A8E1h)
020A:AA9F  83 1E 2A69 00			sbb	data_357,0		; (020A:2A69=0E2E1h)
020A:AAA4  EB 0C				jmp	short loc_1885		; (AAB2)
020A:AAA6			loc_1884:
020A:AAA6  83 2E 2A6B 01			sub	data_358,1		; (020A:2A6B=0ACA5h)
020A:AAAB  83 1E 2A6D 00			sbb	data_359,0		; (020A:2A6D=24EBh)
020A:AAB0  EB 00				jmp	short loc_1885		; (AAB2)
020A:AAB2			loc_1885:
020A:AAB2  BB 377F				mov	bx,377Fh
020A:AAB5  26: 8A 44 05				mov	al,es:[si+5]
020A:AAB9  25 000F				and	ax,0Fh
020A:AABC  D7					xlat				; al=[al+[bx]] table
020A:AABD  0A C0				or	al,al			; Zero ?
020A:AABF  75 04				jnz	loc_1886		; Jump if not zero
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 355

020A:AAC1  26: 8A 44 06				mov	al,es:[si+6]
020A:AAC5			loc_1886:
020A:AAC5  8B C8				mov	cx,ax
020A:AAC7  26: 8B 04				mov	ax,es:[si]
020A:AACA  3B 06 2D82				cmp	ax,data_383		; (020A:2D82=3233h)
020A:AACE  75 71				jne	loc_1893		; Jump if not equal
020A:AAD0  26: 8B 44 02				mov	ax,es:[si+2]
020A:AAD4  26: 8A 5C 05				mov	bl,es:[si+5]
020A:AAD8  80 E3 0C				and	bl,0Ch
020A:AADB  80 FB 08				cmp	bl,8
020A:AADE  74 0C				je	loc_1887		; Jump if equal
020A:AAE0  80 FB 04				cmp	bl,4
020A:AAE3  74 24				je	loc_1889		; Jump if equal
020A:AAE5  80 FB 00				cmp	bl,0
020A:AAE8  74 3C				je	loc_1891		; Jump if equal
020A:AAEA  EB 55				jmp	short loc_1893		; (AB41)
020A:AAEC			loc_1887:
020A:AAEC  3B 06 4317				cmp	ax,word ptr ds:[4317h]	; (020A:4317=3600h)
020A:AAF0  75 4F				jne	loc_1893		; Jump if not equal
020A:AAF2  8B D9				mov	bx,cx
020A:AAF4  26: 8B 00				mov	ax,es:[bx+si]
020A:AAF7  3B 06 2D82				cmp	ax,data_383		; (020A:2D82=3233h)
020A:AAFB  26: 8B 40 02				mov	ax,es:[bx+si+2]
020A:AAFF  75 03				jnz	loc_1888		; Jump if not zero
020A:AB01  B8 FFFF				mov	ax,0FFFFh
020A:AB04			loc_1888:
020A:AB04  A3 4317				mov	word ptr ds:[4317h],ax	; (020A:4317=3600h)
020A:AB07  EB 38				jmp	short loc_1893		; (AB41)
020A:AB09			loc_1889:
020A:AB09  3B 06 4313				cmp	ax,word ptr ds:[4313h]	; (020A:4313=3)
020A:AB0D  75 32				jne	loc_1893		; Jump if not equal
020A:AB0F  8B D9				mov	bx,cx
020A:AB11  26: 8B 00				mov	ax,es:[bx+si]
020A:AB14  3B 06 2D82				cmp	ax,data_383		; (020A:2D82=3233h)
020A:AB18  26: 8B 40 02				mov	ax,es:[bx+si+2]
020A:AB1C  75 03				jnz	loc_1890		; Jump if not zero
020A:AB1E  B8 FFFF				mov	ax,0FFFFh
020A:AB21			loc_1890:
020A:AB21  A3 4313				mov	word ptr ds:[4313h],ax	; (020A:4313=3)
020A:AB24  EB 1B				jmp	short loc_1893		; (AB41)
020A:AB26			loc_1891:
020A:AB26  3B 06 4315				cmp	ax,word ptr ds:[4315h]	; (020A:4315=52Ah)
020A:AB2A  75 15				jne	loc_1893		; Jump if not equal
020A:AB2C  8B D9				mov	bx,cx
020A:AB2E  26: 8B 00				mov	ax,es:[bx+si]
020A:AB31  3B 06 2D82				cmp	ax,data_383		; (020A:2D82=3233h)
020A:AB35  26: 8B 40 02				mov	ax,es:[bx+si+2]
020A:AB39  75 03				jnz	loc_1892		; Jump if not zero
020A:AB3B  B8 FFFF				mov	ax,0FFFFh
020A:AB3E			loc_1892:
020A:AB3E  A3 4315				mov	word ptr ds:[4315h],ax	; (020A:4315=52Ah)
020A:AB41			loc_1893:
020A:AB41  8B FE				mov	di,si
020A:AB43  03 F1				add	si,cx
020A:AB45  26: 8B 04				mov	ax,es:[si]
020A:AB48  26: A3 0002				mov	word ptr es:[2],ax	; (020A:0002=10h)
020A:AB4C  26: 8B 44 02				mov	ax,es:[si+2]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 356

020A:AB50  26: A3 0004				mov	word ptr es:[4],ax	; (020A:0004=808h)
020A:AB54  26: 89 3E 0006			mov	word ptr es:data_67+2,di	; (020A:0006=3)
020A:AB59  8B C1				mov	ax,cx
020A:AB5B  26: 8B 0E 0000			mov	cx,word ptr es:[0]	; (020A:0000=1828h)
020A:AB60  2B CE				sub	cx,si
020A:AB62  1E					push	ds
020A:AB63  06					push	es
020A:AB64  1F					pop	ds
020A:AB65  FC					cld				; Clear direction
020A:AB66  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:AB68  1F					pop	ds
020A:AB69  26: 29 06 0000			sub	word ptr es:[0],ax	; (020A:0000=1828h)
020A:AB6E  5D					pop	bp
020A:AB6F  5F					pop	di
020A:AB70  5E					pop	si
020A:AB71  5A					pop	dx
020A:AB72  59					pop	cx
020A:AB73  5B					pop	bx
020A:AB74  58					pop	ax
020A:AB75  C3					retn
				sub_158		endp
  
020A:AB76  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_159		proc	near
020A:AB78  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:AB7D  06					push	es
020A:AB7E  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:AB83  1E					push	ds
020A:AB84  56					push	si
020A:AB85  57					push	di
020A:AB86  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:AB8C  75 24				jne	loc_1896		; Jump if not equal
020A:AB8E  E8 ECB8				call	sub_140			; (9849)
020A:AB91  A9 0002				test	ax,2
020A:AB94  74 05				jz	loc_1894		; Jump if zero
020A:AB96  E8 EFCF				call	sub_152			; (9B68)
020A:AB99  EB 1F				jmp	short loc_1897		; (ABBA)
020A:AB9B			loc_1894:
020A:AB9B  A9 0001				test	ax,1
020A:AB9E  74 05				jz	loc_1895		; Jump if zero
020A:ABA0  E8 F039				call	sub_153			; (9BDC)
020A:ABA3  EB 15				jmp	short loc_1897		; (ABBA)
020A:ABA5			loc_1895:
020A:ABA5  A9 0004				test	ax,4
020A:ABA8  74			data_616	db	74h
020A:ABA9  05			data_617	db	5
020A:ABAA  E8 F0A3				call	sub_154			; (9C50)
020A:ABAD  EB 0B				jmp	short loc_1897		; (ABBA)
020A:ABAF  E9 00A0				jmp	loc_1903		; (AC52)
020A:ABB2			loc_1896:
020A:ABB2  E8 EF7F				call	sub_151			; (9B34)
020A:ABB5  2E: 8E 06 4861			mov	es,cs:data_506		; (020A:4861=0D233h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 357

020A:ABBA			loc_1897:
020A:ABBA  BF 0008				mov	di,8
020A:ABBD  26: C7 05 FFFF			mov	word ptr es:[di],0FFFFh
020A:ABC2  26: C7 45 02 FFFF			mov	word ptr es:[di+2],0FFFFh
020A:ABC8  26: C6 45 04 00			mov	byte ptr es:[di+4],0
020A:ABCD  26: C6 45 06 00			mov	byte ptr es:[di+6],0
020A:ABD2  A9 0002				test	ax,2
020A:ABD5  75 0C				jnz	loc_1898		; Jump if not zero
020A:ABD7  A9 0001				test	ax,1
020A:ABDA  75 29				jnz	loc_1900		; Jump if not zero
020A:ABDC  A9 0004				test	ax,4
020A:ABDF  75 46				jnz	loc_1902		; Jump if not zero
020A:ABE1  EB 6F				jmp	short loc_1903		; (AC52)
020A:ABE3			loc_1898:
020A:ABE3  26: C6 45 05 04			mov	byte ptr es:[di+5],4
020A:ABE8  26: C7 06 0000 0012			mov	word ptr es:[0],12h	; (D233:0000=0)
020A:ABEF  BE 6C7B				mov	si,6C7Bh
020A:ABF2  57					push	di
020A:ABF3  BF FFF0				mov	di,0FFF0h
020A:ABF6  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020A:ABFA  75 06				jne	loc_1899		; Jump if not equal
020A:ABFC  B9 000C				mov	cx,0Ch
020A:ABFF  FC					cld				; Clear direction
020A:AC00  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:AC02			loc_1899:
020A:AC02  5F					pop	di
020A:AC03  EB 4D				jmp	short loc_1903		; (AC52)
020A:AC05			loc_1900:
020A:AC05  26: C6 45 05 00			mov	byte ptr es:[di+5],0
020A:AC0A  26: C7 06 0000 000F			mov	word ptr es:[0],0Fh	; (D233:0000=0)
020A:AC11  BE 6C9B				mov	si,6C9Bh
020A:AC14  57					push	di
020A:AC15  BF FFF0				mov	di,0FFF0h
020A:AC18  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020A:AC1C  75 06				jne	loc_1901		; Jump if not equal
020A:AC1E  B9 000C				mov	cx,0Ch
020A:AC21  FC					cld				; Clear direction
020A:AC22  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:AC24			loc_1901:
020A:AC24  5F					pop	di
020A:AC25  EB 2B				jmp	short loc_1903		; (AC52)
020A:AC27			loc_1902:
020A:AC27  26: C6 45 05 08			mov	byte ptr es:[di+5],8
020A:AC2C  51					push	cx
020A:AC2D  B9 0029				mov	cx,29h
020A:AC30  33 C0				xor	ax,ax			; Zero register
020A:AC32  BF 0011				mov	di,11h
020A:AC35  FC					cld				; Clear direction
020A:AC36  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:AC38  59					pop	cx
020A:AC39  26: C7 06 0000 0043			mov	word ptr es:[0],43h	; (D233:0000=0)
020A:AC40  BE 6C8B				mov	si,6C8Bh
020A:AC43  BF FFF0				mov	di,0FFF0h
020A:AC46  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020A:AC4A  75 06				jne	loc_1903		; Jump if not equal
020A:AC4C  B9 000C				mov	cx,0Ch
020A:AC4F  FC					cld				; Clear direction
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 358

020A:AC50  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:AC52			loc_1903:
020A:AC52  26: C7 06 0002 FFFF			mov	word ptr es:[2],0FFFFh	; (D233:0002=0)
020A:AC59  26: C7 06 0004 FFFF			mov	word ptr es:[4],0FFFFh	; (D233:0004=0)
020A:AC60  26: C7 06 0006 0008			mov	word ptr es:[6],8	; (D233:0006=0)
020A:AC67  5F					pop	di
020A:AC68  5E					pop	si
020A:AC69  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:AC6E  5A					pop	dx
020A:AC6F  8E DA				mov	ds,dx
020A:AC71  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:AC76  5A					pop	dx
020A:AC77  75 0A				jnz	loc_1904		; Jump if not zero
020A:AC79  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:AC7E  74 03				je	loc_1904		; Jump if equal
020A:AC80  E8 EEB1				call	sub_151			; (9B34)
020A:AC83			loc_1904:
020A:AC83  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:AC88  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:AC8D  5A					pop	dx
020A:AC8E  8E C2				mov	es,dx
020A:AC90  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:AC95  5A					pop	dx
020A:AC96  75 0A				jnz	loc_1905		; Jump if not zero
020A:AC98  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:AC9D  74 03				je	loc_1905		; Jump if equal
020A:AC9F  E8 EE92				call	sub_151			; (9B34)
020A:ACA2			loc_1905:
020A:ACA2  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:ACA7  C3					retn
				sub_159		endp
  
020A:ACA8  0008[00]				db	8 dup (0)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_160		proc	near
020A:ACB0  53					push	bx
020A:ACB1  52					push	dx
020A:ACB2  56					push	si
020A:ACB3  57					push	di
020A:ACB4  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:ACB9  06					push	es
020A:ACBA  C6 06 42B9 00			mov	byte ptr ds:[42B9h],0	; (D233:42B9=8Ah)
020A:ACBF  F7 C3 FF20				test	bx,0FF20h
020A:ACC3  74 27				jz	loc_1907		; Jump if zero
020A:ACC5  3D FFFD				cmp	ax,0FFFDh
020A:ACC8  72 07				jb	loc_1906		; Jump if below
020A:ACCA  C6 06 2F06 00			mov	byte ptr ds:[2F06h],0	; (D233:2F06=0)
020A:ACCF  EB 1B				jmp	short loc_1907		; (ACEC)
020A:ACD1			loc_1906:
020A:ACD1  F7 06 42CC 0008			test	word ptr ds:[42CCh],8	; (D233:42CC=1C74h)
020A:ACD7  75 13				jnz	loc_1907		; Jump if not zero
020A:ACD9  80 3E 42C5 01			cmp	byte ptr ds:[42C5h],1	; (D233:42C5=5Bh)
020A:ACDE  75 0C				jne	loc_1907		; Jump if not equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 359

020A:ACE0  80 3E 2F06 0F			cmp	byte ptr ds:[2F06h],0Fh	; (D233:2F06=0)
020A:ACE5  77 05				ja	loc_1907		; Jump if above
020A:ACE7  80 0E 42C5 80			or	byte ptr ds:[42C5h],80h	; (D233:42C5=5Bh)
020A:ACEC			loc_1907:
020A:ACEC  8A 0E 2F04				mov	cl,byte ptr ds:[2F04h]	; (D233:2F04=68h)
020A:ACF0  C6 06 2F0B 00			mov	byte ptr ds:[2F0Bh],0	; (D233:2F0B=0C7h)
020A:ACF5  9A 16BF:0FA8		;*		call	far ptr sub_196		;*(16BF:0FA8)
020A:ACF5  9A A8 0F BF 16			db	 9Ah,0A8h, 0Fh,0BFh, 16h
020A:ACFA  73 14				jnc	loc_1908		; Jump if carry=0
020A:ACFC  8B 16 2EFA				mov	dx,word ptr ds:[2EFAh]	; (D233:2EFA=5657h)
020A:AD00  89 16 3796				mov	word ptr ds:[3796h],dx	; (D233:3796=9E02h)
020A:AD04  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (D233:2ECC=1)
020A:AD09  75 05				jnz	loc_1908		; Jump if not zero
020A:AD0B  C6 06 2F0B 01			mov	byte ptr ds:[2F0Bh],1	; (D233:2F0B=0C7h)
020A:AD10			loc_1908:
020A:AD10  80 F9 90				cmp	cl,90h
020A:AD13  75 19				jne	loc_1909		; Jump if not equal
020A:AD15  8B 16 3796				mov	dx,word ptr ds:[3796h]	; (D233:3796=9E02h)
020A:AD19  3B 16 2EF4				cmp	dx,word ptr ds:[2EF4h]	; (D233:2EF4=0E7E9h)
020A:AD1D  75 77				jne	loc_1916		; Jump if not equal
020A:AD1F  9A 16BF:0E90		;*		call	far ptr sub_193		;*(16BF:0E90)
020A:AD1F  9A 90 0E BF 16			db	 9Ah, 90h, 0Eh,0BFh, 16h
020A:AD24  89			data_622	db	89h
020A:AD25  16					push	ss
020A:AD26  F4					hlt				; Halt processor
020A:AD27  2E: 89 16 3796			mov	word ptr cs:[3796h],dx	; (020A:3796=3A01h)
020A:AD2C  EB 68				jmp	short loc_1916		; (AD96)
020A:AD2E			loc_1909:
020A:AD2E  80 F9 26				cmp	cl,26h			; '&'
020A:AD31  75 0F				jne	loc_1910		; Jump if not equal
020A:AD33  8B 16 2EF2				mov	dx,word ptr ds:[2EF2h]	; (D233:2EF2=108Ch)
020A:AD37  9A 16BF:0E90		;*		call	far ptr sub_193		;*(16BF:0E90)
020A:AD37  9A 90 0E BF 16			db	 9Ah, 90h, 0Eh,0BFh, 16h
020A:AD3C  89 16 2EF2				mov	word ptr ds:[2EF2h],dx	; (D233:2EF2=108Ch)
020A:AD40  EB 50				jmp	short loc_1915		; (AD92)
020A:AD42			loc_1910:
020A:AD42  80 F9 2E				cmp	cl,2Eh			; '.'
020A:AD45  75 06				jne	loc_1911		; Jump if not equal
020A:AD47  8B 16 2A3C				mov	dx,word ptr ds:[2A3Ch]	; (D233:2A3C=0F801h)
020A:AD4B  EB 45				jmp	short loc_1915		; (AD92)
020A:AD4D			loc_1911:
020A:AD4D  80 F9 36				cmp	cl,36h			; '6'
020A:AD50  75 06				jne	loc_1912		; Jump if not equal
020A:AD52  8B 16 2EFA				mov	dx,word ptr ds:[2EFAh]	; (D233:2EFA=5657h)
020A:AD56  EB 3A				jmp	short loc_1915		; (AD92)
020A:AD58			loc_1912:
020A:AD58  80 F9 64				cmp	cl,64h			; 'd'
020A:AD5B  75 0F				jne	loc_1913		; Jump if not equal
020A:AD5D  8B 16 2EF6				mov	dx,word ptr ds:[2EF6h]	; (D233:2EF6=600h)
020A:AD61  9A 16BF:0E90		;*		call	far ptr sub_193		;*(16BF:0E90)
020A:AD61  9A 90 0E BF 16			db	 9Ah, 90h, 0Eh,0BFh, 16h
020A:AD66  89 16 2EF6				mov	word ptr ds:[2EF6h],dx	; (D233:2EF6=600h)
020A:AD6A  EB 26				jmp	short loc_1915		; (AD92)
020A:AD6C			loc_1913:
020A:AD6C  80 F9 65				cmp	cl,65h			; 'e'
020A:AD6F  75 0F				jne	loc_1914		; Jump if not equal
020A:AD71  8B 16 2EF8				mov	dx,word ptr ds:[2EF8h]	; (D233:2EF8=5253h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 360

020A:AD75  9A 16BF:0E90		;*		call	far ptr sub_193		;*(16BF:0E90)
020A:AD75  9A 90 0E BF 16			db	 9Ah, 90h, 0Eh,0BFh, 16h
020A:AD7A  89 16 2EF8				mov	word ptr ds:[2EF8h],dx	; (D233:2EF8=5253h)
020A:AD7E  EB 12				jmp	short loc_1915		; (AD92)
020A:AD80			loc_1914:
020A:AD80  80 F9 3E				cmp	cl,3Eh			; '>'
020A:AD83  75 11				jne	loc_1916		; Jump if not equal
020A:AD85  8B 16 2EF4				mov	dx,word ptr ds:[2EF4h]	; (D233:2EF4=0E7E9h)
020A:AD89  9A 16BF:0E90		;*		call	far ptr sub_193		;*(16BF:0E90)
020A:AD89  9A 90 0E BF 16			db	 9Ah, 90h, 0Eh,0BFh, 16h
020A:AD8E  89 16 2EF4				mov	word ptr ds:[2EF4h],dx	; (D233:2EF4=0E7E9h)
020A:AD92			loc_1915:
020A:AD92  89 16 3796				mov	word ptr ds:[3796h],dx	; (D233:3796=9E02h)
020A:AD96			loc_1916:
020A:AD96  A3 37A4				mov	word ptr ds:[37A4h],ax	; (D233:37A4=0B9E8h)
020A:AD99  0B C0				or	ax,ax			; Zero ?
020A:AD9B  75 3B				jnz	loc_1919		; Jump if not zero
020A:AD9D  8A D3				mov	dl,bl
020A:AD9F  80 E2 C7				and	dl,0C7h
020A:ADA2  80 FA 46				cmp	dl,46h			; 'F'
020A:ADA5  75 31				jne	loc_1919		; Jump if not equal
020A:ADA7  C6 06 2A53 02			mov	byte ptr ds:[2A53h],2	; (D233:2A53=0B9h)
020A:ADAC  F6 06 2D8C 80			test	byte ptr ds:[2D8Ch],80h	; (D233:2D8C=0CDh)
020A:ADB1  75 0A				jnz	loc_1917		; Jump if not zero
020A:ADB3  F6 C7 C0				test	bh,0C0h
020A:ADB6  74 05				jz	loc_1917		; Jump if zero
020A:ADB8  9A 16BF:0370		;*		call	far ptr sub_182		;*(16BF:0370)
020A:ADB8  9A 70 03 BF 16			db	 9Ah, 70h, 03h,0BFh, 16h
020A:ADBD			loc_1917:
020A:ADBD  80 3E 2A29 01			cmp	byte ptr ds:[2A29h],1	; (D233:2A29=0FCh)
020A:ADC2  75 0C				jne	loc_1918		; Jump if not equal
020A:ADC4  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (D233:2ECC=1)
020A:ADC9  74 05				jz	loc_1918		; Jump if zero
020A:ADCB  9A 16BF:102C		;*		call	far ptr sub_199		;*(16BF:102C)
020A:ADCB  9A 2C 10 BF 16			db	 9Ah, 2Ch, 10h,0BFh, 16h
020A:ADD0			loc_1918:
020A:ADD0  80 26 42BF FB			and	byte ptr ds:[42BFh],0FBh	; (D233:42BF=2)
020A:ADD5  E9 0435				jmp	loc_1973		; (B20D)
020A:ADD8			loc_1919:
020A:ADD8  C6 06 42B6 00			mov	byte ptr ds:[42B6h],0	; (D233:42B6=4)
020A:ADDD  F6 C3 38				test	bl,38h			; '8'
020A:ADE0  74 33				jz	loc_1922		; Jump if zero
020A:ADE2  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (D233:2ECA=0E9h)
020A:ADE7  75 2C				jnz	loc_1922		; Jump if not zero
020A:ADE9  8A D3				mov	dl,bl
020A:ADEB  80 E2 C7				and	dl,0C7h
020A:ADEE  80 FA 06				cmp	dl,6
020A:ADF1  74 22				je	loc_1922		; Jump if equal
020A:ADF3  80 3E 2F0B 01			cmp	byte ptr ds:[2F0Bh],1	; (D233:2F0B=0C7h)
020A:ADF8  74 16				je	loc_1921		; Jump if equal
020A:ADFA  F7 06 42CC 0080			test	word ptr ds:[42CCh],80h	; (D233:42CC=1C74h)
020A:AE00  75 13				jnz	loc_1922		; Jump if not zero
020A:AE02  39 06 2EC0				cmp	word ptr ds:[2EC0h],ax	; (D233:2EC0=0FBAEh)
020A:AE06  76 02				jbe	loc_1920		; Jump if below or =
020A:AE08  EB 06				jmp	short loc_1921		; (AE10)
020A:AE0A			loc_1920:
020A:AE0A  39 06 2EC2				cmp	word ptr ds:[2EC2h],ax	; (D233:2EC2=0E9E8h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 361

020A:AE0E  73 05				jae	loc_1922		; Jump if above or =
020A:AE10			loc_1921:
020A:AE10  C6 06 42B6 01			mov	byte ptr ds:[42B6h],1	; (D233:42B6=4)
020A:AE15			loc_1922:
020A:AE15  53					push	bx
020A:AE16  8B 1E 3796				mov	bx,word ptr ds:[3796h]	; (D233:3796=9E02h)
020A:AE1A  F7 06 42CC 0008			test	word ptr ds:[42CCh],8	; (D233:42CC=1C74h)
020A:AE20  75			data_624	db	75h
020A:AE21  3C 50				cmp	al,50h			; 'P'
020A:AE23  A1 2A24				mov	ax,word ptr ds:[2A24h]	; (D233:2A24=4B00h)
020A:AE26  3D 0000				cmp	ax,0
020A:AE29  75 03				jne	loc_1923		; Jump if not equal
020A:AE2B  E8 EA4B				call	sub_149			; (9879)
020A:AE2E			loc_1923:
020A:AE2E  3B D8				cmp	bx,ax
020A:AE30  72 26				jb	loc_1925		; Jump if below
020A:AE32  8C C8				mov	ax,cs
020A:AE34  03 06 263F				add	ax,word ptr ds:[263Fh]	; (D233:263F=0E0A3h)
020A:AE38  3B D8				cmp	bx,ax
020A:AE3A  77 1C				ja	loc_1925		; Jump if above
020A:AE3C  F6 06 42C5 80			test	byte ptr ds:[42C5h],80h	; (D233:42C5=5Bh)
020A:AE41  74 15				jz	loc_1925		; Jump if zero
020A:AE43  5E					pop	si
020A:AE44  56					push	si
020A:AE45  8E C3				mov	es,bx
020A:AE47  26: 83 3C 00				cmp	word ptr es:[si],0
020A:AE4B  74 06				je	loc_1924		; Jump if equal
020A:AE4D  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:AE51  75 05				jne	loc_1925		; Jump if not equal
020A:AE53			loc_1924:
020A:AE53  C6 06 2F06 01			mov	byte ptr ds:[2F06h],1	; (D233:2F06=0)
020A:AE58			loc_1925:
020A:AE58  C6 06 42C5 00			mov	byte ptr ds:[42C5h],0	; (D233:42C5=5Bh)
020A:AE5D  58					pop	ax
020A:AE5E  BA 0002				mov	dx,2
020A:AE61  E8 DDC4				call	sub_126			; (8C28)
020A:AE64  9C					pushf				; Push flags
020A:AE65  80 3E 42B6 00			cmp	byte ptr ds:[42B6h],0	; (D233:42B6=4)
020A:AE6A  74 3B				je	loc_1929		; Jump if equal
020A:AE6C  9D					popf				; Pop flags
020A:AE6D  9C					pushf				; Push flags
020A:AE6E  73 0E				jnc	loc_1926		; Jump if carry=0
020A:AE70  26: F6 45 07 20			test	byte ptr es:[di+7],20h	; ' '
020A:AE75  74 07				jz	loc_1926		; Jump if zero
020A:AE77  C6 06 42B6 00			mov	byte ptr ds:[42B6h],0	; (D233:42B6=4)
020A:AE7C  EB 29				jmp	short loc_1929		; (AEA7)
020A:AE7E			loc_1926:
020A:AE7E  9D					popf				; Pop flags
020A:AE7F  5B					pop	bx
020A:AE80  F6 06 2D8C 80			test	byte ptr ds:[2D8Ch],80h	; (D233:2D8C=0CDh)
020A:AE85  75 05				jnz	loc_1927		; Jump if not zero
020A:AE87  9A 16BF:0370		;*		call	far ptr sub_182		;*(16BF:0370)
020A:AE87  9A 70 03 BF 16			db	 9Ah, 70h, 03h,0BFh, 16h
020A:AE8C			loc_1927:
020A:AE8C  80 3E 2A29 01			cmp	byte ptr ds:[2A29h],1	; (D233:2A29=0FCh)
020A:AE91  75 0C				jne	loc_1928		; Jump if not equal
020A:AE93  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (D233:2ECC=1)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 362

020A:AE98  74 05				jz	loc_1928		; Jump if zero
020A:AE9A  9A 16BF:102C		;*		call	far ptr sub_199		;*(16BF:102C)
020A:AE9A  9A 2C 10 BF 16			db	 9Ah, 2Ch, 10h,0BFh, 16h
020A:AE9F			loc_1928:
020A:AE9F  80 26 42BF FB			and	byte ptr ds:[42BFh],0FBh	; (D233:42BF=2)
020A:AEA4  E9 0366				jmp	loc_1973		; (B20D)
020A:AEA7			loc_1929:
020A:AEA7  80 3E 2639 02			cmp	byte ptr ds:[2639h],2	; (D233:2639=0A8h)
020A:AEAC  75 0D				jne	loc_1930		; Jump if not equal
020A:AEAE  F6 06 430B 04			test	byte ptr ds:[430Bh],4	; (D233:430B=6Ah)
020A:AEB3  74 06				jz	loc_1930		; Jump if zero
020A:AEB5  BA 0002				mov	dx,2
020A:AEB8  E8 1509				call	$+150Ch
020A:AEBB			loc_1930:
020A:AEBB  9D					popf				; Pop flags
020A:AEBC  5B					pop	bx
020A:AEBD  72 03				jc	loc_1931		; Jump if carry Set
020A:AEBF  E9 0102				jmp	loc_1946		; (AFC4)
020A:AEC2			loc_1931:
020A:AEC2  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:AEC7  75 22				jnz	loc_1933		; Jump if not zero
020A:AEC9  80 3E 2D93 02			cmp	byte ptr ds:[2D93h],2	; (D233:2D93=0BFh)
020A:AECE  72 25				jb	loc_1935		; Jump if below
020A:AED0  77 0F				ja	loc_1932		; Jump if above
020A:AED2  BE 30B1				mov	si,30B1h
020A:AED5  9A 16BF:1004		;*		call	far ptr sub_197		;*(16BF:1004)
020A:AED5  9A 04 10 BF 16			db	 9Ah, 04h, 10h,0BFh, 16h
020A:AEDA  C6 06 42C0 00			mov	byte ptr ds:[42C0h],0	; (D233:42C0=3)
020A:AEDF  EB 14				jmp	short loc_1935		; (AEF5)
020A:AEE1			loc_1932:
020A:AEE1  BE 30B9				mov	si,30B9h
020A:AEE4  9A 16BF:1004		;*		call	far ptr sub_197		;*(16BF:1004)
020A:AEE4  9A 04 10 BF 16			db	 9Ah, 04h, 10h,0BFh, 16h
020A:AEE9  EB 05				jmp	short loc_1934		; (AEF0)
020A:AEEB			loc_1933:
020A:AEEB  C6 06 42B9 01			mov	byte ptr ds:[42B9h],1	; (D233:42B9=8Ah)
020A:AEF0			loc_1934:
020A:AEF0  C6 06 2A53 02			mov	byte ptr ds:[2A53h],2	; (D233:2A53=0B9h)
020A:AEF5			loc_1935:
020A:AEF5  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0AEh)
020A:AEFA  75 26				jne	loc_1937		; Jump if not equal
020A:AEFC  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:AF01  75 1F				jnz	loc_1937		; Jump if not zero
020A:AF03  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:AF08  74 15				jz	loc_1936		; Jump if zero
020A:AF0A  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:AF0F  75 11				jnz	loc_1937		; Jump if not zero
020A:AF11  80 3E 263D 04			cmp	byte ptr ds:[263Dh],4	; (D233:263D=0E0h)
020A:AF16  76 0A				jbe	loc_1937		; Jump if below or =
020A:AF18  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020A:AF1D  75 03				jnz	loc_1937		; Jump if not zero
020A:AF1F			loc_1936:
020A:AF1F  E9 0106				jmp	loc_1950		; (B028)
020A:AF22			loc_1937:
020A:AF22  26: F6 45 07 10			test	byte ptr es:[di+7],10h
020A:AF27  74 6A				jz	loc_1944		; Jump if zero
020A:AF29  26: 8A 65 04				mov	ah,es:[di+4]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 363

020A:AF2D  80 E4 3F				and	ah,3Fh			; '?'
020A:AF30  8A C7				mov	al,bh
020A:AF32  24 F0				and	al,0F0h
020A:AF34  A8 20				test	al,20h			; ' '
020A:AF36  74 49				jz	loc_1942		; Jump if zero
020A:AF38  26: 8B 4D 08				mov	cx,es:[di+8]
020A:AF3C  83 F9 0A				cmp	cx,0Ah
020A:AF3F  73 4F				jae	loc_1943		; Jump if above or =
020A:AF41  3C F0				cmp	al,0F0h
020A:AF43  75 08				jne	loc_1938		; Jump if not equal
020A:AF45  26: C7 45 08 0008			mov	word ptr es:[di+8],8
020A:AF4B  EB 28				jmp	short loc_1941		; (AF75)
020A:AF4D			loc_1938:
020A:AF4D  83 F9 08				cmp	cx,8
020A:AF50  73 3E				jae	loc_1943		; Jump if above or =
020A:AF52  3C E0				cmp	al,0E0h
020A:AF54  75 08				jne	loc_1939		; Jump if not equal
020A:AF56  26: C7 45 08 0006			mov	word ptr es:[di+8],6
020A:AF5C  EB 17				jmp	short loc_1941		; (AF75)
020A:AF5E			loc_1939:
020A:AF5E  83 F9 04				cmp	cx,4
020A:AF61  73 2D				jae	loc_1943		; Jump if above or =
020A:AF63  3C B0				cmp	al,0B0h
020A:AF65  75 08				jne	loc_1940		; Jump if not equal
020A:AF67  26: C7 45 08 0004			mov	word ptr es:[di+8],4
020A:AF6D  EB 06				jmp	short loc_1941		; (AF75)
020A:AF6F			loc_1940:
020A:AF6F  26: C7 45 08 0002			mov	word ptr es:[di+8],2
020A:AF75			loc_1941:
020A:AF75  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020A:AF7A  26: 80 4D 04 02			or	byte ptr es:[di+4],2
020A:AF7F  EB 0F				jmp	short loc_1943		; (AF90)
020A:AF81			loc_1942:
020A:AF81  80 FC 01				cmp	ah,1
020A:AF84  75 0A				jne	loc_1943		; Jump if not equal
020A:AF86  3C 50				cmp	al,50h			; 'P'
020A:AF88  75 06				jne	loc_1943		; Jump if not equal
020A:AF8A  26: C7 45 08 000A			mov	word ptr es:[di+8],0Ah
020A:AF90			loc_1943:
020A:AF90  E9 00FC				jmp	loc_1954		; (B08F)
020A:AF93			loc_1944:
020A:AF93  F6 C7 20				test	bh,20h			; ' '
020A:AF96  75 F8				jnz	loc_1943		; Jump if not zero
020A:AF98  26: 8A 4D 04				mov	cl,es:[di+4]
020A:AF9C  80 E1 3F				and	cl,3Fh			; '?'
020A:AF9F  80 F9 21				cmp	cl,21h			; '!'
020A:AFA2  75 1D				jne	loc_1945		; Jump if not equal
020A:AFA4  26: 45F6		data_631	dw	45F6h			; Data table (indexed access)
020A:AFA7  05 7502				add	ax,7502h
020A:AFAA  16					push	ss
020A:AFAB  26: 83 7D 08 02			cmp	word ptr es:[di+8],2
020A:AFB0  72 0F				jb	loc_1945		; Jump if below
020A:AFB2  26: 83 65 08 FE			and	word ptr es:[di+8],0FFFEh
020A:AFB7  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020A:AFBC  26: 80 4D 04 22			or	byte ptr es:[di+4],22h	; '"'
020A:AFC1			loc_1945:
020A:AFC1  E9 00CB				jmp	loc_1954		; (B08F)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 364

020A:AFC4			loc_1946:
020A:AFC4  BF 472B				mov	di,472Bh
020A:AFC7  A1 3796				mov	ax,word ptr ds:[3796h]	; (D233:3796=9E02h)
020A:AFCA  89 05				mov	[di],ax
020A:AFCC  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (D233:37A4=0B9E8h)
020A:AFCF  89 45 02				mov	[di+2],ax
020A:AFD2  C6 45 04 01				mov	byte ptr [di+4],1
020A:AFD6  C6 45 05 04				mov	byte ptr [di+5],4
020A:AFDA  80 3E 14AD 01			cmp	byte ptr ds:[14ADh],1	; (D233:14AD=4)
020A:AFDF  77 04				ja	loc_1947		; Jump if above
020A:AFE1  80 4D 05 01				or	byte ptr [di+5],1
020A:AFE5			loc_1947:
020A:AFE5  C7 45 08 0001			mov	word ptr [di+8],1
020A:AFEA  C7 45 06 0000			mov	word ptr [di+6],0
020A:AFEF  80 4D 07 10				or	byte ptr [di+7],10h
020A:AFF3  F6 C7 20				test	bh,20h			; ' '
020A:AFF6  74 1E				jz	loc_1949		; Jump if zero
020A:AFF8  C7 45 08 0002			mov	word ptr [di+8],2
020A:AFFD  C6 45 04 02				mov	byte ptr [di+4],2
020A:B001  F6 06 2ECA 01			test	byte ptr ds:[2ECAh],1	; (D233:2ECA=0E9h)
020A:B006  75 05				jnz	loc_1948		; Jump if not zero
020A:B008  F6 C7 10				test	bh,10h
020A:B00B  74 09				jz	loc_1949		; Jump if zero
020A:B00D			loc_1948:
020A:B00D  C7 45 08 0004			mov	word ptr [di+8],4
020A:B012  C6 45 04 04				mov	byte ptr [di+4],4
020A:B016			loc_1949:
020A:B016  E8 F897				call	sub_157			; (A8B0)
020A:B019  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (D233:0006=0)
020A:B01E  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0AEh)
020A:B023  74 03				je	loc_1950		; Jump if equal
020A:B025  E9 019E				jmp	loc_1971		; (B1C6)
020A:B028			loc_1950:
020A:B028  C6 06 42B9 01			mov	byte ptr ds:[42B9h],1	; (D233:42B9=8Ah)
020A:B02D  C6 06 2A53 02			mov	byte ptr ds:[2A53h],2	; (D233:2A53=0B9h)
020A:B032  80 0E 42BF 10			or	byte ptr ds:[42BFh],10h	; (D233:42BF=2)
020A:B037  80 26 42BF BF			and	byte ptr ds:[42BFh],0BFh	; (D233:42BF=2)
020A:B03C  26: 80 65 07 EF			and	byte ptr es:[di+7],0EFh
020A:B041  9A 16BF:0370		;*		call	far ptr sub_182		;*(16BF:0370)
020A:B041  9A 70 03 BF 16			db	 9Ah, 70h, 03h,0BFh, 16h
020A:B046  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (D233:2ECC=1)
020A:B04B  74 07				jz	loc_1951		; Jump if zero
020A:B04D  9A 16BF:102C		;*		call	far ptr sub_199		;*(16BF:102C)
020A:B04D  9A 2C 10 BF 16			db	 9Ah, 2Ch, 10h,0BFh, 16h
020A:B052  EB 21				jmp	short loc_1953		; (B075)
020A:B054			loc_1951:
020A:B054  B0 53				mov	al,53h			; 'S'
020A:B056  9A 16BF:0FA8		;*		call	far ptr sub_196		;*(16BF:0FA8)
020A:B056  9A A8 0F BF 16			db	 9Ah,0A8h, 0Fh,0BFh, 16h
020A:B05B  72 02				jc	loc_1952		; Jump if carry Set
020A:B05D  B0 44				mov	al,44h			; 'D'
020A:B05F			loc_1952:
020A:B05F  0A 06 2EB8				or	al,byte ptr ds:[2EB8h]	; (D233:2EB8=7)
020A:B063  3E: 88 46 00				mov	ds:[bp],al
020A:B067  45					inc	bp
020A:B068  B8 3A53				mov	ax,3A53h
020A:B06B  0A 06 2EB8				or	al,byte ptr ds:[2EB8h]	; (D233:2EB8=7)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 365

020A:B06F  3E: 89 46 00				mov	ds:[bp],ax
020A:B073  45					inc	bp
020A:B074  45					inc	bp
020A:B075			loc_1953:
020A:B075  3E: C6 46 00 5B			mov	byte ptr ds:[bp],5Bh	; '['
020A:B07A  45					inc	bp
020A:B07B  26: 8B 45 02				mov	ax,es:[di+2]
020A:B07F  53					push	bx
020A:B080  9A 16BF:0088		;*		call	far ptr sub_174		;*(16BF:0088)
020A:B080  9A 88 00 BF 16			db	 9Ah, 88h, 00h,0BFh, 16h
020A:B085  5B					pop	bx
020A:B086  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:B08B  45					inc	bp
020A:B08C  E9 0134				jmp	loc_1970		; (B1C3)
020A:B08F			loc_1954:
020A:B08F  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0AEh)
020A:B094  75 32				jne	loc_1957		; Jump if not equal
020A:B096  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:B09B  75 2B				jnz	loc_1957		; Jump if not zero
020A:B09D  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
020A:B0A2  75 24				jnz	loc_1957		; Jump if not zero
020A:B0A4  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:B0A9  75 1D				jnz	loc_1957		; Jump if not zero
020A:B0AB  26: 8B 05				mov	ax,es:[di]
020A:B0AE  3B 06 2D82				cmp	ax,word ptr ds:[2D82h]	; (D233:2D82=0E865h)
020A:B0B2  72 11				jb	loc_1956		; Jump if below
020A:B0B4  77 0A				ja	loc_1955		; Jump if above
020A:B0B6  26: 8B 45 02				mov	ax,es:[di+2]
020A:B0BA  3B 06 2D84				cmp	ax,word ptr ds:[2D84h]	; (D233:2D84=8E4h)
020A:B0BE  72 05				jb	loc_1956		; Jump if below
020A:B0C0			loc_1955:
020A:B0C0  E8 1875				call	$+1878h
020A:B0C3  72 03				jc	loc_1957		; Jump if carry Set
020A:B0C5			loc_1956:
020A:B0C5  E9 FF60				jmp	loc_1950		; (B028)
020A:B0C8			loc_1957:
020A:B0C8  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:B0CD  75 5E				jnz	loc_1964		; Jump if not zero
020A:B0CF  F6 06 2D8C 40			test	byte ptr ds:[2D8Ch],40h	; (D233:2D8C=0CDh) '@'
020A:B0D4  74 07				jz	loc_1958		; Jump if zero
020A:B0D6  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
020A:B0DB  74 50				jz	loc_1964		; Jump if zero
020A:B0DD			loc_1958:
020A:B0DD  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:B0E2  74 0B				jz	loc_1960		; Jump if zero
020A:B0E4  F6 06 2D8C 80			test	byte ptr ds:[2D8Ch],80h	; (D233:2D8C=0CDh)
020A:B0E9  75 02				jnz	loc_1959		; Jump if not zero
020A:B0EB  EB 40				jmp	short loc_1964		; (B12D)
020A:B0ED			loc_1959:
020A:B0ED  EB 43				jmp	short loc_1965		; (B132)
020A:B0EF			loc_1960:
020A:B0EF  F6 C7 C0				test	bh,0C0h
020A:B0F2  74 3E				jz	loc_1965		; Jump if zero
020A:B0F4  26: 8A 45 04				mov	al,es:[di+4]
020A:B0F8  24 3F				and	al,3Fh			; '?'
020A:B0FA  8A E7				mov	ah,bh
020A:B0FC  80 E4 F0				and	ah,0F0h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 366

020A:B0FF  80 FC 40				cmp	ah,40h			; '@'
020A:B102  75 0A				jne	loc_1961		; Jump if not equal
020A:B104  3C 01				cmp	al,1
020A:B106  74 2A				je	loc_1965		; Jump if equal
020A:B108  3C 21				cmp	al,21h			; '!'
020A:B10A  74 26				je	loc_1965		; Jump if equal
020A:B10C  EB 1F				jmp	short loc_1964		; (B12D)
020A:B10E			loc_1961:
020A:B10E  80 FC A0				cmp	ah,0A0h
020A:B111  75 11				jne	loc_1962		; Jump if not equal
020A:B113  F6 06 2ECA 01			test	byte ptr ds:[2ECAh],1	; (D233:2ECA=0E9h)
020A:B118  75 0F				jnz	loc_1963		; Jump if not zero
020A:B11A  3C 02				cmp	al,2
020A:B11C  74 14				je	loc_1965		; Jump if equal
020A:B11E  3C 22				cmp	al,22h			; '"'
020A:B120  74 10				je	loc_1965		; Jump if equal
020A:B122  EB 09				jmp	short loc_1964		; (B12D)
020A:B124			loc_1962:
020A:B124  80 FC B0				cmp	ah,0B0h
020A:B127  75 04				jne	loc_1964		; Jump if not equal
020A:B129			loc_1963:
020A:B129  3C 04				cmp	al,4
020A:B12B  74 05				je	loc_1965		; Jump if equal
020A:B12D			loc_1964:
020A:B12D  9A 16BF:0370		;*		call	far ptr sub_182		;*(16BF:0370)
020A:B12D  9A 70 03 BF 16			db	 9Ah, 70h, 03h,0BFh, 16h
020A:B132			loc_1965:
020A:B132  80 3E 2A29 01			cmp	byte ptr ds:[2A29h],1	; (D233:2A29=0FCh)
020A:B137  75 3B				jne	loc_1967		; Jump if not equal
020A:B139  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (D233:2ECC=1)
020A:B13E  74 07				jz	loc_1966		; Jump if zero
020A:B140  9A 16BF:102C		;*		call	far ptr sub_199		;*(16BF:102C)
020A:B140  9A 2C 10 BF 16			db	 9Ah, 2Ch, 10h,0BFh, 16h
020A:B145  EB 2D				jmp	short loc_1967		; (B174)
020A:B147			loc_1966:
020A:B147  80 3E 2A26 01			cmp	byte ptr ds:[2A26h],1	; (D233:2A26=0CDh)
020A:B14C  74 26				je	loc_1967		; Jump if equal
020A:B14E  80 3E 2D93 00			cmp	byte ptr ds:[2D93h],0	; (D233:2D93=0BFh)
020A:B153  75 5C				jne	loc_1969		; Jump if not equal
020A:B155  9A 16BF:0FA8		;*		call	far ptr sub_196		;*(16BF:0FA8)
020A:B155  9A A8 0F BF 16			db	 9Ah,0A8h, 0Fh,0BFh, 16h
020A:B15A  73 18				jnc	loc_1967		; Jump if carry=0
020A:B15C  B0 53				mov	al,53h			; 'S'
020A:B15E  0A 06 2EB8				or	al,byte ptr ds:[2EB8h]	; (D233:2EB8=7)
020A:B162  3E: 88 46 00				mov	ds:[bp],al
020A:B166  45					inc	bp
020A:B167  3E: 88 46 00				mov	ds:[bp],al
020A:B16B  45					inc	bp
020A:B16C  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:B171  45					inc	bp
020A:B172  EB 3D				jmp	short loc_1969		; (B1B1)
020A:B174			loc_1967:
020A:B174  80 3E 2D93 00			cmp	byte ptr ds:[2D93h],0	; (D233:2D93=0BFh)
020A:B179  75 36				jne	loc_1969		; Jump if not equal
020A:B17B  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:B180  74 2F				jz	loc_1969		; Jump if zero
020A:B182  80 3E 2F04 90			cmp	byte ptr ds:[2F04h],90h	; (D233:2F04=68h)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 367

020A:B187  75 28				jne	loc_1969		; Jump if not equal
020A:B189  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0AEh)
020A:B18E  75 21				jne	loc_1969		; Jump if not equal
020A:B190  B0 53				mov	al,53h			; 'S'
020A:B192  9A 16BF:0FA8		;*		call	far ptr sub_196		;*(16BF:0FA8)
020A:B192  9A A8 0F BF 16			db	 9Ah,0A8h, 0Fh,0BFh, 16h
020A:B197  72 02				jc	loc_1968		; Jump if carry Set
020A:B199  B0 44				mov	al,44h			; 'D'
020A:B19B			loc_1968:
020A:B19B  0A 06 2EB8				or	al,byte ptr ds:[2EB8h]	; (D233:2EB8=7)
020A:B19F  3E: 88 46 00				mov	ds:[bp],al
020A:B1A3  45					inc	bp
020A:B1A4  B8 3A53				mov	ax,3A53h
020A:B1A7  0A 06 2EB8				or	al,byte ptr ds:[2EB8h]	; (D233:2EB8=7)
020A:B1AB  3E: 89 46 00				mov	ds:[bp],ax
020A:B1AF  45					inc	bp
020A:B1B0  45					inc	bp
020A:B1B1			loc_1969:
020A:B1B1  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0AEh)
020A:B1B6  75 0E				jne	loc_1971		; Jump if not equal
020A:B1B8  B9 000A				mov	cx,0Ah
020A:B1BB  E8 D77E				call	sub_124			; (893C)
020A:B1BE  80 26 42BF BF			and	byte ptr ds:[42BFh],0BFh	; (D233:42BF=2)
020A:B1C3			loc_1970:
020A:B1C3  E8 DFF2				call	sub_129			; (91B8)
020A:B1C6			loc_1971:
020A:B1C6  89 3E 2A8F				mov	word ptr ds:[2A8Fh],di	; (D233:2A8F=0B4F0h)
020A:B1CA  83 06 2A8F 04			add	word ptr ds:[2A8Fh],4	; (D233:2A8F=0B4F0h)
020A:B1CF  80 3E 263D 06			cmp	byte ptr ds:[263Dh],6	; (D233:263D=0E0h)
020A:B1D4  72 07				jb	loc_1972		; Jump if below
020A:B1D6  80 3E 2638 04			cmp	byte ptr ds:[2638h],4	; (D233:2638=0A3h)
020A:B1DB  72 30				jb	loc_1973		; Jump if below
020A:B1DD			loc_1972:
020A:B1DD  A1 2DA8				mov	ax,word ptr ds:[2DA8h]	; (D233:2DA8=0FABFh)
020A:B1E0  A3 2DAC				mov	word ptr ds:[2DACh],ax	; (D233:2DAC=3B3Ch)
020A:B1E3  A1 2DAA				mov	ax,word ptr ds:[2DAAh]	; (D233:2DAA=0AC63h)
020A:B1E6  A3 2DAE				mov	word ptr ds:[2DAEh],ax	; (D233:2DAE=874h)
020A:B1E9  A1 2DA4				mov	ax,word ptr ds:[2DA4h]	; (D233:2DA4=0C00Ah)
020A:B1EC  A3 2DA8				mov	word ptr ds:[2DA8h],ax	; (D233:2DA8=0FABFh)
020A:B1EF  A1 2DA6				mov	ax,word ptr ds:[2DA6h]	; (D233:2DA6=2F74h)
020A:B1F2  A3 2DAA				mov	word ptr ds:[2DAAh],ax	; (D233:2DAA=0AC63h)
020A:B1F5  A1 37A2				mov	ax,word ptr ds:[37A2h]	; (D233:37A2=0CFh)
020A:B1F8  A3 2DA4				mov	word ptr ds:[2DA4h],ax	; (D233:2DA4=0C00Ah)
020A:B1FB  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (D233:37A4=0B9E8h)
020A:B1FE  A3 2DA6				mov	word ptr ds:[2DA6h],ax	; (D233:2DA6=2F74h)
020A:B201  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0AEh)
020A:B206  74 05				je	loc_1973		; Jump if equal
020A:B208  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:B20D			loc_1973:
020A:B20D  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B212  5A					pop	dx
020A:B213  8E C2				mov	es,dx
020A:B215  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:B21A  5A					pop	dx
020A:B21B  75 0A				jnz	loc_1974		; Jump if not zero
020A:B21D  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:B222  74 03				je	loc_1974		; Jump if equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 368

020A:B224  E8 E90D				call	sub_151			; (9B34)
020A:B227			loc_1974:
020A:B227  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B22C  5F					pop	di
020A:B22D  5E					pop	si
020A:B22E  5A					pop	dx
020A:B22F  5B					pop	bx
020A:B230  C3					retn
				sub_160		endp
  
020A:B231  87 DB				xchg	bx,bx
020A:B233  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_161		proc	near
020A:B234  50					push	ax
020A:B235  52					push	dx
020A:B236  56					push	si
020A:B237  57					push	di
020A:B238  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:B23D  06					push	es
020A:B23E  51					push	cx
020A:B23F  C6 06 42B9 00			mov	byte ptr ds:[42B9h],0	; (D233:42B9=8Ah)
020A:B244  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (D233:2A75=7) 'O'
020A:B249  74 05				je	loc_1975		; Jump if equal
020A:B24B  BA 0001				mov	dx,1
020A:B24E  EB 03				jmp	short loc_1976		; (B253)
020A:B250			loc_1975:
020A:B250  BA 0004				mov	dx,4
020A:B253			loc_1976:
020A:B253  BF 0000				mov	di,0
020A:B256  80 3E 2639 02			cmp	byte ptr ds:[2639h],2	; (D233:2639=0A8h)
020A:B25B  75 37				jne	loc_1980		; Jump if not equal
020A:B25D  83 FA 04				cmp	dx,4
020A:B260  74 28				je	loc_1978		; Jump if equal
020A:B262  F6 06 430B 02			test	byte ptr ds:[430Bh],2	; (D233:430B=6Ah)
020A:B267  74 2B				jz	loc_1980		; Jump if zero
020A:B269  F6 06 430B 80			test	byte ptr ds:[430Bh],80h	; (D233:430B=6Ah)
020A:B26E  74 21				jz	loc_1979		; Jump if zero
020A:B270  3B 1E 2D82				cmp	bx,word ptr ds:[2D82h]	; (D233:2D82=0E865h)
020A:B274  75 1B				jne	loc_1979		; Jump if not equal
020A:B276  52					push	dx
020A:B277  8B 16 2D84				mov	dx,word ptr ds:[2D84h]	; (D233:2D84=8E4h)
020A:B27B  2B D0				sub	dx,ax
020A:B27D  73 02				jnc	loc_1977		; Jump if carry=0
020A:B27F  F7 D2				not	dx
020A:B281			loc_1977:
020A:B281  81 FA 0080				cmp	dx,80h
020A:B285  5A					pop	dx
020A:B286  72 0C				jc	loc_1980		; Jump if carry Set
020A:B288  EB 07				jmp	short loc_1979		; (B291)
020A:B28A			loc_1978:
020A:B28A  F6 06 430B 01			test	byte ptr ds:[430Bh],1	; (D233:430B=6Ah)
020A:B28F  74 03				jz	loc_1980		; Jump if zero
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 369

020A:B291			loc_1979:
020A:B291  E8 1130				call	$+1133h
020A:B294			loc_1980:
020A:B294  E8 D991				call	sub_126			; (8C28)
020A:B297  73 03				jnc	loc_1981		; Jump if carry=0
020A:B299  E9 011B				jmp	loc_1996		; (B3B7)
020A:B29C			loc_1981:
020A:B29C  83 3E 2A84 00			cmp	word ptr ds:[2A84h],0	; (D233:2A84=0B8h)
020A:B2A1  75 35				jne	loc_1984		; Jump if not equal
020A:B2A3  06					push	es
020A:B2A4  57					push	di
020A:B2A5  50					push	ax
020A:B2A6  8E 06 2D82				mov	es,word ptr ds:[2D82h]	; (D233:2D82=0E865h)
020A:B2AA  8B 3E 2D84				mov	di,word ptr ds:[2D84h]	; (D233:2D84=8E4h)
020A:B2AE  26: 80 3D EB				cmp	byte ptr es:[di],0EBh
020A:B2B2  75 21				jne	loc_1983		; Jump if not equal
020A:B2B4  2B 06 2D84				sub	ax,word ptr ds:[2D84h]	; (D233:2D84=8E4h)
020A:B2B8  3D 0003				cmp	ax,3
020A:B2BB  77 18				ja	loc_1983		; Jump if above
020A:B2BD  3D 0002				cmp	ax,2
020A:B2C0  74 09				je	loc_1982		; Jump if equal
020A:B2C2  26: 80 7D 02 90			cmp	byte ptr es:[di+2],90h
020A:B2C7  74 02				je	loc_1982		; Jump if equal
020A:B2C9  EB 0A				jmp	short loc_1983		; (B2D5)
020A:B2CB			loc_1982:
020A:B2CB  58					pop	ax
020A:B2CC  5F					pop	di
020A:B2CD  07					pop	es
020A:B2CE  C6 06 2A75 F5			mov	byte ptr ds:[2A75h],0F5h	; (D233:2A75=7)
020A:B2D3  EB 47				jmp	short loc_1987		; (B31C)
020A:B2D5			loc_1983:
020A:B2D5  58					pop	ax
020A:B2D6  5F					pop	di
020A:B2D7  07					pop	es
020A:B2D8			loc_1984:
020A:B2D8  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0AEh)
020A:B2DD  74 3D				je	loc_1987		; Jump if equal
020A:B2DF  BF 472B				mov	di,472Bh
020A:B2E2  A1 37A2				mov	ax,word ptr ds:[37A2h]	; (D233:37A2=0CFh)
020A:B2E5  89 05				mov	[di],ax
020A:B2E7  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (D233:37A4=0B9E8h)
020A:B2EA  89 45 02				mov	[di+2],ax
020A:B2ED  32 C9				xor	cl,cl			; Zero register
020A:B2EF  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (D233:2A75=7) 'O'
020A:B2F4  74 03				je	loc_1985		; Jump if equal
020A:B2F6  E9 0095				jmp	loc_1993		; (B38E)
020A:B2F9			loc_1985:
020A:B2F9  C6 45 04 00				mov	byte ptr [di+4],0
020A:B2FD  C6 45 05 08				mov	byte ptr [di+5],8
020A:B301  80 3E 14AD 01			cmp	byte ptr ds:[14ADh],1	; (D233:14AD=4)
020A:B306  77 04				ja	loc_1986		; Jump if above
020A:B308  C6 45 05 09				mov	byte ptr [di+5],9
020A:B30C			loc_1986:
020A:B30C  C6 45 06 00				mov	byte ptr [di+6],0
020A:B310  C6 45 32 00				mov	byte ptr [di+32h],0
020A:B314  C7 45 07 0000			mov	word ptr [di+7],0
020A:B319  E9 0089				jmp	loc_1995		; (B3A5)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 370

020A:B31C			loc_1987:
020A:B31C  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (D233:37A4=0B9E8h)
020A:B31F  2B 06 2D84				sub	ax,word ptr ds:[2D84h]	; (D233:2D84=8E4h)
020A:B323  A3 2ED0				mov	word ptr ds:[2ED0h],ax	; (D233:2ED0=21CDh)
020A:B326  C7 06 2ED2 0000			mov	word ptr ds:[2ED2h],0	; (D233:2ED2=892Eh)
020A:B32C  3E: C6 46 00 24			mov	byte ptr ds:[bp],24h	; '$'
020A:B331  45					inc	bp
020A:B332  E8 1BC3				call	$+1BC6h
020A:B335  C6 06 42B9 01			mov	byte ptr ds:[42B9h],1	; (D233:42B9=8Ah)
020A:B33A  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (D233:37A4=0B9E8h)
020A:B33D  2B 06 2A40				sub	ax,word ptr ds:[2A40h]	; (D233:2A40=3306h)
020A:B341  3D 000F				cmp	ax,0Fh
020A:B344  77 02				ja	loc_1988		; Jump if above
020A:B346  EB 04				jmp	short loc_1989		; (B34C)
020A:B348			loc_1988:
020A:B348  59					pop	cx
020A:B349  E9 027F				jmp	loc_2023		; (B5CB)
020A:B34C			loc_1989:
020A:B34C  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (D233:2A75=7) 'O'
020A:B351  74 37				je	loc_1992		; Jump if equal
020A:B353  A1 2D82				mov	ax,word ptr ds:[2D82h]	; (D233:2D82=0E865h)
020A:B356  3B 06 37A2				cmp	ax,word ptr ds:[37A2h]	; (D233:37A2=0CFh)
020A:B35A  75 2E				jne	loc_1992		; Jump if not equal
020A:B35C  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (D233:37A4=0B9E8h)
020A:B35F  3D 0010				cmp	ax,10h
020A:B362  76 03				jbe	loc_1990		; Jump if below or =
020A:B364  2D 0010				sub	ax,10h
020A:B367			loc_1990:
020A:B367  3B 06 2A40				cmp	ax,word ptr ds:[2A40h]	; (D233:2A40=3306h)
020A:B36B  73 1D				jae	loc_1992		; Jump if above or =
020A:B36D  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (D233:37A4=0B9E8h)
020A:B370  3B 06 2E7F				cmp	ax,word ptr ds:[2E7Fh]	; (D233:2E7F=0E807h)
020A:B374  76 14				jbe	loc_1992		; Jump if below or =
020A:B376  3D 0280				cmp	ax,280h
020A:B379  76 0C				jbe	loc_1991		; Jump if below or =
020A:B37B  2D 0280				sub	ax,280h
020A:B37E  3B 06 2D84				cmp	ax,word ptr ds:[2D84h]	; (D233:2D84=8E4h)
020A:B382  77 06				ja	loc_1992		; Jump if above
020A:B384  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (D233:37A4=0B9E8h)
020A:B387			loc_1991:
020A:B387  A3 2E7F				mov	word ptr ds:[2E7Fh],ax	; (D233:2E7F=0E807h)
020A:B38A			loc_1992:
020A:B38A  59					pop	cx
020A:B38B  E9 023D				jmp	loc_2023		; (B5CB)
020A:B38E			loc_1993:
020A:B38E  C6 45 04 00				mov	byte ptr [di+4],0
020A:B392  C6 45 05 00				mov	byte ptr [di+5],0
020A:B396  80 3E 14AD 01			cmp	byte ptr ds:[14ADh],1	; (D233:14AD=4)
020A:B39B  77 04				ja	loc_1994		; Jump if above
020A:B39D  C6 45 05 01				mov	byte ptr [di+5],1
020A:B3A1			loc_1994:
020A:B3A1  C6 45 06 00				mov	byte ptr [di+6],0
020A:B3A5			loc_1995:
020A:B3A5  E8 F508				call	sub_157			; (A8B0)
020A:B3A8  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (D233:0006=0)
020A:B3AD  89 3E 42BC				mov	word ptr ds:[42BCh],di	; (D233:42BC=0C1FFh)
020A:B3B1  E8 D078				call	sub_113			; (842C)
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 371

020A:B3B4  E9 00B0				jmp	loc_2005		; (B467)
020A:B3B7			loc_1996:
020A:B3B7  89 3E 42BC				mov	word ptr ds:[42BCh],di	; (D233:42BC=0C1FFh)
020A:B3BB  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:B3C0  74 0A				jz	loc_1997		; Jump if zero
020A:B3C2  C6 06 2EB7 01			mov	byte ptr ds:[2EB7h],1	; (D233:2EB7=0)
020A:B3C7  C6 06 42B7 01			mov	byte ptr ds:[42B7h],1	; (D233:42B7=0EBh)
020A:B3CC			loc_1997:
020A:B3CC  B9 003B				mov	cx,3Bh
020A:B3CF  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (D233:2A75=7) 'O'
020A:B3D4  74 3A				je	loc_2000		; Jump if equal
020A:B3D6  B9 0007				mov	cx,7
020A:B3D9  A1 2D82				mov	ax,word ptr ds:[2D82h]	; (D233:2D82=0E865h)
020A:B3DC  3B 06 37A2				cmp	ax,word ptr ds:[37A2h]	; (D233:37A2=0CFh)
020A:B3E0  75 2E				jne	loc_2000		; Jump if not equal
020A:B3E2  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (D233:37A4=0B9E8h)
020A:B3E5  3D 0010				cmp	ax,10h
020A:B3E8  76 03				jbe	loc_1998		; Jump if below or =
020A:B3EA  2D 0010				sub	ax,10h
020A:B3ED			loc_1998:
020A:B3ED  3B 06 2A40				cmp	ax,word ptr ds:[2A40h]	; (D233:2A40=3306h)
020A:B3F1  73 1D				jae	loc_2000		; Jump if above or =
020A:B3F3  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (D233:37A4=0B9E8h)
020A:B3F6  3B 06 2E7F				cmp	ax,word ptr ds:[2E7Fh]	; (D233:2E7F=0E807h)
020A:B3FA  76 14				jbe	loc_2000		; Jump if below or =
020A:B3FC  3D 0280				cmp	ax,280h
020A:B3FF  76 0C				jbe	loc_1999		; Jump if below or =
020A:B401  2D 0280				sub	ax,280h
020A:B404  3B 06 2D84				cmp	ax,word ptr ds:[2D84h]	; (D233:2D84=8E4h)
020A:B408  77 06				ja	loc_2000		; Jump if above
020A:B40A  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (D233:37A4=0B9E8h)
020A:B40D			loc_1999:
020A:B40D  A3 2E7F				mov	word ptr ds:[2E7Fh],ax	; (D233:2E7F=0E807h)
020A:B410			loc_2000:
020A:B410  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0AEh)
020A:B415  75 50				jne	loc_2005		; Jump if not equal
020A:B417  80 3E 3BEA 01			cmp	byte ptr ds:[3BEAh],1	; (D233:3BEA=3)
020A:B41C  75 22				jne	loc_2003		; Jump if not equal
020A:B41E  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (D233:2A75=7) 'O'
020A:B423  74 0C				je	loc_2001		; Jump if equal
020A:B425  26: 8A 45 05				mov	al,es:[di+5]
020A:B429  24 30				and	al,30h			; '0'
020A:B42B  3C 30				cmp	al,30h			; '0'
020A:B42D  75 11				jne	loc_2003		; Jump if not equal
020A:B42F  EB 07				jmp	short loc_2002		; (B438)
020A:B431			loc_2001:
020A:B431  26: F6 45 04 80			test	byte ptr es:[di+4],80h
020A:B436  74 08				jz	loc_2003		; Jump if zero
020A:B438			loc_2002:
020A:B438  BE 3091				mov	si,3091h
020A:B43B  9A 16BF:1004		;*		call	far ptr sub_197		;*(16BF:1004)
020A:B43B  9A 04 10 BF 16			db	 9Ah, 04h, 10h,0BFh, 16h
020A:B440			loc_2003:
020A:B440  E8 D4F9				call	sub_124			; (893C)
020A:B443  81 FD 27CA				cmp	bp,27CAh
020A:B447  72 1E				jb	loc_2005		; Jump if below
020A:B449  81 FD 2853				cmp	bp,2853h
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 372

020A:B44D  73 18				jae	loc_2005		; Jump if above or =
020A:B44F  80 3E 282C 28			cmp	byte ptr ds:[282Ch],28h	; (D233:282C=0E2h) '('
020A:B454  74 11				je	loc_2005		; Jump if equal
020A:B456  F6 06 14AD 02			test	byte ptr ds:[14ADh],2	; (D233:14AD=4)
020A:B45B  74 07				jz	loc_2004		; Jump if zero
020A:B45D  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:B462  74 03				jz	loc_2005		; Jump if zero
020A:B464			loc_2004:
020A:B464  E8 0BD1				call	$+0BD4h
020A:B467			loc_2005:
020A:B467  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (D233:2A75=7) 'O'
020A:B46C  74 03				je	loc_2006		; Jump if equal
020A:B46E  E9 00E7				jmp	loc_2017		; (B558)
020A:B471			loc_2006:
020A:B471  59					pop	cx
020A:B472  51					push	cx
020A:B473  F6 C1 02				test	cl,2
020A:B476  74 0E				jz	loc_2008		; Jump if zero
020A:B478  26: 8A 45 04				mov	al,es:[di+4]
020A:B47C  24 07				and	al,7
020A:B47E  74 03				jz	loc_2007		; Jump if zero
020A:B480  E9 00D5				jmp	loc_2017		; (B558)
020A:B483			loc_2007:
020A:B483  E9 0096				jmp	loc_2013		; (B51C)
020A:B486			loc_2008:
020A:B486  26: F6 45 04 18			test	byte ptr es:[di+4],18h
020A:B48B  75 12				jnz	loc_2010		; Jump if not zero
020A:B48D  F7 06 42CC 0400			test	word ptr ds:[42CCh],400h	; (D233:42CC=1C74h)
020A:B493  74 03				jz	loc_2009		; Jump if zero
020A:B495  E9 0084				jmp	loc_2013		; (B51C)
020A:B498			loc_2009:
020A:B498  80 3E 2C40 01			cmp	byte ptr ds:[2C40h],1	; (D233:2C40=53h)
020A:B49D  74 7D				je	loc_2013		; Jump if equal
020A:B49F			loc_2010:
020A:B49F  26: 8B 05				mov	ax,es:[di]
020A:B4A2  A3 2D94				mov	word ptr ds:[2D94h],ax	; (D233:2D94=1530h)
020A:B4A5  26: 8B 45 02				mov	ax,es:[di+2]
020A:B4A9  A3 2D96				mov	word ptr ds:[2D96h],ax	; (D233:2D96=70Eh)
020A:B4AC  80 0E 2D8D 02			or	byte ptr ds:[2D8Dh],2	; (D233:2D8D=21h)
020A:B4B1  C7 06 2DB2 FFFF			mov	word ptr ds:[2DB2h],0FFFFh	; (D233:2DB2=374h)
020A:B4B7  26: 8A 45 32				mov	al,es:[di+32h]
020A:B4BB  24 38				and	al,38h			; '8'
020A:B4BD  3C 38				cmp	al,38h			; '8'
020A:B4BF  75 5B				jne	loc_2013		; Jump if not equal
020A:B4C1  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020A:B4C6  74 05				jz	loc_2011		; Jump if zero
020A:B4C8  C6 06 47B4 01			mov	byte ptr ds:[47B4h],1	; (D233:47B4=0C4h)
020A:B4CD			loc_2011:
020A:B4CD  C6 06 2D8D 05			mov	byte ptr ds:[2D8Dh],5	; (D233:2D8D=21h)
020A:B4D2  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0AEh)
020A:B4D7  75 43				jne	loc_2013		; Jump if not equal
020A:B4D9  51					push	cx
020A:B4DA  57					push	di
020A:B4DB  2E: FF 36 4863			push	cs:data_507		; (020A:4863=0B9E8h)
020A:B4E0  06					push	es
020A:B4E1  E8 E37A				call	sub_145			; (985E)
020A:B4E4  55					push	bp
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 373

020A:B4E5  E8 DDEC				call	sub_130			; (92D4)
020A:B4E8  8B FD				mov	di,bp
020A:B4EA  5D					pop	bp
020A:B4EB  BE 3760				mov	si,3760h
020A:B4EE  B9 3778				mov	cx,3778h
020A:B4F1  81 E9 375E				sub	cx,375Eh
020A:B4F5  83 E9 02				sub	cx,2
020A:B4F8  FC					cld				; Clear direction
020A:B4F9  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:B4FB  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B500  5A					pop	dx
020A:B501  8E C2				mov	es,dx
020A:B503  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:B508  5A					pop	dx
020A:B509  75 0A				jnz	loc_2012		; Jump if not zero
020A:B50B  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:B510  74 03				je	loc_2012		; Jump if equal
020A:B512  E8 E61F				call	sub_151			; (9B34)
020A:B515			loc_2012:
020A:B515  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B51A  5F					pop	di
020A:B51B  59					pop	cx
020A:B51C			loc_2013:
020A:B51C  26: 8A 45 04				mov	al,es:[di+4]
020A:B520  A8 01				test	al,1
020A:B522  74 04				jz	loc_2014		; Jump if zero
020A:B524  A8 02				test	al,2
020A:B526  75 14				jnz	loc_2015		; Jump if not zero
020A:B528			loc_2014:
020A:B528  0C 03				or	al,3
020A:B52A  26: 88 45 04				mov	es:[di+4],al
020A:B52E  57					push	di
020A:B52F  83 C7 09				add	di,9
020A:B532  BE 2ED4				mov	si,2ED4h
020A:B535  B9 0029				mov	cx,29h
020A:B538  FC					cld				; Clear direction
020A:B539  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:B53B  5F					pop	di
020A:B53C			loc_2015:
020A:B53C  26: 8A 45 32				mov	al,es:[di+32h]
020A:B540  A8 80				test	al,80h
020A:B542  74 08				jz	loc_2016		; Jump if zero
020A:B544  26: 8B 4D 33				mov	cx,es:[di+33h]
020A:B548  89 0E 2EF4				mov	word ptr ds:[2EF4h],cx	; (9B68:2EF4=2020h)
020A:B54C			loc_2016:
020A:B54C  A8 40				test	al,40h			; '@'
020A:B54E  74 08				jz	loc_2017		; Jump if zero
020A:B550  26: 8B 4D 35				mov	cx,es:[di+35h]
020A:B554  89 0E 2EF2				mov	word ptr ds:[2EF2h],cx	; (9B68:2EF2=2020h)
020A:B558			loc_2017:
020A:B558  80 3E 263D 06			cmp	byte ptr ds:[263Dh],6	; (9B68:263D=0AEh)
020A:B55D  72 07				jb	loc_2018		; Jump if below
020A:B55F  80 3E 2638 04			cmp	byte ptr ds:[2638h],4	; (9B68:2638=0E0h)
020A:B564  72 13				jb	loc_2020		; Jump if below
020A:B566			loc_2018:
020A:B566  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (9B68:2A75=0A0h) 'O'
020A:B56B  74 07				je	loc_2019		; Jump if equal
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 374

020A:B56D  26: F6 45 04 20			test	byte ptr es:[di+4],20h	; ' '
020A:B572  75 05				jnz	loc_2020		; Jump if not zero
020A:B574			loc_2019:
020A:B574  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:B579			loc_2020:
020A:B579  59					pop	cx
020A:B57A  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (9B68:2A75=0A0h) 'O'
020A:B57F  75 0C				jne	loc_2021		; Jump if not equal
020A:B581  F6 C1 01				test	cl,1
020A:B584  74 45				jz	loc_2023		; Jump if zero
020A:B586  26: 80 4D 04 80			or	byte ptr es:[di+4],80h
020A:B58B  EB 3E				jmp	short loc_2023		; (B5CB)
020A:B58D			loc_2021:
020A:B58D  F6 C1 04				test	cl,4
020A:B590  75 18				jnz	loc_2022		; Jump if not zero
020A:B592  A1 2D9C				mov	ax,word ptr ds:[2D9Ch]	; (9B68:2D9C=0ADA8h)
020A:B595  A3 2DA0				mov	word ptr ds:[2DA0h],ax	; (9B68:2DA0=0AF20h)
020A:B598  A1 2D9E				mov	ax,word ptr ds:[2D9Eh]	; (9B68:2D9E=0AEADh)
020A:B59B  A3 2DA2				mov	word ptr ds:[2DA2h],ax	; (9B68:2DA2=0A8E0h)
020A:B59E  A1 2D98				mov	ax,word ptr ds:[2D98h]	; (9B68:2D98=0A820h)
020A:B5A1  A3 2D9C				mov	word ptr ds:[2D9Ch],ax	; (9B68:2D9C=0ADA8h)
020A:B5A4  A1 2D9A				mov	ax,word ptr ds:[2D9Ah]	; (9B68:2D9A=0E2E1h)
020A:B5A7  A3 2D9E				mov	word ptr ds:[2D9Eh],ax	; (9B68:2D9E=0AEADh)
020A:B5AA			loc_2022:
020A:B5AA  A1 37A2				mov	ax,word ptr ds:[37A2h]	; (9B68:37A2=92E5h)
020A:B5AD  A3 2D98				mov	word ptr ds:[2D98h],ax	; (9B68:2D98=0A820h)
020A:B5B0  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (9B68:37A4=0)
020A:B5B3  A3 2D9A				mov	word ptr ds:[2D9Ah],ax	; (9B68:2D9A=0E2E1h)
020A:B5B6  89 3E 42BA				mov	word ptr ds:[42BAh],di	; (9B68:42BA=0)
020A:B5BA  F6 C1 08				test	cl,8
020A:B5BD  74 0C				jz	loc_2023		; Jump if zero
020A:B5BF  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:B5C4  75 05				jnz	loc_2023		; Jump if not zero
020A:B5C6  26: C6 45 06 FF			mov	byte ptr es:[di+6],0FFh
020A:B5CB			loc_2023:
020A:B5CB  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B5D0  5A					pop	dx
020A:B5D1  8E C2				mov	es,dx
020A:B5D3  2E: 3B 16 4861			cmp	dx,cs:data_506		; (020A:4861=0D233h)
020A:B5D8  5A					pop	dx
020A:B5D9  75 0A				jnz	loc_2024		; Jump if not zero
020A:B5DB  2E: 3B 16 4863			cmp	dx,cs:data_507		; (020A:4863=0B9E8h)
020A:B5E0  74 03				je	loc_2024		; Jump if equal
020A:B5E2  E8 E54F				call	sub_151			; (9B34)
020A:B5E5			loc_2024:
020A:B5E5  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B5EA  5F					pop	di
020A:B5EB  5E					pop	si
020A:B5EC  5A					pop	dx
020A:B5ED  58					pop	ax
020A:B5EE  C3					retn
				sub_161		endp
  
020A:B5EF  00 00				add	[bx+si],al
020A:B5F1  00 00				add	[bx+si],al
020A:B5F3  00 B4 E804				add	byte ptr ds:[0E804h][si],dh	; (020A:E804=80h)
020A:B5F7  EF					out	dx,ax			; port 0, DMA-1 bas&add ch 0
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 375

020A:B5F8  CD E8				int	0E8h
020A:B5FA  84 CA				test	cl,dl
020A:B5FC  E8 E25F				call	sub_145			; (985E)
020A:B5FF  E8 E277				call	sub_149			; (9879)
020A:B602  83 3E 2A22 00			cmp	word ptr ds:[2A22h],0	; (9B68:2A22=0AEADh)
020A:B607  74 03				je	loc_2025		; Jump if equal
020A:B609  A1 2A22				mov	ax,word ptr ds:[2A22h]	; (9B68:2A22=0AEADh)
020A:B60C			loc_2025:
020A:B60C  A3 2A24				mov	word ptr ds:[2A24h],ax	; (9B68:2A24=0AEA3h)
020A:B60F  E8 138A				call	$+138Dh
020A:B612  A1 278F				mov	ax,word ptr ds:[278Fh]	; (9B68:278F=0A0Dh)
020A:B615  3D 0000				cmp	ax,0
020A:B618  75 0D				jne	loc_2026		; Jump if not equal
020A:B61A  83 3E 278D 00			cmp	word ptr ds:[278Dh],0	; (9B68:278D=0A0Dh)
020A:B61F  75 06				jne	loc_2026		; Jump if not equal
020A:B621  B8 0002				mov	ax,2
020A:B624  E9 08D5				jmp	$+8D8h
020A:B627			loc_2026:
020A:B627  8B D8				mov	bx,ax
020A:B629  83 E3 F0				and	bx,0FFF0h
020A:B62C  C6 06 1C42 41			mov	byte ptr ds:[1C42h],41h	; (9B68:1C42=0A5h) 'A'
020A:B631  74 02				jz	loc_2027		; Jump if zero
020A:B633  EB 77				jmp	short loc_2030		; (B6AC)
020A:B635			loc_2027:
020A:B635  B1 0C				mov	cl,0Ch
020A:B637  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:B639  8B 1E 278D				mov	bx,word ptr ds:[278Dh]	; (9B68:278D=0A0Dh)
020A:B63D  B1 04				mov	cl,4
020A:B63F  D3 EB				shr	bx,cl			; Shift w/zeros fill
020A:B641  03 D8				add	bx,ax
020A:B643  43					inc	bx
020A:B644  43					inc	bx
020A:B645  83 FB 01				cmp	bx,1
020A:B648  C6 06 1C42 42			mov	byte ptr ds:[1C42h],42h	; (9B68:1C42=0A5h) 'B'
020A:B64D  76 5D				jbe	loc_2030		; Jump if below or =
020A:B64F  8B D3				mov	dx,bx
020A:B651  E8 E225				call	sub_149			; (9879)
020A:B654  83 3E 2A22 00			cmp	word ptr ds:[2A22h],0	; (9B68:2A22=0AEADh)
020A:B659  74 03				je	loc_2028		; Jump if equal
020A:B65B  A1 2A22				mov	ax,word ptr ds:[2A22h]	; (9B68:2A22=0AEADh)
020A:B65E			loc_2028:
020A:B65E  8C C9				mov	cx,cs
020A:B660  2B C1				sub	ax,cx
020A:B662  8B 0E 263F				mov	cx,word ptr ds:[263Fh]	; (9B68:263F=0E0A5h)
020A:B666  2B C8				sub	cx,ax
020A:B668  72 42				jc	loc_2030		; Jump if carry Set
020A:B66A  83 E9 20				sub	cx,20h
020A:B66D  72 3D				jc	loc_2030		; Jump if carry Set
020A:B66F  3B CA				cmp	cx,dx
020A:B671  76 39				jbe	loc_2030		; Jump if below or =
020A:B673  83 3E 2A22 00			cmp	word ptr ds:[2A22h],0	; (9B68:2A22=0AEADh)
020A:B678  75 38				jne	loc_2031		; Jump if not equal
020A:B67A  B8 FFFF				mov	ax,0FFFFh
020A:B67D  2D 1064				sub	ax,1064h
020A:B680  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:B682  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:B684  D1 E8				shr	ax,1			; Shift w/zeros fill
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 376

020A:B686  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:B688  2B CA				sub	cx,dx
020A:B68A  3B C8				cmp	cx,ax
020A:B68C  73 02				jae	loc_2029		; Jump if above or =
020A:B68E  8B C1				mov	ax,cx
020A:B690			loc_2029:
020A:B690  01 06 2A24				add	word ptr ds:[2A24h],ax	; (9B68:2A24=0AEA3h)
020A:B694  E8 E1DF				call	sub_148			; (9876)
020A:B697  8B D8				mov	bx,ax
020A:B699  A1 2A24				mov	ax,word ptr ds:[2A24h]	; (9B68:2A24=0AEA3h)
020A:B69C  2B C3				sub	ax,bx
020A:B69E  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:B6A0  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:B6A2  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:B6A4  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:B6A6  48					dec	ax
020A:B6A7  A3 430E				mov	word ptr ds:[430Eh],ax	; (9B68:430E=0)
020A:B6AA  EB 06				jmp	short loc_2031		; (B6B2)
020A:B6AC			loc_2030:
020A:B6AC  B8 0008				mov	ax,8
020A:B6AF  E9 084A				jmp	$+84Dh
020A:B6B2			loc_2031:
020A:B6B2  8B 1E 263F				mov	bx,word ptr ds:[263Fh]	; (9B68:263F=0E0A5h)
020A:B6B6  8E 06 48E1				mov	es,word ptr ds:[48E1h]	; (9B68:48E1=99h)
020A:B6BA  B4 4A				mov	ah,4Ah			; 'J'
020A:B6BC  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change mem allocation, bx=siz
020A:B6BE  73 07				jnc	loc_2032		; Jump if carry=0
020A:B6C0  C6 06 1C42 44			mov	byte ptr ds:[1C42h],44h	; (9B68:1C42=0A5h) 'D'
020A:B6C5  EB E5				jmp	short loc_2030		; (B6AC)
020A:B6C7			loc_2032:
020A:B6C7  8C C8				mov	ax,cs
020A:B6C9  03 06 263F				add	ax,word ptr ds:[263Fh]	; (9B68:263F=0E0A5h)
020A:B6CD  2D 0010				sub	ax,10h
020A:B6D0  8B D0				mov	dx,ax
020A:B6D2  A1 2A24				mov	ax,word ptr ds:[2A24h]	; (9B68:2A24=0AEA3h)
020A:B6D5  8E C0				mov	es,ax
020A:B6D7  2B D0				sub	dx,ax
020A:B6D9			loc_2033:
020A:B6D9  8B C2				mov	ax,dx
020A:B6DB  25 F000				and	ax,0F000h
020A:B6DE  74 17				jz	loc_2034		; Jump if zero
020A:B6E0  81 EA 1000				sub	dx,1000h
020A:B6E4  B9 8000				mov	cx,8000h
020A:B6E7  33 FF				xor	di,di			; Zero register
020A:B6E9  33 C0				xor	ax,ax			; Zero register
020A:B6EB  FC					cld				; Clear direction
020A:B6EC  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:B6EE  8C C0				mov	ax,es
020A:B6F0  05 1000				add	ax,1000h
020A:B6F3  8E C0				mov	es,ax
020A:B6F5  EB E2				jmp	short loc_2033		; (B6D9)
020A:B6F7			loc_2034:
020A:B6F7  B1 03				mov	cl,3
020A:B6F9  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:B6FB  8B CA				mov	cx,dx
020A:B6FD  33 FF				xor	di,di			; Zero register
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 377

020A:B6FF  33 C0				xor	ax,ax			; Zero register
020A:B701  FC					cld				; Clear direction
020A:B702  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:B704  C7 06 263B 0040			mov	word ptr ds:[263Bh],40h	; (9B68:263B=0E120h)
020A:B70A  9A 16BF:0704		;*		call	far ptr sub_190		;*(16BF:0704)
020A:B70A  9A 04 07 BF 16			db	 9Ah, 04h, 07h,0BFh, 16h
020A:B70F  E8 E14C				call	sub_145			; (985E)
020A:B712  A1 2A24				mov	ax,word ptr ds:[2A24h]	; (9B68:2A24=0AEA3h)
020A:B715  05 0010				add	ax,10h
020A:B718  A3 26D6				mov	word ptr ds:[26D6h],ax	; (9B68:26D6=0A2AEh)
020A:B71B  C7 06 26D8 0000			mov	word ptr ds:[26D8h],0	; (9B68:26D8=0AD20h)
020A:B721  80 3E 2C3F 03			cmp	byte ptr ds:[2C3Fh],3	; (9B68:2C3F=0ABh)
020A:B726  75 03				jne	loc_2035		; Jump if not equal
020A:B728  A3 26D8				mov	word ptr ds:[26D8h],ax	; (9B68:26D8=0AD20h)
020A:B72B			loc_2035:
020A:B72B  FA					cli				; Disable interrupts
020A:B72C  2E: 8C 16 6952			mov	word ptr cs:[6952h],ss	; (020A:6952=0BFC2h)
020A:B731  2E: 89 26 6950			mov	word ptr cs:[6950h],sp	; (020A:6950=8E12h)
020A:B736  BC 0258				mov	sp,258h
020A:B739  FB					sti				; Enable interrupts
020A:B73A  BA 2BB2				mov	dx,2BB2h
020A:B73D  BB 26D6				mov	bx,26D6h
020A:B740  B0 03				mov	al,3
020A:B742  B4 4B				mov	ah,4Bh			; 'K'
020A:B744  CD 21				int	21h			; DOS Services  ah=function 4Bh
										;  run progm @ds:dx, parm @es:bx
020A:B746  FA					cli				; Disable interrupts
020A:B747  2E: 8E 16 6952			mov	ss,word ptr cs:[6952h]	; (020A:6952=0BFC2h)
020A:B74C  2E: 8B 26 6950			mov	sp,word ptr cs:[6950h]	; (020A:6950=8E12h)
020A:B751  FB					sti				; Enable interrupts
020A:B752  9C					pushf				; Push flags
020A:B753  E8 E108				call	sub_145			; (985E)
020A:B756  E8 E0F0				call	sub_140			; (9849)
020A:B759  9D					popf				; Pop flags
020A:B75A  73 08				jnc	loc_2036		; Jump if carry=0
020A:B75C  C6 06 1C42 45			mov	byte ptr ds:[1C42h],45h	; (9B68:1C42=0A5h) 'E'
020A:B761  E9 0798				jmp	$+79Bh
020A:B764			loc_2036:
020A:B764  C7 06 263B 0041			mov	word ptr ds:[263Bh],41h	; (9B68:263B=0E120h)
020A:B76A  9A 16BF:0704		;*		call	far ptr near ptr sub_190	;*(16BF:0704)
020A:B76A  9A 04 07 BF 16			db	 9Ah, 04h, 07h,0BFh, 16h
020A:B76F  C6 06 48DD 01			mov	byte ptr ds:[48DDh],1	; (9B68:48DD=95h)
020A:B774  A1 2A24				mov	ax,word ptr ds:[2A24h]	; (9B68:2A24=0AEA3h)
020A:B777  05 0010				add	ax,10h
020A:B77A  A3 2A20				mov	word ptr ds:[2A20h],ax	; (9B68:2A20=0E2A5h)
020A:B77D  80 3E 2A1E 03			cmp	byte ptr ds:[2A1Eh],3	; (9B68:2A1E=0A0h)
020A:B782  74 21				je	loc_2037		; Jump if equal
020A:B784  80 3E 2A2B 00			cmp	byte ptr ds:[2A2Bh],0	; (9B68:2A2B=0A0h)
020A:B789  74 1D				je	loc_2038		; Jump if equal
020A:B78B  E8 E0C7				call	sub_142			; (9855)
020A:B78E  C6 06 2A2B 00			mov	byte ptr ds:[2A2Bh],0	; (9B68:2A2B=0A0h)
020A:B793  C6 06 2A26 00			mov	byte ptr ds:[2A26h],0	; (9B68:2A26=20h)
020A:B798  BF 0000				mov	di,0
020A:B79B  B9 1482				mov	cx,1482h
020A:B79E  B0 FF				mov	al,0FFh
020A:B7A0  FC					cld				; Clear direction
020A:B7A1  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 378

020A:B7A3  EB 03				jmp	short loc_2038		; (B7A8)
020A:B7A5			loc_2037:
020A:B7A5  E9 0656				jmp	$+659h
020A:B7A8			loc_2038:
020A:B7A8  BB 0000				mov	bx,0
020A:B7AB  80 3E 2C3F 03			cmp	byte ptr ds:[2C3Fh],3	; (9B68:2C3F=0ABh)
020A:B7B0  75 03				jne	loc_2039		; Jump if not equal
020A:B7B2  E9 00DE				jmp	loc_2047		; (B893)
020A:B7B5			loc_2039:
020A:B7B5  E8 E0A9				call	sub_146			; (9861)
020A:B7B8  26: 80 3E 0BE3 E9			cmp	byte ptr es:data_173,0E9h	; (020A:0BE3=0F6h)
020A:B7BE  75 3B				jne	loc_2040		; Jump if not equal
020A:B7C0  BE 3BDA				mov	si,3BDAh
020A:B7C3  BF 0BE6				mov	di,0BE6h
020A:B7C6  B9 3BE9				mov	cx,3BE9h
020A:B7C9  81 E9 3BDA				sub	cx,3BDAh
020A:B7CD  FC					cld				; Clear direction
020A:B7CE  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:B7D0  83 F9 00				cmp	cx,0
020A:B7D3  75 26				jne	loc_2040		; Jump if not equal
020A:B7D5  53					push	bx
020A:B7D6  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:B7DA  A0 11E8				mov	al,byte ptr ds:[11E8h]	; (9B68:11E8=0A5h)
020A:B7DD  88 47 52				mov	[bx+52h],al
020A:B7E0  B4 2D				mov	ah,2Dh			; '-'
020A:B7E2  E8 CC03				call	sub_112			; (83E8)
020A:B7E5  E8 C898		;*		call	sub_103			;*(8080)
020A:B7E5  E8 98 C8				db	0E8h, 98h,0C8h
020A:B7E8  9A 16BF:0340		;*		call	far ptr sub_180		;*(16BF:0340)
020A:B7E8  9A 40 03 BF 16			db	 9Ah, 40h, 03h,0BFh, 16h
020A:B7ED  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:B7F1  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:B7F5  5B					pop	bx
020A:B7F6  C6 06 3BE9 01			mov	byte ptr ds:[3BE9h],1	; (9B68:3BE9=0)
020A:B7FB			loc_2040:
020A:B7FB  C7 06 2A1A 0002			mov	word ptr ds:[2A1Ah],2	; (9B68:2A1A=0E3AAh)
020A:B801  80 3E 2C40 02			cmp	byte ptr ds:[2C40h],2	; (9B68:2C40=0E3h)
020A:B806  74 0E				je	loc_2041		; Jump if equal
020A:B808  80 3E 2C40 04			cmp	byte ptr ds:[2C40h],4	; (9B68:2C40=0E3h)
020A:B80D  74 07				je	loc_2041		; Jump if equal
020A:B80F  80 3E 2C40 05			cmp	byte ptr ds:[2C40h],5	; (9B68:2C40=0E3h)
020A:B814  75 17				jne	loc_2042		; Jump if not equal
020A:B816			loc_2041:
020A:B816  9A 16BF:1294		;*		call	far ptr sub_206		;*(16BF:1294)
020A:B816  9A 94 12 BF 16			db	 9Ah, 94h, 12h,0BFh, 16h
020A:B81B  73 10				jnc	loc_2042		; Jump if carry=0
020A:B81D  C6 06 2C40 05			mov	byte ptr ds:[2C40h],5	; (9B68:2C40=0E3h)
020A:B822  9A 16BF:066C		;*		call	far ptr sub_189		;*(16BF:066C)
020A:B822  9A 6C 06 BF 16			db	 9Ah, 6Ch, 06h,0BFh, 16h
020A:B827  C7 06 2A1A 000A			mov	word ptr ds:[2A1Ah],0Ah	; (9B68:2A1A=0E3AAh)
020A:B82D			loc_2042:
020A:B82D  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:B830  80 3E 2C40 02			cmp	byte ptr ds:[2C40h],2	; (9B68:2C40=0E3h)
020A:B835  75 06				jne	loc_2043		; Jump if not equal
020A:B837  2D 0010				sub	ax,10h
020A:B83A  A3 2A20				mov	word ptr ds:[2A20h],ax	; (9B68:2A20=0E2A5h)
020A:B83D			loc_2043:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 379

020A:B83D  E8 E015				call	sub_142			; (9855)
020A:B840  26: 89 07				mov	es:[bx],ax
020A:B843  26: 89 47 06				mov	es:[bx+6],ax
020A:B847  26: 89 47 08				mov	es:[bx+8],ax
020A:B84B  26: C6 47 0E 00			mov	byte ptr es:[bx+0Eh],0
020A:B850  A3 2A4C				mov	word ptr ds:[2A4Ch],ax	; (9B68:2A4C=0E1AAh)
020A:B853  33 C0				xor	ax,ax			; Zero register
020A:B855  80 3E 2C40 02			cmp	byte ptr ds:[2C40h],2	; (9B68:2C40=0E3h)
020A:B85A  75 09				jne	loc_2044		; Jump if not equal
020A:B85C  B8 0100				mov	ax,100h
020A:B85F  C7 06 2A1A 0102			mov	word ptr ds:[2A1Ah],102h	; (9B68:2A1A=0E3AAh)
020A:B865			loc_2044:
020A:B865  26: 89 47 02				mov	es:[bx+2],ax
020A:B869  83 3E 278F 00			cmp	word ptr ds:[278Fh],0	; (9B68:278F=0A0Dh)
020A:B86E  75 12				jne	loc_2046		; Jump if not equal
020A:B870  03 06 278D				add	ax,word ptr ds:[278Dh]	; (9B68:278D=0A0Dh)
020A:B874  83 3E 278D 00			cmp	word ptr ds:[278Dh],0	; (9B68:278D=0A0Dh)
020A:B879  75 06				jne	loc_2045		; Jump if not equal
020A:B87B  B8 0002				mov	ax,2
020A:B87E  E9 067B				jmp	$+67Eh
020A:B881			loc_2045:
020A:B881  48					dec	ax
020A:B882			loc_2046:
020A:B882  26: 89 47 04				mov	es:[bx+4],ax
020A:B886  26: C7 47 0A 0000			mov	word ptr es:[bx+0Ah],0
020A:B88C  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:B890  E9 056B				jmp	$+56Eh
020A:B893			loc_2047:
020A:B893  C7 06 263B 0042			mov	word ptr ds:[263Bh],42h	; (9B68:263B=0E120h)
020A:B899  9A 16BF:0704		;*		call	far ptr near ptr sub_190	;*(16BF:0704)
020A:B899  9A 04 07 BF 16			db	 9Ah, 04h, 07h,0BFh, 16h
020A:B89E  8B FB				mov	di,bx
020A:B8A0  C7 06 2A1A 0002			mov	word ptr ds:[2A1Ah],2	; (9B68:2A1A=0E3AAh)
020A:B8A6  9A 16BF:1294		;*		call	far ptr sub_206		;*(16BF:1294)
020A:B8A6  9A 94 12 BF 16			db	 9Ah, 94h, 12h,0BFh, 16h
020A:B8AB  73 0F				jnc	loc_2048		; Jump if carry=0
020A:B8AD  C6 06 2C40 05			mov	byte ptr ds:[2C40h],5	; (9B68:2C40=0E3h)
020A:B8B2  C6 06 1422 01			mov	byte ptr ds:[1422h],1	; (9B68:1422=0A0h)
020A:B8B7  9A 16BF:066C		;*		call	far ptr sub_189		;*(16BF:066C)
020A:B8B7  9A 6C 06 BF 16			db	 9Ah, 6Ch, 06h,0BFh, 16h
020A:B8BC			loc_2048:
020A:B8BC  E8 DFA2				call	sub_146			; (9861)
020A:B8BF  26: 81 3E 0BE3 5A4D			cmp	es:data_173,5A4Dh	; (020A:0BE3=6F6h)
020A:B8C6  74 06				je	loc_2049		; Jump if equal
020A:B8C8  B8 0014				mov	ax,14h
020A:B8CB  E9 062E				jmp	$+631h
020A:B8CE			loc_2049:
020A:B8CE  33 C0				xor	ax,ax			; Zero register
020A:B8D0  26: 39 06 0BE9			cmp	es:data_176,ax		; (020A:0BE9=801Eh)
020A:B8D5  75 76				jne	loc_2053		; Jump if not equal
020A:B8D7  26: 39 06 0BED			cmp	es:data_178,ax		; (020A:0BED=4000h)
020A:B8DC  74 6F				je	loc_2053		; Jump if equal
020A:B8DE  26: 81 3E 0BF7 0100			cmp	word ptr es:[0BF7h],100h	; (020A:0BF7=8016h)
020A:B8E5  77 07				ja	loc_2050		; Jump if above
020A:B8E7  26: 39 06 0BF9			cmp	word ptr es:[0BF9h],ax	; (020A:0BF9=9726h)
020A:B8EC  74 5F				je	loc_2053		; Jump if equal
020A:B8EE			loc_2050:
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 380

020A:B8EE  26: 8B 1E 0BF7			mov	bx,word ptr es:[0BF7h]	; (020A:0BF7=8016h)
020A:B8F3  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:B8F6  26: 03 06 0BF9			add	ax,word ptr es:[0BF9h]	; (020A:0BF9=9726h)
020A:B8FB  06					push	es
020A:B8FC  8E C0				mov	es,ax
020A:B8FE  26: 81 7F FE 4252			cmp	word ptr es:[bx-2],4252h
020A:B904  07					pop	es
020A:B905  74 1F				jz	loc_2051		; Jump if zero
020A:B907  83 FB 10				cmp	bx,10h
020A:B90A  75 41				jne	loc_2053		; Jump if not equal
020A:B90C  06					push	es
020A:B90D  8E C0				mov	es,ax
020A:B90F  26: 81 BF 00B8 2EFB			cmp	word ptr es:[0B8h][bx],2EFBh	; (79CB:00B8=0)
020A:B916  07					pop	es
020A:B917  75 34				jnz	loc_2053		; Jump if not zero
020A:B919  06					push	es
020A:B91A  8E C0				mov	es,ax
020A:B91C  26: 81 BF 00BA 2FFF			cmp	word ptr es:[0BAh][bx],2FFFh	; (79CB:00BA=0)
020A:B923  07					pop	es
020A:B924  75 27				jnz	loc_2053		; Jump if not zero
020A:B926			loc_2051:
020A:B926  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:B92A  A0 11E8				mov	al,byte ptr ds:[11E8h]	; (9B68:11E8=0A5h)
020A:B92D  88 47 52				mov	[bx+52h],al
020A:B930  B4 21				mov	ah,21h			; '!'
020A:B932  E8 CAB3				call	sub_112			; (83E8)
020A:B935  E8 C748		;*		call	sub_103			;*(8080)
020A:B935  E8 48 C7				db	0E8h, 48h,0C7h
020A:B938  F7 06 2EC4 0004			test	word ptr ds:[2EC4h],4	; (9B68:2EC4=0ADA8h)
020A:B93E  75 05				jnz	loc_2052		; Jump if not zero
020A:B940  9A 16BF:0340		;*		call	far ptr sub_180		;*(16BF:0340)
020A:B940  9A 40 03 BF 16			db	 9Ah, 40h, 03h,0BFh, 16h
020A:B945			loc_2052:
020A:B945  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:B949  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:B94D			loc_2053:
020A:B94D  C7 06 263B 0043			mov	word ptr ds:[263Bh],43h	; (9B68:263B=0E120h)
020A:B953  9A 16BF:0704		;*		call	far ptr sub_190		;*(16BF:0704)
020A:B953  9A 04 07 BF 16			db	 9Ah, 04h, 07h,0BFh, 16h
020A:B958  26: A1 0BE9				mov	ax,es:data_176		; (020A:0BE9=801Eh)
020A:B95C  A3 38AF				mov	word ptr ds:[38AFh],ax	; (9B68:38AF=4554h)
020A:B95F  3D 2243				cmp	ax,2243h
020A:B962  76 03				jbe	loc_2054		; Jump if below or =
020A:B964  B8 2243				mov	ax,2243h
020A:B967			loc_2054:
020A:B967  A3 38B1				mov	word ptr ds:[38B1h],ax	; (9B68:38B1=504Dh)
020A:B96A  26: A1 0BF1				mov	ax,es:data_179		; (020A:0BF1=0C30Ah)
020A:B96E  26: 8B 1E 0BF3			mov	bx,es:data_180		; (020A:0BF3=3B4h)
020A:B973  E8 DEDF				call	sub_142			; (9855)
020A:B976  0B C0				or	ax,ax			; Zero ?
020A:B978  75 04				jnz	loc_2055		; Jump if not zero
020A:B97A  0B DB				or	bx,bx			; Zero ?
020A:B97C  74 30				jz	loc_2056		; Jump if zero
020A:B97E			loc_2055:
020A:B97E  C6 06 2A26 01			mov	byte ptr ds:[2A26h],1	; (9B68:2A26=20h)
020A:B983  03 06 2A20				add	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:B987  26: 89 05				mov	es:[di],ax
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 381

020A:B98A  A3 2A27				mov	word ptr ds:[2A27h],ax	; (9B68:2A27=0A0E4h)
020A:B98D  A3 2A4C				mov	word ptr ds:[2A4Ch],ax	; (9B68:2A4C=0E1AAh)
020A:B990  26: C7 45 02 0000			mov	word ptr es:[di+2],0
020A:B996  4B					dec	bx
020A:B997  26: 89 5D 04				mov	es:[di+4],bx
020A:B99B  89 1E 2A4A				mov	word ptr ds:[2A4Ah],bx	; (9B68:2A4A=0A592h)
020A:B99F  26: C7 45 0A 0003			mov	word ptr es:[di+0Ah],3
020A:B9A5  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:B9AA  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:B9AE			loc_2056:
020A:B9AE  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:B9B1  80 3E 2A26 01			cmp	byte ptr ds:[2A26h],1	; (9B68:2A26=20h)
020A:B9B6  75 08				jne	loc_2057		; Jump if not equal
020A:B9B8  26: 3B 05				cmp	ax,es:[di]
020A:B9BB  74 43				je	loc_2060		; Jump if equal
020A:B9BD  83 C7 15				add	di,15h
020A:B9C0			loc_2057:
020A:B9C0  8B D8				mov	bx,ax
020A:B9C2  83 EB 10				sub	bx,10h
020A:B9C5  3B 1E 2A27				cmp	bx,word ptr ds:[2A27h]	; (9B68:2A27=0A0E4h)
020A:B9C9  74 15				je	loc_2058		; Jump if equal
020A:B9CB  26: 89 5D 06				mov	es:[di+6],bx
020A:B9CF  26: 89 5D 08				mov	es:[di+8],bx
020A:B9D3  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:B9D8  F7 06 42CC 1000			test	word ptr ds:[42CCh],1000h	; (9B68:42CC=0)
020A:B9DE  74 08				jz	loc_2059		; Jump if zero
020A:B9E0			loc_2058:
020A:B9E0  26: 89 45 06				mov	es:[di+6],ax
020A:B9E4  26: 89 45 08				mov	es:[di+8],ax
020A:B9E8			loc_2059:
020A:B9E8  26: 89 05				mov	es:[di],ax
020A:B9EB  26: C7 45 02 0000			mov	word ptr es:[di+2],0
020A:B9F1  26: C7 45 0A 0000			mov	word ptr es:[di+0Ah],0
020A:B9F7  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:B9FC  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:BA00			loc_2060:
020A:BA00  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:BA03  8B D8				mov	bx,ax
020A:BA05  33 C0				xor	ax,ax			; Zero register
020A:BA07  E8 DE57				call	sub_146			; (9861)
020A:BA0A  26: 03 1E 0BF9			add	bx,word ptr es:[0BF9h]	; (020A:0BF9=9726h)
020A:BA0F  BA 0010				mov	dx,10h
020A:BA12  E8 D213				call	sub_126			; (8C28)
020A:BA15  72 38				jc	loc_2061		; Jump if carry Set
020A:BA17  26: 89 1D				mov	es:[di],bx
020A:BA1A  33 C0				xor	ax,ax			; Zero register
020A:BA1C  26: 89 45 02				mov	es:[di+2],ax
020A:BA20  26: 89 45 04				mov	es:[di+4],ax
020A:BA24  26: 89 45 0A				mov	es:[di+0Ah],ax
020A:BA28  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:BA2D  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (D233:2A20=8B1Ch)
020A:BA30  2D 0010				sub	ax,10h
020A:BA33  26: 89 45 06				mov	es:[di+6],ax
020A:BA37  26: 89 45 08				mov	es:[di+8],ax
020A:BA3B  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (D233:2A2B=75h)
020A:BA3F  F7 06 42CC 1000			test	word ptr ds:[42CCh],1000h	; (D233:42CC=1C74h)
020A:BA45  74 08				jz	loc_2061		; Jump if zero
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 382

020A:BA47  26: 89 5D 06				mov	es:[di+6],bx
020A:BA4B  26: 89 5D 06				mov	es:[di+6],bx
020A:BA4F			loc_2061:
020A:BA4F  C7 06 263B 0044			mov	word ptr ds:[263Bh],44h	; (D233:263B=0AF20h)
020A:BA55  9A 16BF:0704		;*		call	far ptr sub_190		;*(16BF:0704)
020A:BA55  9A 04 07 BF 16			db	 9Ah, 04h, 07h,0BFh, 16h
020A:BA5A  E8 DE04				call	sub_146			; (9861)
020A:BA5D  26: 8B 2E 0BFB			mov	bp,es:data_183		; (020A:0BFB=0F800h)
020A:BA62  81 C5 0BE3				add	bp,0BE3h
020A:BA66  26: 8B 36 0BE7			mov	si,es:data_175		; (020A:0BE7=7540h)
020A:BA6B  B1 05				mov	cl,5
020A:BA6D  D3 E6				shl	si,cl			; Shift w/zeros fill
020A:BA6F  26: A1 0BE5				mov	ax,es:data_174		; (020A:0BE5=97h)
020A:BA73  B1 04				mov	cl,4
020A:BA75  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:BA77  03 F0				add	si,ax
020A:BA79  83 EE 1F				sub	si,1Fh
020A:BA7C  26: 2B 36 0BEB			sub	si,es:data_177		; (020A:0BEB=970Eh)
020A:BA81  03 36 2A20				add	si,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:BA85			loc_2062:
020A:BA85  83 3E 38AF 00			cmp	word ptr ds:[38AFh],0	; (9B68:38AF=4554h)
020A:BA8A  75 03				jne	loc_2063		; Jump if not equal
020A:BA8C  E9 0095				jmp	loc_2069		; (BB24)
020A:BA8F			loc_2063:
020A:BA8F  E8 DDCF				call	sub_146			; (9861)
020A:BA92  26: 8B 5E 00				mov	bx,es:[bp]
020A:BA96  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:BA99  26: 03 46 02				add	ax,es:[bp+2]
020A:BA9D  8E C0				mov	es,ax
020A:BA9F  26: 8B 1F				mov	bx,es:[bx]
020A:BAA2  3B DE				cmp	bx,si
020A:BAA4  72 02				jb	loc_2064		; Jump if below
020A:BAA6  EB 31				jmp	short loc_2065		; (BAD9)
020A:BAA8			loc_2064:
020A:BAA8  33 C0				xor	ax,ax			; Zero register
020A:BAAA  BA 0010				mov	dx,10h
020A:BAAD  E8 D178				call	sub_126			; (8C28)
020A:BAB0  72 27				jc	loc_2065		; Jump if carry Set
020A:BAB2  26: 89 1D				mov	es:[di],bx
020A:BAB5  26: 89 45 02				mov	es:[di+2],ax
020A:BAB9  26: 89 45 04				mov	es:[di+4],ax
020A:BABD  26: 89 5D 06				mov	es:[di+6],bx
020A:BAC1  26: 89 5D 08				mov	es:[di+8],bx
020A:BAC5  26: 89 45 0A				mov	es:[di+0Ah],ax
020A:BAC9  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:BACE  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (D233:2A2B=75h)
020A:BAD2  80 3E 2A2B FA			cmp	byte ptr ds:[2A2Bh],0FAh	; (D233:2A2B=75h)
020A:BAD7  73 4B				jae	loc_2069		; Jump if above or =
020A:BAD9			loc_2065:
020A:BAD9  83 C5 04				add	bp,4
020A:BADC  81 FD 1060				cmp	bp,1060h
020A:BAE0  72 3B				jb	loc_2068		; Jump if below
020A:BAE2  BB 1063				mov	bx,1063h
020A:BAE5  2B DD				sub	bx,bp
020A:BAE7  0B DB				or	bx,bx			; Zero ?
020A:BAE9  74 10				jz	loc_2066		; Jump if zero
020A:BAEB  B9 FFFF				mov	cx,0FFFFh
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 383

020A:BAEE  33 D2				xor	dx,dx			; Zero register
020A:BAF0  2B D3				sub	dx,bx
020A:BAF2  B8 4201				mov	ax,4201h
020A:BAF5  8B 1E 37EC				mov	bx,word ptr ds:[37ECh]	; (D233:37EC=753h)
020A:BAF9  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, cx,dx=offset
020A:BAFB			loc_2066:
020A:BAFB  B9 1063				mov	cx,1063h
020A:BAFE  81 E9 0C63				sub	cx,0C63h
020A:BB02  BA 0C63				mov	dx,0C63h
020A:BB05  8B 1E 37EC				mov	bx,word ptr ds:[37ECh]	; (D233:37EC=753h)
020A:BB09  E8 DD40				call	sub_141			; (984C)
020A:BB0C  B4 3F				mov	ah,3Fh			; '?'
020A:BB0E  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, cx=bytes, to ds:dx
020A:BB10  E8 DD36				call	sub_140			; (9849)
020A:BB13  73 05				jnc	loc_2067		; Jump if carry=0
020A:BB15  B3 0E				mov	bl,0Eh
020A:BB17  E9 03E2				jmp	$+3E5h
020A:BB1A			loc_2067:
020A:BB1A  BD 0C63				mov	bp,0C63h
020A:BB1D			loc_2068:
020A:BB1D  FF 0E 38AF				dec	word ptr ds:[38AFh]	; (D233:38AF=6C7h)
020A:BB21  E9 FF61				jmp	loc_2062		; (BA85)
020A:BB24			loc_2069:
020A:BB24  C7 06 263B 0045			mov	word ptr ds:[263Bh],45h	; (D233:263B=0AF20h)
020A:BB2A  9A 16BF:0704		;*		call	far ptr sub_190		;*(16BF:0704)
020A:BB2A  9A 04 07 BF 16			db	 9Ah, 04h, 07h,0BFh, 16h
020A:BB2F  E8 88AE				call	sub_46			; (43E0)
020A:BB32  BA 0015				mov	dx,15h
020A:BB35  8B C2				mov	ax,dx
020A:BB37  8A 1E 2A2B				mov	bl,byte ptr ds:[2A2Bh]	; (D233:2A2B=75h)
020A:BB3B  FE CB				dec	bl
020A:BB3D  F6 E3				mul	bl			; ax = reg * al
020A:BB3F  05 0000				add	ax,0
020A:BB42  8B D8				mov	bx,ax
020A:BB44  26: 8B 47 0A				mov	ax,es:[bx+0Ah]
020A:BB48  24 03				and	al,3
020A:BB4A  3C 03				cmp	al,3
020A:BB4C  75 45				jne	loc_2070		; Jump if not equal
020A:BB4E  80 3E 2A2B 01			cmp	byte ptr ds:[2A2Bh],1	; (D233:2A2B=75h)
020A:BB53  74			data_632	db	74h
020A:BB54  03 E9				add	bp,cx
020A:BB56  9E					sahf				; Store ah into flags
020A:BB57  00 50 55				add	[bx+si+55h],dl
020A:BB5A  C6 06 26D5 01			mov	byte ptr ds:[26D5h],1	; (D233:26D5=4Fh)
020A:BB5F  26: 8B 47 04				mov	ax,es:[bx+4]
020A:BB63  40					inc	ax
020A:BB64  53					push	bx
020A:BB65  BD 5A2D				mov	bp,5A2Dh
020A:BB68  9A 16BF:0068		;*		call	far ptr sub_172		;*(16BF:0068)
020A:BB68  9A 68 00 BF 16			db	 9Ah, 68h, 00h,0BFh, 16h
020A:BB6D  5B					pop	bx
020A:BB6E  5D					pop	bp
020A:BB6F  58					pop	ax
020A:BB70  26: C6 47 0A 00			mov	byte ptr es:[bx+0Ah],0
020A:BB75  26: 8B 3F				mov	di,es:[bx]
     disam.lst						 Sourcer Listing v3.07    10-Sep-22  12:09 pm   Page 384

020A:BB78  26: 89 7F 06				mov	es:[bx+6],di
020A:BB7C  26: 89 7F 08				mov	es:[bx+8],di
020A:BB80  F7 06 42CC 1000			test	word ptr ds:[42CCh],1000h	; (D233:42CC=1C74h)
020A:BB86  75 0B				jnz	loc_2070		; Jump if not zero
020A:BB88  83 EF 10				sub	di,10h
020A:BB8B  26: 89 7F 06				mov	es:[bx+6],di
020A:BB8F  26: 89 7F 08				mov	es:[bx+8],di
020A:BB93			loc_2070:
020A:BB93  F6 C4 80				test	ah,80h
020A:BB96  75 5E				jnz	$+60h			; Jump if not zero
020A:BB98  53					push	bx
020A:BB99  E8 DCC5				call	sub_146			; (9861)
020A:BB9C  26: A1 0BE7				mov	ax,es:data_175		; (020A:0BE7=7540h)
020A:BBA0  B1 05				mov	cl,5
020A:BBA2  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:BBA4  26: 2B 06 0BEB			sub	ax,es:data_177		; (020A:0BEB=970Eh)
020A:BBA9  E8 DCA9				call	sub_142			; (9855)
020A:BBAC  26: 2B 07				sub	ax,es:[bx]
020A:BBAF  03 06 2A20				add	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:BBB3  2D 0020				sub	ax,20h
020A:BBB6  E8 DCA8				call	sub_146			; (9861)
020A:BBB9  26: 8B 1E 0BE5			mov	bx,es:data_174		; (020A:0BE5=97h)
  
